diff --git a/recipes-apps/blinky-init/.gdbinit b/recipes-apps/blinky-init/.gdbinit
deleted file mode 100644
index 760896a756bada91c6625fe928d9dfbb17efd8bf..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky-init/.gdbinit
+++ /dev/null
@@ -1,3 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
-
diff --git a/recipes-apps/blinky-init/README b/recipes-apps/blinky-init/README
deleted file mode 100644
index fdb79332851c3c400216c56a4f18dd09be30d000..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky-init/README
+++ /dev/null
@@ -1,31 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-You can easily import any already built application or script by copying
-it into this directory, and editing the automatically generated Makefile 
-as described below.
-
-Modify the "install:" target in Makefile to use $(TARGETINST) to install your
-prebuilt application or script to the host copy of the target file system
-referring to the comments of the "install:" target.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To install your prebuilt application or script to the target file system
-copy on the host, simply run the 
-    "petalinux-build -c rootfs/blinky-init"
-command.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
diff --git a/recipes-apps/blinky-init/blinky-init.bb b/recipes-apps/blinky-init/blinky-init.bb
deleted file mode 100644
index 2d757ccf59379eca8600d907908189cd5a063c98..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky-init/blinky-init.bb
+++ /dev/null
@@ -1,30 +0,0 @@
-#
-# This file is the blinky-init recipe.
-#
-
-SUMMARY = "Simple blinky-init application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-COMPATIBLE_MACHINE = "uz|pz"
-
-SRC_URI = "file://blinky-init \
-	"
-
-S = "${WORKDIR}"
-
-inherit update-rc.d
-
-INITSCRIPT_NAME = "blinky-init"
-INITSCRIPT_PARAMS = "start 99 S ."
-
-
-do_install() {
-    install -d ${D}${sysconfdir}/init.d
-    install -m 0755 ${S}/blinky-init ${D}${sysconfdir}/init.d/blinky-init
-}
-
-FILES_${PN} += "${sysconfdir}/*"
-
-
diff --git a/recipes-apps/blinky-init/files/pz/blinky-init b/recipes-apps/blinky-init/files/pz/blinky-init
deleted file mode 100644
index 53d950cc611870722ca45923bb2dfb4c2b7b5c52..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky-init/files/pz/blinky-init
+++ /dev/null
@@ -1,100 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Jan 02, 2018
-#  Design Name:         LED "Blinky" Application Daemon Launcher
-#  Module Name:         blinky-init(.sh)
-#  Project Name:        LED "Blinky" Application
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-#                       UltraZed-EG + I/O Carrier
-#                       UltraZed-EG + PCIe Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         Script to launch "Blinky" LED App as a daemon
-# 
-#  Dependencies:        
-#
-#  Revision:            Jan 02, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-DAEMON=/home/root/blinky
-#This script launches the application that will blink an LED mapped to
-#the Zynq or ZynqMP PS MIO
-#In this case the PS LED is mapped to MIO47
-DAEMON_OPTS="-m 47"
-
-start ()
-{
-# Show the application banner.
-echo " "
-echo "*********************************************************************"
-echo "***                                                               ***"
-echo "***   Avnet PicoZed Out Of Box PetaLinux Build V1.2              ***"
-echo "***   The PS LED is mapped to Zynq MIO47                        ***"
-echo "***                                                               ***"
-echo "*********************************************************************"
-echo " "
-    start-stop-daemon -S -o --background -x $DAEMON -- $DAEMON_OPTS
-}
-
-stop ()
-{
-    echo " Stoping blinky"
-    start-stop-daemon -K -x $DAEMON
-}
-
-restart()
-{
-    stop
-    start
-}
-
-[ -e $DAEMON ] || exit 1
-    case "$1" in
-        start)
-            start; ;;
-        stop)
-            stop; ;;
-        restart)
-            restart; ;;
-        *)
-            echo "Usage: $0 {start|stop|restart}"
-            exit 1
-
-esac
-exit $?
diff --git a/recipes-apps/blinky-init/files/uz3eg-iocc/blinky-init b/recipes-apps/blinky-init/files/uz3eg-iocc/blinky-init
deleted file mode 100644
index c28fed26e95952e114acbd177d99a6d3ed7933c7..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky-init/files/uz3eg-iocc/blinky-init
+++ /dev/null
@@ -1,100 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Jan 02, 2018
-#  Design Name:         LED "Blinky" Application Daemon Launcher
-#  Module Name:         blinky-init(.sh)
-#  Project Name:        LED "Blinky" Application
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         Script to launch "Blinky" LED App as a daemon
-# 
-#  Dependencies:        
-#
-#  Revision:            Jan 02, 2018: 1.0 Initial version
-#                       UltraZed-EG + I/O Carrier
-#                       UltraZed-EG + PCIe Carrier
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-DAEMON=/home/root/blinky
-#This script launches the application that will blink an LED mapped to
-#the Zynq or ZynqMP PS MIO
-#In this case the PS LED is mapped to MIO31
-DAEMON_OPTS="-m 31"
-
-start ()
-{
-# Show the application banner.
-echo " "
-echo "*********************************************************************"
-echo "***                                                               ***"
-echo "***   Avnet UltraZed Out Of Box PetaLinux Build V1.2              ***"
-echo "***   The PS LED is mapped to ZynqMP MIO31                        ***"
-echo "***                                                               ***"
-echo "*********************************************************************"
-echo " "
-    start-stop-daemon -S -o --background -x $DAEMON -- $DAEMON_OPTS
-}
-
-stop ()
-{
-    echo " Stoping blinky"
-    start-stop-daemon -K -x $DAEMON
-}
-
-restart()
-{
-    stop
-    start
-}
-
-[ -e $DAEMON ] || exit 1
-    case "$1" in
-        start)
-            start; ;;
-        stop)
-            stop; ;;
-        restart)
-            restart; ;;
-        *)
-            echo "Usage: $0 {start|stop|restart}"
-            exit 1
-
-esac
-exit $?
diff --git a/recipes-apps/blinky-init/files/uz3eg-pciec/blinky-init b/recipes-apps/blinky-init/files/uz3eg-pciec/blinky-init
deleted file mode 100644
index 79cacd52f2f7dda726116f7b5c36b674ba35c5d6..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky-init/files/uz3eg-pciec/blinky-init
+++ /dev/null
@@ -1,100 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Jan 02, 2018
-#  Design Name:         LED "Blinky" Application Daemon Launcher
-#  Module Name:         blinky-init(.sh)
-#  Project Name:        LED "Blinky" Application
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         Script to launch "Blinky" LED App as a daemon
-# 
-#  Dependencies:        
-#
-#  Revision:            Jan 02, 2018: 1.0 Initial version
-#                       UltraZed-EG + I/O Carrier
-#                       UltraZed-EG + PCIe Carrier
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-DAEMON=/home/root/blinky
-#This script launches the application that will blink an LED mapped to
-#the Zynq or ZynqMP PS MIO
-#In this case the PS LED is mapped to MIO26
-DAEMON_OPTS="-m 26"
-
-start ()
-{
-# Show the application banner.
-echo " "
-echo "*********************************************************************"
-echo "***                                                               ***"
-echo "***   Avnet UltraZed Out Of Box PetaLinux Build V1.2              ***"
-echo "***   The PS LED is mapped to ZynqMP MIO26                        ***"
-echo "***                                                               ***"
-echo "*********************************************************************"
-echo " "
-    start-stop-daemon -S -o --background -x $DAEMON -- $DAEMON_OPTS
-}
-
-stop ()
-{
-    echo " Stoping blinky"
-    start-stop-daemon -K -x $DAEMON
-}
-
-restart()
-{
-    stop
-    start
-}
-
-[ -e $DAEMON ] || exit 1
-    case "$1" in
-        start)
-            start; ;;
-        stop)
-            stop; ;;
-        restart)
-            restart; ;;
-        *)
-            echo "Usage: $0 {start|stop|restart}"
-            exit 1
-
-esac
-exit $?
diff --git a/recipes-apps/blinky-init/files/uz7ev-evcc/blinky-init b/recipes-apps/blinky-init/files/uz7ev-evcc/blinky-init
deleted file mode 100644
index 79cacd52f2f7dda726116f7b5c36b674ba35c5d6..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky-init/files/uz7ev-evcc/blinky-init
+++ /dev/null
@@ -1,100 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Jan 02, 2018
-#  Design Name:         LED "Blinky" Application Daemon Launcher
-#  Module Name:         blinky-init(.sh)
-#  Project Name:        LED "Blinky" Application
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         Script to launch "Blinky" LED App as a daemon
-# 
-#  Dependencies:        
-#
-#  Revision:            Jan 02, 2018: 1.0 Initial version
-#                       UltraZed-EG + I/O Carrier
-#                       UltraZed-EG + PCIe Carrier
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-DAEMON=/home/root/blinky
-#This script launches the application that will blink an LED mapped to
-#the Zynq or ZynqMP PS MIO
-#In this case the PS LED is mapped to MIO26
-DAEMON_OPTS="-m 26"
-
-start ()
-{
-# Show the application banner.
-echo " "
-echo "*********************************************************************"
-echo "***                                                               ***"
-echo "***   Avnet UltraZed Out Of Box PetaLinux Build V1.2              ***"
-echo "***   The PS LED is mapped to ZynqMP MIO26                        ***"
-echo "***                                                               ***"
-echo "*********************************************************************"
-echo " "
-    start-stop-daemon -S -o --background -x $DAEMON -- $DAEMON_OPTS
-}
-
-stop ()
-{
-    echo " Stoping blinky"
-    start-stop-daemon -K -x $DAEMON
-}
-
-restart()
-{
-    stop
-    start
-}
-
-[ -e $DAEMON ] || exit 1
-    case "$1" in
-        start)
-            start; ;;
-        stop)
-            stop; ;;
-        restart)
-            restart; ;;
-        *)
-            echo "Usage: $0 {start|stop|restart}"
-            exit 1
-
-esac
-exit $?
diff --git a/recipes-apps/blinky/.gdbinit b/recipes-apps/blinky/.gdbinit
deleted file mode 100644
index d59fb8d90efb393c83d35becbecddcfa493a5e67..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky/.gdbinit
+++ /dev/null
@@ -1,2 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
diff --git a/recipes-apps/blinky/README b/recipes-apps/blinky/README
deleted file mode 100644
index abf1321e3e556781ee1ef60a9b543973c7cd5860..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky/README
+++ /dev/null
@@ -1,47 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-If you are developing your application from scratch, simply start editing the
-file blinky.c.
-
-You can easily import any existing application code by copying it into this 
-directory, and editing the automatically generated Makefile.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To build your application, simply run "petlainux-build -c rootfs/blinky".
-This command will build your application and will install your application
-into the target file system host copy.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
-To add extra source code files (for example, to split a large application into 
-multiple source files), add the relevant .o files to the list in the local 
-Makefile where indicated.  
-
-To have other files (for example application configuration files or scripts) 
-copied into the root file system, add addition lines under the "install:"
-target in the Makefile.  For example:
-
-    $(TARGETINST) myfile.conf /etc
-
-Copy the file myfile.conf from this directory into the /etc directory
-on the Embedded Linux filesystem).
-
-Another example:
-    (TARGETINST) -a "some text here" /etc/system.conf
-
-Add the line "some text here" to the /etc/system.conf file.
-
-See ${PETALINUX}/components/rootfs/targetroot-inst.sh for details and more options.
diff --git a/recipes-apps/blinky/blinky.bb b/recipes-apps/blinky/blinky.bb
deleted file mode 100644
index 4e5d956a2f71eaff503359b04376a78aa3bf3952..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky/blinky.bb
+++ /dev/null
@@ -1,27 +0,0 @@
-#
-# This file is the blinky recipe.
-#
-
-SUMMARY = "Simple blinky application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-SRC_URI = "file://linux_ps_led_blink.c \
-	   file://Makefile \
-		  "
-
-COMPATIBLE_MACHINE = "uz|pz"
-
-S = "${WORKDIR}"
-
-FILES_${PN} += "/home/root/*"
-
-do_compile() {
-	     oe_runmake
-}
-
-do_install() {
-	     install -d ${D}/home/root
-	     install -m 0755 blinky ${D}/home/root
-}
diff --git a/recipes-apps/blinky/files/Makefile b/recipes-apps/blinky/files/Makefile
deleted file mode 100644
index e2ba54c76b72548a850e4e66556a6589dcb9c2db..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky/files/Makefile
+++ /dev/null
@@ -1,17 +0,0 @@
-APP = blinky
-
-# Add any other object files to this list below
-APP_OBJS = linux_ps_led_blink.o
-
-all: build
-
-build: $(APP)
-
-$(APP): $(APP_OBJS)
-	$(CC) $(LDFLAGS) -o blinky $(APP_OBJS) $(LDLIBS)
-
-%.o: %.c
-	$(CC) -c $(CFLAGS) -o $@ $<
-	
-clean:
-	-rm -f $(APP) *.elf *.gdb *.o
diff --git a/recipes-apps/blinky/files/pz/linux_ps_led_blink.c b/recipes-apps/blinky/files/pz/linux_ps_led_blink.c
deleted file mode 100755
index f8691b43f2a47e05099938b668a06dad409580ef..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky/files/pz/linux_ps_led_blink.c
+++ /dev/null
@@ -1,347 +0,0 @@
-//----------------------------------------------------------------------------
-//      _____
-//     *     *
-//    *____   *____
-//   * *===*   *==*
-//  *___*===*___**  AVNET
-//       *======*
-//        *====*
-//----------------------------------------------------------------------------
-//
-// This design is the property of Avnet.  Publication of this
-// design is not authorized without written consent from Avnet.
-//
-// Please direct any questions to the UltraZed community support forum:
-//    http://www.ultrazed.org/forum
-//
-// Product information is available at:
-//    http://www.ultrazed.org/product/ultrazed-EG
-//
-// Disclaimer:
-//    Avnet, Inc. makes no warranty for the use of this code or design.
-//    This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-//    any errors, which may appear in this code, nor does it make a commitment
-//    to update the information contained herein. Avnet, Inc specifically
-//    disclaims any implied warranties of fitness for a particular purpose.
-//                     Copyright(c) 2016 Avnet, Inc.
-//                             All rights reserved.
-//
-//----------------------------------------------------------------------------
-//
-// Create Date:         Nov 03, 2016
-// Design Name:         PS LED blink application for UltraZed-EG Carriers
-// Module Name:         linux_ps_led_blink.c
-// Project Name:        PS LED blink application for UltraZed-EG Carriers
-// Target Devices:      Xilinx Zynq UltraScale MPSoC
-// Hardware Boards:     UltraZed-EG, UltraZed-EG IO Carrier
-//
-// Tool versions:       Xilinx Vivado 2016.2
-//
-// Description:         Single PS LED blink application for Linux.
-//
-// Dependencies:
-//
-// Revision:            Nov 03, 2016: 1.00 Initial version
-//                      Nov 01, 2019: 1.01 Update for PetaLinux 2019.1
-//
-//----------------------------------------------------------------------------
-
-
-#include <fcntl.h>
-#include <getopt.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <unistd.h>
-
-/* Version information for this build. */
-#define APP_MAJOR_VERSION              1
-#define APP_MINOR_VERSION              1
-
-/* String formats used to build the file name path to specific GPIO
- * instances. */
-#define FILE_FORMAT_GPIO_PATH          "/sys/class/gpio"
-#define FILE_FORMAT_GPIO_EXPORT        "/export"
-#define FILE_FORMAT_GPIO_DIRECTION     "/direction"
-#define FILE_FORMAT_GPIO_VALUE         "/value"
-
-/* The GPIO_KERNEL_OFFSET is the offset that is used to reach the GPIOs
- * that are controlled by the GPIO controller on the device.  For a Zynq-7000
- * device, this usually is used for the GPIO controller to control user
- * controls connected via EMIO ports.  This has it's own separate definition
- * because sometimes it changes based upon the whims of the kernel
- * maintainers.  So far, it has changed on me at least twice and it more
- * likely than not bound to change someday after this code is released.
- */
-#define GPIO_KERNEL_OFFSET             897
-
-static int blink_state = 1;
-static int verbose = 0;
-
-/* This application executable name. */
-static const char* program_name;
-
-/* Description of long options for getopt_long. */
-static const struct option long_options[] = {
-    { "debug",      0, NULL, 'd' },
-    { "help",       0, NULL, 'h' },
-    { "interval",   1, NULL, 'i' },
-    { "mio",        1, NULL, 'm' },
-    { "version",    0, NULL, 'v' },
-};
-
-/* Description of the short options for getopt_long. */
-static const char* const short_options = "dhi:m:v";
-
-/* Usage summary test. */
-static const char* const usage_template = 
-"    Usage: %s [ options ]\n"
-"        -d, --debug              Print verbose debug messages.\n"
-"        -h, --help               Print this help information.\n"
-"        -i, --interval <NUMBER>  Use <NUMBER> * 0.1 seconds for LED blink.\n"
-"        -m, --mio <NUMBER>       Use MIO <NUMBER> for the LED blinking.\n"
-"        -v, --version            Print appication version information.\n";
-
-static void print_usage(int is_error)
-{
-    fprintf(is_error ? stderr : stdout, usage_template, program_name);
-    exit(is_error ? 1 : 0);
-}
-
-static void print_version(void)
-{
-    printf("    %s - v%d.%d\n", program_name, APP_MAJOR_VERSION, APP_MINOR_VERSION);
-    exit(0);
-}
-
-int set_next_blink_pattern(int user_led_mio)
-{
-    const int char_buf_size = 80;
-    char gpio_setting[5];
-    int test_result = 0;
-    char formatted_file_name[char_buf_size];
-
-    FILE  *fp_led;
-
-    // Open the gpio value properties so that they can be read/written.
-    test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, (GPIO_KERNEL_OFFSET + user_led_mio));
-    if ((test_result < 0) ||
-        (test_result == (char_buf_size - 1)))
-    {
-        printf("Error formatting string, check the GPIO specified\r\n");
-        printf("%s", formatted_file_name);
-        return -1;
-    }
-    fp_led = fopen(formatted_file_name, "r+");
-
-    // Write next blink pattern to LEDs.
-    if (blink_state == 1)
-    {
-        // Now turn the specified LED ON.
-        strcpy(gpio_setting, "1");
-
-        // Next state will be OFF.		
-        blink_state = 0;
-    }
-    else
-    {
-        // Now turn all LEDs OFF.
-        strcpy(gpio_setting, "0");
-
-        // Next state will be ON.
-        blink_state = 1;
-    }
-    fwrite(&gpio_setting, sizeof(char), 1, fp_led);
-    fflush(fp_led);
-
-    // This test always passes since it requires user interaction.
-    test_result = 0;
-
-    // Close the GPIO value property files.
-    fclose(fp_led);
-
-    return test_result;
-}
-
-int main(int arg_count, char* arg_variables[])
-{
-    char gpio_setting[5];
-    int next_option = 0;
-    int test_result = 0;
-    int user_interval = 1;
-    int user_led_mio = 0;
-    const int char_buf_size = 80;
-    char formatted_file_name[char_buf_size];
-
-    FILE  *fp;
-
-    /* Extract the command line arguments and options. */
-    program_name = arg_variables[0];
-
-    /* Don't print any extra messages. */
-    verbose = 0;
-
-    /* Parse options and arguments. */
-    do
-    {
-        next_option = getopt_long(arg_count, arg_variables, short_options, long_options, NULL);
-
-        switch (next_option)
-        {
-            case 'd':
-            {
-                /* User specified -d or --debug. */
-                verbose = 1;
-                break;
-            }
-            case 'h':
-            {
-                /* User specified -h or --help. */
-                print_usage(0);
-                break;
-            }
-            case 'i':
-            {
-                /* User specified -i or --interval. */
-                sscanf(optarg, "%d", &user_interval);
-                break;
-            }
-            case 'm':
-            {
-                /* User specified -m or --mio. */
-                sscanf(optarg, "%d", &user_led_mio);
-                break;
-            }
-            case 'v':
-            {
-                /* User specified -v or --version. */
-                print_version();
-                break;
-            }
-            case '?':
-            {
-                /* User specified an option that is not recognized. */
-                print_usage(1);
-                break;
-            }
-            case -1:
-            {
-                /* Done with options. */
-                break;
-            }
-            default:
-            {
-                /* Something went wrong parsing command line options. */
-                print_usage(1);
-                abort();
-            }
-        }
-    }
-    while (next_option != -1);
-
-    // Display the lab name in the application banner.
-    if (verbose)
-    {
-        printf("*********************************************************\n");
-        printf("*                                                       *\n");
-        printf("*   UltraZed PS LED Blink Demo Application              *\n");
-        printf("*                                                       *\n");
-        printf("*********************************************************\n");
-    }
-
-    // Open the export file and write the PSGPIO number for each Pmod GPIO
-    // signal to the Linux sysfs GPIO export property, then close the file.
-    fp = fopen(FILE_FORMAT_GPIO_PATH FILE_FORMAT_GPIO_EXPORT, "w");
-    if (fp == NULL)
-    {
-        printf("Error opening /sys/class/gpio/export node\n");
-    }
-    else
-    {
-        // Set the value property for the export to the GPIO number 
-        // for the user specified LED.
-        snprintf(gpio_setting, 4, "%d", (GPIO_KERNEL_OFFSET + user_led_mio));
-        fwrite(&gpio_setting, sizeof(char), 3, fp);
-        fflush(fp);
-        fclose(fp);
-    }
-
-    // Check the direction property of the PSGPIO number for the user 
-    // specified LED.
-    test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, (GPIO_KERNEL_OFFSET + user_led_mio));
-    if ((test_result < 0) ||
-        (test_result == (char_buf_size - 1)))
-    {
-        printf("Error formatting string, check the GPIO specified\r\n");
-        printf("%s", formatted_file_name);
-        return -1;
-    }
-
-    fp = fopen(formatted_file_name, "r+");
-    if (fp == NULL)
-    {
-        printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", (GPIO_KERNEL_OFFSET + user_led_mio));
-    }
-    else
-    {
-        fscanf(fp, "%s", gpio_setting);
-        
-        if (verbose)
-        {
-            printf("gpio%d set as ", (GPIO_KERNEL_OFFSET + user_led_mio));
-        }
-
-        // Display whether the GPIO is set as input or output.
-        if (!strcmp(gpio_setting, "in"))
-        {
-            if (verbose)
-            {
-                printf("INPUT\n");
-            }
-
-            // Set the direction property to "out".
-            strcpy(gpio_setting, "out");
-            fwrite(&gpio_setting, sizeof(char), 3, fp);
-            fflush(fp);
-        }
-        else
-        {
-            if (verbose)
-            {
-                printf("OUTPUT\n");
-            }
-        }
-        fclose(fp);
-    }
-
-    // Perform LED blink operation.
-    if (verbose)
-    {
-        printf("LED Blink Operation on UltraZed\n");
-    }
-
-    // This test always passes since it requires user interaction.
-    test_result = 0;
-
-    while (test_result == 0)
-    {
-        test_result = set_next_blink_pattern(user_led_mio);
-        usleep(user_interval * 100000);
-    }
-
-    if (verbose)
-    {
-        printf("LED Blink Operation complete...");
-	
-        if (test_result == 0)
-        {
-            printf("\033[32mPASSED\033[0m\r\n");
-        }
-        else
-        {
-            printf("\033[5mFAILED\033[0m\r\n");
-        }
-    }
-
-    exit(test_result);
-}
diff --git a/recipes-apps/blinky/files/uz/linux_ps_led_blink.c b/recipes-apps/blinky/files/uz/linux_ps_led_blink.c
deleted file mode 100755
index 0b8f708ad1121da61e2d8e0f7da27fac4d4024d5..0000000000000000000000000000000000000000
--- a/recipes-apps/blinky/files/uz/linux_ps_led_blink.c
+++ /dev/null
@@ -1,347 +0,0 @@
-//----------------------------------------------------------------------------
-//      _____
-//     *     *
-//    *____   *____
-//   * *===*   *==*
-//  *___*===*___**  AVNET
-//       *======*
-//        *====*
-//----------------------------------------------------------------------------
-//
-// This design is the property of Avnet.  Publication of this
-// design is not authorized without written consent from Avnet.
-//
-// Please direct any questions to the UltraZed community support forum:
-//    http://www.ultrazed.org/forum
-//
-// Product information is available at:
-//    http://www.ultrazed.org/product/ultrazed-EG
-//
-// Disclaimer:
-//    Avnet, Inc. makes no warranty for the use of this code or design.
-//    This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-//    any errors, which may appear in this code, nor does it make a commitment
-//    to update the information contained herein. Avnet, Inc specifically
-//    disclaims any implied warranties of fitness for a particular purpose.
-//                     Copyright(c) 2016 Avnet, Inc.
-//                             All rights reserved.
-//
-//----------------------------------------------------------------------------
-//
-// Create Date:         Nov 03, 2016
-// Design Name:         PS LED blink application for UltraZed-EG Carriers
-// Module Name:         linux_ps_led_blink.c
-// Project Name:        PS LED blink application for UltraZed-EG Carriers
-// Target Devices:      Xilinx Zynq UltraScale MPSoC
-// Hardware Boards:     UltraZed-EG, UltraZed-EG IO Carrier
-//
-// Tool versions:       Xilinx Vivado 2016.2
-//
-// Description:         Single PS LED blink application for Linux.
-//
-// Dependencies:
-//
-// Revision:            Nov 03, 2016: 1.00 Initial version
-//                      Nov 01, 2019: 1.01 Update for PetaLinux 2019.1
-//
-//----------------------------------------------------------------------------
-
-
-#include <fcntl.h>
-#include <getopt.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <unistd.h>
-
-/* Version information for this build. */
-#define APP_MAJOR_VERSION              1
-#define APP_MINOR_VERSION              1
-
-/* String formats used to build the file name path to specific GPIO
- * instances. */
-#define FILE_FORMAT_GPIO_PATH          "/sys/class/gpio"
-#define FILE_FORMAT_GPIO_EXPORT        "/export"
-#define FILE_FORMAT_GPIO_DIRECTION     "/direction"
-#define FILE_FORMAT_GPIO_VALUE         "/value"
-
-/* The GPIO_KERNEL_OFFSET is the offset that is used to reach the GPIOs
- * that are controlled by the GPIO controller on the device.  For a Zynq-7000
- * device, this usually is used for the GPIO controller to control user
- * controls connected via EMIO ports.  This has it's own separate definition
- * because sometimes it changes based upon the whims of the kernel
- * maintainers.  So far, it has changed on me at least twice and it more
- * likely than not bound to change someday after this code is released.
- */
-#define GPIO_KERNEL_OFFSET             319
-
-static int blink_state = 1;
-static int verbose = 0;
-
-/* This application executable name. */
-static const char* program_name;
-
-/* Description of long options for getopt_long. */
-static const struct option long_options[] = {
-    { "debug",      0, NULL, 'd' },
-    { "help",       0, NULL, 'h' },
-    { "interval",   1, NULL, 'i' },
-    { "mio",        1, NULL, 'm' },
-    { "version",    0, NULL, 'v' },
-};
-
-/* Description of the short options for getopt_long. */
-static const char* const short_options = "dhi:m:v";
-
-/* Usage summary test. */
-static const char* const usage_template = 
-"    Usage: %s [ options ]\n"
-"        -d, --debug              Print verbose debug messages.\n"
-"        -h, --help               Print this help information.\n"
-"        -i, --interval <NUMBER>  Use <NUMBER> * 0.1 seconds for LED blink.\n"
-"        -m, --mio <NUMBER>       Use MIO <NUMBER> for the LED blinking.\n"
-"        -v, --version            Print appication version information.\n";
-
-static void print_usage(int is_error)
-{
-    fprintf(is_error ? stderr : stdout, usage_template, program_name);
-    exit(is_error ? 1 : 0);
-}
-
-static void print_version(void)
-{
-    printf("    %s - v%d.%d\n", program_name, APP_MAJOR_VERSION, APP_MINOR_VERSION);
-    exit(0);
-}
-
-int set_next_blink_pattern(int user_led_mio)
-{
-    const int char_buf_size = 80;
-    char gpio_setting[5];
-    int test_result = 0;
-    char formatted_file_name[char_buf_size];
-
-    FILE  *fp_led;
-
-    // Open the gpio value properties so that they can be read/written.
-    test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, (GPIO_KERNEL_OFFSET + user_led_mio));
-    if ((test_result < 0) ||
-        (test_result == (char_buf_size - 1)))
-    {
-        printf("Error formatting string, check the GPIO specified\r\n");
-        printf("%s", formatted_file_name);
-        return -1;
-    }
-    fp_led = fopen(formatted_file_name, "r+");
-
-    // Write next blink pattern to LEDs.
-    if (blink_state == 1)
-    {
-        // Now turn the specified LED ON.
-        strcpy(gpio_setting, "1");
-
-        // Next state will be OFF.		
-        blink_state = 0;
-    }
-    else
-    {
-        // Now turn all LEDs OFF.
-        strcpy(gpio_setting, "0");
-
-        // Next state will be ON.
-        blink_state = 1;
-    }
-    fwrite(&gpio_setting, sizeof(char), 1, fp_led);
-    fflush(fp_led);
-
-    // This test always passes since it requires user interaction.
-    test_result = 0;
-
-    // Close the GPIO value property files.
-    fclose(fp_led);
-
-    return test_result;
-}
-
-int main(int arg_count, char* arg_variables[])
-{
-    char gpio_setting[5];
-    int next_option = 0;
-    int test_result = 0;
-    int user_interval = 1;
-    int user_led_mio = 0;
-    const int char_buf_size = 80;
-    char formatted_file_name[char_buf_size];
-
-    FILE  *fp;
-
-    /* Extract the command line arguments and options. */
-    program_name = arg_variables[0];
-
-    /* Don't print any extra messages. */
-    verbose = 0;
-
-    /* Parse options and arguments. */
-    do
-    {
-        next_option = getopt_long(arg_count, arg_variables, short_options, long_options, NULL);
-
-        switch (next_option)
-        {
-            case 'd':
-            {
-                /* User specified -d or --debug. */
-                verbose = 1;
-                break;
-            }
-            case 'h':
-            {
-                /* User specified -h or --help. */
-                print_usage(0);
-                break;
-            }
-            case 'i':
-            {
-                /* User specified -i or --interval. */
-                sscanf(optarg, "%d", &user_interval);
-                break;
-            }
-            case 'm':
-            {
-                /* User specified -m or --mio. */
-                sscanf(optarg, "%d", &user_led_mio);
-                break;
-            }
-            case 'v':
-            {
-                /* User specified -v or --version. */
-                print_version();
-                break;
-            }
-            case '?':
-            {
-                /* User specified an option that is not recognized. */
-                print_usage(1);
-                break;
-            }
-            case -1:
-            {
-                /* Done with options. */
-                break;
-            }
-            default:
-            {
-                /* Something went wrong parsing command line options. */
-                print_usage(1);
-                abort();
-            }
-        }
-    }
-    while (next_option != -1);
-
-    // Display the lab name in the application banner.
-    if (verbose)
-    {
-        printf("*********************************************************\n");
-        printf("*                                                       *\n");
-        printf("*   UltraZed PS LED Blink Demo Application              *\n");
-        printf("*                                                       *\n");
-        printf("*********************************************************\n");
-    }
-
-    // Open the export file and write the PSGPIO number for each Pmod GPIO
-    // signal to the Linux sysfs GPIO export property, then close the file.
-    fp = fopen(FILE_FORMAT_GPIO_PATH FILE_FORMAT_GPIO_EXPORT, "w");
-    if (fp == NULL)
-    {
-        printf("Error opening /sys/class/gpio/export node\n");
-    }
-    else
-    {
-        // Set the value property for the export to the GPIO number 
-        // for the user specified LED.
-        snprintf(gpio_setting, 4, "%d", (GPIO_KERNEL_OFFSET + user_led_mio));
-        fwrite(&gpio_setting, sizeof(char), 3, fp);
-        fflush(fp);
-        fclose(fp);
-    }
-
-    // Check the direction property of the PSGPIO number for the user 
-    // specified LED.
-    test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, (GPIO_KERNEL_OFFSET + user_led_mio));
-    if ((test_result < 0) ||
-        (test_result == (char_buf_size - 1)))
-    {
-        printf("Error formatting string, check the GPIO specified\r\n");
-        printf("%s", formatted_file_name);
-        return -1;
-    }
-
-    fp = fopen(formatted_file_name, "r+");
-    if (fp == NULL)
-    {
-        printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", (GPIO_KERNEL_OFFSET + user_led_mio));
-    }
-    else
-    {
-        fscanf(fp, "%s", gpio_setting);
-        
-        if (verbose)
-        {
-            printf("gpio%d set as ", (GPIO_KERNEL_OFFSET + user_led_mio));
-        }
-
-        // Display whether the GPIO is set as input or output.
-        if (!strcmp(gpio_setting, "in"))
-        {
-            if (verbose)
-            {
-                printf("INPUT\n");
-            }
-
-            // Set the direction property to "out".
-            strcpy(gpio_setting, "out");
-            fwrite(&gpio_setting, sizeof(char), 3, fp);
-            fflush(fp);
-        }
-        else
-        {
-            if (verbose)
-            {
-                printf("OUTPUT\n");
-            }
-        }
-        fclose(fp);
-    }
-
-    // Perform LED blink operation.
-    if (verbose)
-    {
-        printf("LED Blink Operation on UltraZed\n");
-    }
-
-    // This test always passes since it requires user interaction.
-    test_result = 0;
-
-    while (test_result == 0)
-    {
-        test_result = set_next_blink_pattern(user_led_mio);
-        usleep(user_interval * 100000);
-    }
-
-    if (verbose)
-    {
-        printf("LED Blink Operation complete...");
-	
-        if (test_result == 0)
-        {
-            printf("\033[32mPASSED\033[0m\r\n");
-        }
-        else
-        {
-            printf("\033[5mFAILED\033[0m\r\n");
-        }
-    }
-
-    exit(test_result);
-}
diff --git a/recipes-apps/dialog-control/.gdbinit b/recipes-apps/dialog-control/.gdbinit
deleted file mode 100644
index 760896a756bada91c6625fe928d9dfbb17efd8bf..0000000000000000000000000000000000000000
--- a/recipes-apps/dialog-control/.gdbinit
+++ /dev/null
@@ -1,3 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
-
diff --git a/recipes-apps/dialog-control/README b/recipes-apps/dialog-control/README
deleted file mode 100644
index 55c8212b4484e6ec72d6250fa3f525aa89fc0da2..0000000000000000000000000000000000000000
--- a/recipes-apps/dialog-control/README
+++ /dev/null
@@ -1,52 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-If you are developing your application from scratch, simply start editing the
-file dialog-control.c.
-
-You can easily import any existing application code by copying it into this 
-directory, and editing the automatically generated Makefile.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To build your application, simply run "petlainux-build -c rootfs/dialog-control".
-This command will build your application and will install your application
-into the target file system host copy.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
-To add extra source code files (for example, to split a large application into 
-multiple source files), add the relevant .o files to the list in the local 
-Makefile where indicated.  
-
-To have other files (for example application configuration files or scripts) 
-copied into the root file system, add addition lines under the "install:"
-target in the Makefile.  For example:
-
-    $(TARGETINST) myfile.conf /etc
-
-Copy the file myfile.conf from this directory into the /etc directory
-on the Embedded Linux filesystem).
-
-Another example:
-    (TARGETINST) -a "some text here" /etc/system.conf
-
-Add the line "some text here" to the /etc/system.conf file.
-
-See ${PETALINUX}/components/rootfs/targetroot-inst.sh for details and more options.
diff --git a/recipes-apps/dialog-control/dialog-control.bb b/recipes-apps/dialog-control/dialog-control.bb
deleted file mode 100644
index 88bfe244d68dfc22286364a81118f1de25d9f815..0000000000000000000000000000000000000000
--- a/recipes-apps/dialog-control/dialog-control.bb
+++ /dev/null
@@ -1,23 +0,0 @@
-#
-# This file is the dialog-control recipe.
-#
-
-SUMMARY = "Simple dialog-control application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-SRC_URI = "file://dialog-control.cpp \
-           file://Makefile \
-		  "
-
-S = "${WORKDIR}"
-
-do_compile() {
-	     oe_runmake
-}
-
-do_install() {
-	     install -d ${D}${bindir}
-	     install -m 0755 dialog-control ${D}${bindir}
-}
diff --git a/recipes-apps/dialog-control/dialog-control/Makefile b/recipes-apps/dialog-control/dialog-control/Makefile
deleted file mode 100644
index d56a6da4ff5e464a2c0e7b8d65dc08d77c9e5b46..0000000000000000000000000000000000000000
--- a/recipes-apps/dialog-control/dialog-control/Makefile
+++ /dev/null
@@ -1,14 +0,0 @@
-APP = dialog-control
-
-# Add any other object files to this list below
-APP_OBJS = dialog-control.o
-
-all: build
-
-build: $(APP)
-
-$(APP): $(APP_OBJS)
-	$(CXX) $(LDFLAGS) -o $@ $(APP_OBJS) $(LDLIBS)
-
-clean:
-	-rm -f $(APP) *.elf *.gdb *.o
diff --git a/recipes-apps/dialog-control/dialog-control/dialog-control.cpp b/recipes-apps/dialog-control/dialog-control/dialog-control.cpp
deleted file mode 100644
index 152392752383dfe3c7c3bdd605019bc068b9882a..0000000000000000000000000000000000000000
--- a/recipes-apps/dialog-control/dialog-control/dialog-control.cpp
+++ /dev/null
@@ -1,1029 +0,0 @@
-//Test code for the Dialog 9062 PMIC device on MiniZed that uses the I2C bus
-
-#include <stdio.h>
-#include <linux/i2c.h>
-#include <linux/i2c-dev.h>
-#include <fcntl.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include <sys/ioctl.h>
-#include <string.h>
-#include <termios.h>
-#include <dirent.h>
-
-int kbhit(void) {
-    static bool initflag = false;
-    static const int STDIN = 0;
-
-    if (!initflag) {
-        // Use termios to turn off line buffering
-        struct termios term;
-        tcgetattr(STDIN, &term);
-        term.c_lflag &= ~ICANON;
-        tcsetattr(STDIN, TCSANOW, &term);
-        setbuf(stdin, NULL);
-        initflag = true;
-    }
-
-    int nbbytes;
-    ioctl(STDIN, FIONREAD, &nbbytes);  // 0 is STDIN
-    return nbbytes;
-}
-
-#define u8	unsigned char
-#define u16 unsigned short
-#define I2C_FILE_NAME "/dev/i2c-0"
-
-// The following constant defines the address of the IIC device on the IIC bus.  Note that since
-// the address is only 7 bits, this  constant is the address divided by 2.
-#define MAGNETOMETER_ADDRESS  0x1E /* LIS3MDL on Arduino shield */
-#define MINIZED_MOTION_SENSOR_ADDRESS_SA0_LO  0x1E /* 0011110b for LIS2DS12 on MiniZed when SA0 is pulled low*/
-#define MINIZED_MOTION_SENSOR_ADDRESS_SA0_HI  0x1D /* 0011101b for LIS2DS12 on MiniZed when SA0 is pulled high*/
-#define DIALOG_PMIC_ADDRESS  0x58 /* 0xB0 >> 1 */
-
-#define LIS2DS12_ACC_WHO_AM_I         0x43
-/************** Device Register  *******************/
-#define LIS2DS12_ACC_SENSORHUB_OUT1  	0X06
-#define LIS2DS12_ACC_SENSORHUB_OUT2  	0X07
-#define LIS2DS12_ACC_SENSORHUB_OUT3  	0X08
-#define LIS2DS12_ACC_SENSORHUB_OUT4  	0X09
-#define LIS2DS12_ACC_SENSORHUB_OUT5  	0X0A
-#define LIS2DS12_ACC_SENSORHUB_OUT6  	0X0B
-#define LIS2DS12_ACC_MODULE_8BIT  	0X0C
-#define LIS2DS12_ACC_WHO_AM_I_REG  	0X0F
-#define LIS2DS12_ACC_CTRL1  	0X20
-#define LIS2DS12_ACC_CTRL2  	0X21
-#define LIS2DS12_ACC_CTRL3  	0X22
-#define LIS2DS12_ACC_CTRL4  	0X23
-#define LIS2DS12_ACC_CTRL5  	0X24
-#define LIS2DS12_ACC_FIFO_CTRL  	0X25
-#define LIS2DS12_ACC_OUT_T  	0X26
-#define LIS2DS12_ACC_STATUS  	0X27
-#define LIS2DS12_ACC_OUT_X_L  	0X28
-#define LIS2DS12_ACC_OUT_X_H  	0X29
-#define LIS2DS12_ACC_OUT_Y_L  	0X2A
-#define LIS2DS12_ACC_OUT_Y_H  	0X2B
-#define LIS2DS12_ACC_OUT_Z_L  	0X2C
-#define LIS2DS12_ACC_OUT_Z_H  	0X2D
-#define LIS2DS12_ACC_FIFO_THS  	0X2E
-#define LIS2DS12_ACC_FIFO_SRC  	0X2F
-#define LIS2DS12_ACC_FIFO_SAMPLES  	0X30
-#define LIS2DS12_ACC_TAP_6D_THS  	0X31
-#define LIS2DS12_ACC_INT_DUR  	0X32
-#define LIS2DS12_ACC_WAKE_UP_THS  	0X33
-#define LIS2DS12_ACC_WAKE_UP_DUR  	0X34
-#define LIS2DS12_ACC_FREE_FALL  	0X35
-#define LIS2DS12_ACC_STATUS_DUP  	0X36
-#define LIS2DS12_ACC_WAKE_UP_SRC  	0X37
-#define LIS2DS12_ACC_TAP_SRC  	0X38
-#define LIS2DS12_ACC_6D_SRC  	0X39
-#define LIS2DS12_ACC_STEP_C_MINTHS  	0X3A
-#define LIS2DS12_ACC_STEP_C_L  	0X3B
-#define LIS2DS12_ACC_STEP_C_H  	0X3C
-#define LIS2DS12_ACC_FUNC_CK_GATE  	0X3D
-#define LIS2DS12_ACC_FUNC_SRC  	0X3E
-#define LIS2DS12_ACC_FUNC_CTRL  	0X3F
-
-u8 send_byte;
-u8 write_data [256];
-u8 read_data [256];
-
-int i2c_file;
-useconds_t delay = 2000; //2ms
-u8 i2c_device_addr = MINIZED_MOTION_SENSOR_ADDRESS_SA0_HI; //by default
-
-static int set_i2c_register(int file,
-                            unsigned char addr,
-                            unsigned char reg,
-                            unsigned char value) {
-
-    unsigned char outbuf[2];
-    struct i2c_rdwr_ioctl_data packets;
-    struct i2c_msg messages[1];
-
-    messages[0].addr  = addr;
-    messages[0].flags = 0;
-    messages[0].len   = sizeof(outbuf);
-    messages[0].buf   = outbuf;
-
-    /* The first byte indicates which register we'll write */
-    outbuf[0] = reg;
-
-    /*
-     * The second byte indicates the value to write.  Note that for many
-     * devices, we can write multiple, sequential registers at once by
-     * simply making outbuf bigger.
-     */
-    outbuf[1] = value;
-
-    /* Transfer the i2c packets to the kernel and verify it worked */
-    packets.msgs  = messages;
-    packets.nmsgs = 1;
-    if(ioctl(file, I2C_RDWR, &packets) < 0) {
-        perror("Unable to send I2C data");
-        return 1;
-    }
-
-    return 0;
-}
-
-
-static int get_i2c_register(int file,
-                            unsigned char addr,
-                            unsigned char reg,
-                            unsigned char *val) {
-    unsigned char inbuf, outbuf;
-    struct i2c_rdwr_ioctl_data packets;
-    struct i2c_msg messages[2];
-
-    /*
-     * In order to read a register, we first do a "dummy write" by writing
-     * 0 bytes to the register we want to read from.  This is similar to
-     * the packet in set_i2c_register, except it's 1 byte rather than 2.
-     */
-    outbuf = reg;
-    messages[0].addr  = addr;
-    messages[0].flags = 0;
-    messages[0].len   = sizeof(outbuf);
-    messages[0].buf   = &outbuf;
-
-    /* The data will get returned in this structure */
-    messages[1].addr  = addr;
-    messages[1].flags = I2C_M_RD/* | I2C_M_NOSTART*/;
-    messages[1].len   = sizeof(inbuf);
-    messages[1].buf   = &inbuf;
-
-    /* Send the request to the kernel and get the result back */
-    packets.msgs      = messages;
-    packets.nmsgs     = 2;
-    if(ioctl(file, I2C_RDWR, &packets) < 0) {
-        perror("Unable to send I2C data");
-        return 1;
-    }
-    *val = inbuf;
-
-    return 0;
-}
-
-
-u8 LIS2DS12_WriteReg(u8 Reg, u8 *Bufp, u16 len)
-{
-	if(set_i2c_register(i2c_file, i2c_device_addr, Reg, (u8)(Bufp[0])))
-    {
-        printf("Unable to set I2C register!\n");
-        return (1);
-    }
-	return(0);
-}
-
-u8 Dialog_WriteReg(u8 Reg, u8 *Bufp, u16 len)
-{
-	if(set_i2c_register(i2c_file, i2c_device_addr, Reg, (u8)(Bufp[0])))
-    {
-        printf("Unable to set I2C register!\n");
-        return (1);
-    }
-	return(0);
-}
-
-u8 LIS2DS12_ReadReg(u8 Reg, u8 *Bufp, u16 len)
-{
-    if(get_i2c_register(i2c_file, i2c_device_addr, Reg, &Bufp[0]))
-    {
-        printf("Unable to get I2C register!\n");
-        return (1);
-    }
-	return(0);
-}
-
-u8 Dialog_ReadReg(u8 Reg, u8 *Bufp, u16 len)
-{
-    if(get_i2c_register(i2c_file, i2c_device_addr, Reg, &Bufp[0]))
-    {
-        printf("Unable to get I2C register!\n");
-        return (1);
-    }
-	return(0);
-}
-
-#define DIALOG_RTC_COUNT_S_REG  	0X040
-#define DIALOG_RTC_COUNT_MI_REG  	0X041
-#define DIALOG_RTC_COUNT_H_REG  	0X042
-#define DIALOG_RTC_COUNT_D_REG  	0X043
-#define DIALOG_RTC_COUNT_MO_REG  	0X044
-#define DIALOG_RTC_COUNT_Y_REG  	0X045
-#define DIALOG_BUCK1_CFG_REG  	    0X09E
-#define DIALOG_BUCK2_CFG_REG  	    0X09D
-#define DIALOG_BUCK3_CFG_REG  	    0X0A0
-
-
-int Dialog_modes_read(void)
-{
-	u8 dialog_value = 0;
-	u8 dialog_buck1_cfg;
-	u8 dialog_buck2_cfg;
-	u8 dialog_buck3_cfg;
-
-	i2c_device_addr = DIALOG_PMIC_ADDRESS;
-	if (Dialog_ReadReg(DIALOG_BUCK1_CFG_REG, &dialog_value, 1) > 0)
-	{
-		return (1);
-	}
-	dialog_buck1_cfg = dialog_value;
-	printf("With I2C device address 0x%02X and register address 0x%02X Dialog BUCK1_CFG = 0x%02X\r\n", i2c_device_addr, DIALOG_BUCK1_CFG_REG, dialog_buck1_cfg);
-	Dialog_ReadReg(DIALOG_BUCK2_CFG_REG, &dialog_value, 1);
-	dialog_buck2_cfg = dialog_value;
-	printf("With I2C device address 0x%02X and register address 0x%02X Dialog BUCK2_CFG = 0x%02X\r\n", i2c_device_addr, DIALOG_BUCK2_CFG_REG, dialog_buck2_cfg);
-	Dialog_ReadReg(DIALOG_BUCK3_CFG_REG, &dialog_value, 1);
-	dialog_buck3_cfg = dialog_value;
-	printf("With I2C device address 0x%02X and register address 0x%02X Dialog BUCK3_CFG = 0x%02X\r\n", i2c_device_addr, DIALOG_BUCK3_CFG_REG, dialog_buck3_cfg);
-
-	fflush(stdout); // Prints to screen or whatever your standard out is
-	return (0);
-} //Dialog_modes_read()
-
-void Dialog_modes_write(unsigned char ucmode)
-{
-	i2c_device_addr = DIALOG_PMIC_ADDRESS;
-	//u8 send_byte = 0x80; //Synchronous (PWM mode)
-	u8 send_byte = ucmode;
-	Dialog_WriteReg(DIALOG_BUCK1_CFG_REG, &send_byte, 1);
-	Dialog_WriteReg(DIALOG_BUCK2_CFG_REG, &send_byte, 1);
-	Dialog_WriteReg(DIALOG_BUCK3_CFG_REG, &send_byte, 1);
-
-	printf("With I2C device address 0x%02x BUCK registers set to 0x%02x\r\n", i2c_device_addr, send_byte);
-	fflush(stdout); // Prints to screen or whatever your standard out is
-
-} //Dialog_modes_write()
-
-void Dialog_time_read(void)
-{
-	u8 dialog_value = 0;
-	u8 dialog_seconds = 0;
-	u8 dialog_minutes = 0;
-	u8 dialog_hour = 0;
-	u8 dialog_day = 0;
-	u8 dialog_month = 0;
-	u8 dialog_year = 0;
-
-	i2c_device_addr = DIALOG_PMIC_ADDRESS;
-	Dialog_ReadReg(DIALOG_RTC_COUNT_S_REG, &dialog_value, 1);
-	dialog_seconds = dialog_value & 0x3F; //Only 6 bits are valid (MSB = 1 => READY)
-	Dialog_ReadReg(DIALOG_RTC_COUNT_MI_REG, &dialog_value, 1);
-	dialog_minutes = dialog_value & 0x3F; //Only 6 bits are valid
-	Dialog_ReadReg(DIALOG_RTC_COUNT_H_REG, &dialog_value, 1);
-	dialog_hour = dialog_value & 0x1F; //Only 5 bits are valid
-	Dialog_ReadReg(DIALOG_RTC_COUNT_D_REG, &dialog_value, 1);
-	dialog_day = dialog_value & 0x1F; //Only 5 bits are valid
-	Dialog_ReadReg(DIALOG_RTC_COUNT_MO_REG, &dialog_value, 1);
-	dialog_month = dialog_value & 0x0F; //Only 4 bits are valid
-	Dialog_ReadReg(DIALOG_RTC_COUNT_Y_REG, &dialog_value, 1);
-	dialog_year = dialog_value & 0x3F; //Only 6 bits are valid
-	printf("With I2C device address 0x%02x Dialog date & time = 20%02d/%02d/%02d %02d:%02d:%02d\r", i2c_device_addr, dialog_year, dialog_month, dialog_day, dialog_hour, dialog_minutes, dialog_seconds);
-	fflush(stdout); // Prints to screen or whatever your standard out is
-
-} //Dialog_time_read()
-
-void Dialog_time_reset(void)
-{
-	i2c_device_addr = DIALOG_PMIC_ADDRESS;
-	u8 send_byte = 0x00; //reset to 0
-	Dialog_WriteReg(DIALOG_RTC_COUNT_S_REG, &send_byte, 1);
-	Dialog_WriteReg(DIALOG_RTC_COUNT_MI_REG, &send_byte, 1);
-	Dialog_WriteReg(DIALOG_RTC_COUNT_H_REG, &send_byte, 1);
-
-	send_byte = 0x01; //1st
-	Dialog_WriteReg(DIALOG_RTC_COUNT_D_REG, &send_byte, 1);
-	send_byte = 0x08; //August
-	Dialog_WriteReg(DIALOG_RTC_COUNT_MO_REG, &send_byte, 1);
-	send_byte = 17; //2017
-	Dialog_WriteReg(DIALOG_RTC_COUNT_Y_REG, &send_byte, 1);
-
-	printf("\nDialog RTC has been reset to midnight Aug 1st, 2017\r\n");
-	fflush(stdout); // Prints to screen or whatever your standard out is
-
-} //Dialog_time_reset()
-
-void sensor_init(void)
-{
-	u8 who_am_i = 0;
-
-	i2c_device_addr = MINIZED_MOTION_SENSOR_ADDRESS_SA0_HI; //default
-	LIS2DS12_ReadReg(LIS2DS12_ACC_WHO_AM_I_REG, &who_am_i, 1);
-	//printf("With I2C device address 0x%02x received WhoAmI = 0x%02x\r\n", i2c_device_addr, who_am_i);
-	if (who_am_i != LIS2DS12_ACC_WHO_AM_I)
-	{
-		//maybe the address bit was changed, try the other one:
-		i2c_device_addr = MINIZED_MOTION_SENSOR_ADDRESS_SA0_LO;
-		LIS2DS12_ReadReg(LIS2DS12_ACC_WHO_AM_I_REG, &who_am_i, 1);
-		//printf("With I2C device address 0x%02x received WhoAmI = 0x%02x\r\n", i2c_device_addr, who_am_i);
-	}
-	send_byte = 0x00; //No auto increment
-	LIS2DS12_WriteReg(LIS2DS12_ACC_CTRL2, &send_byte, 1);
-
-
-	//Write 60h in CTRL1	// Turn on the accelerometer.  14-bit mode, ODR = 400 Hz, FS = 2g
-	send_byte = 0x60;
-	LIS2DS12_WriteReg(LIS2DS12_ACC_CTRL1, &send_byte, 1);
-	//printf("CTL1 = 0x60 written\r\n");
-
-	//Enable interrupt
-	send_byte = 0x01; //Acc data-ready interrupt on INT1
-	LIS2DS12_WriteReg(LIS2DS12_ACC_CTRL4, &send_byte, 1);
-	//printf("CTL4 = 0x01 written\r\n");
-
-#if (0)
-	write_data[0] = 0x0F; //WhoAmI
-	ByteCount = XIic_Send(IIC_BASE_ADDRESS, MAGNETOMETER_ADDRESS, (u8*)&write_data, 1, XIIC_REPEATED_START);
-	ByteCount = XIic_Recv(IIC_BASE_ADDRESS, MAGNETOMETER_ADDRESS, (u8*)&read_data[0], 1, XIIC_STOP);
-	printf("Received 0x%02x\r\n",read_data[0]);
-	printf("\r\n"); //Empty line
-	//for (int n=0;n<1400;n++) //118 ms is too little
-	for (int n=0;n<1500;n++) //128 ms
-	{
-		printf(".");
-	};
-	printf("\r\n");
-#endif
-} //sensor_init()
-
-void read_temperature(void)
-{
-	int temp;
-	u8 read_value;
-
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_T, &read_value, 1);
-	//Temperature is from -40 to +85 deg C.  So 125 range.  0 is 25 deg C.  +1 deg C/LSB.  So if value < 128 temp = 25 + value else temp = 25 - (256-value)
-	if (read_value < 128)
-	{
-		temp = 25 + read_value;
-	}
-	else
-	{
-		temp = 25 - (256 - read_value);
-	}
-	printf(" OUT_T register = 0x%02x -> Temperature = %i degrees C.  ",read_value,temp);
-	//printf("OUT_T register = 0x%02x -> Temperature = %i degrees C\r\n",read_value,temp);
-} //read_temperature()
-
-int u16_2s_complement_to_int(u16 word_to_convert)
-{
-	u16 result_16bit;
-	int result_14bit;
-	int sign;
-
-	if (word_to_convert & 0x8000)
-	{ //MSB is set, negative number
-		//Invert and add 1
-		sign = -1;
-		result_16bit = (~word_to_convert) + 1;
-	}
-	else
-	{ //Positive number
-		//No change
-		sign = 1;
-		result_16bit = word_to_convert;
-	}
-	//We are using it in 14-bit mode
-	//All data is left-aligned.  So convert 16-bit value to 14-but value
-	result_14bit = sign * (int)(result_16bit >> 2);
-	return(result_14bit);
-} //u16_2s_complement_to_int()
-
-void read_motion(void)
-{
-	int iacceleration_X;
-	int iacceleration_Y;
-	int iacceleration_Z;
-	u8 read_value_LSB;
-	u8 read_value_MSB;
-	u16 accel_X;
-	u16 accel_Y;
-	u16 accel_Z;
-	u8 accel_status;
-	u8 data_ready;
-
-	data_ready = 0;
-	while (!data_ready)
-	{ //wait for DRDY
-		LIS2DS12_ReadReg(LIS2DS12_ACC_STATUS, &accel_status, 1);
-		data_ready = accel_status & 0x01; //bit 0 = DRDY
-        usleep(5); //micro seconds
-	} //wait for DRDY
-
-
-	//Read X:
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_X_L, &read_value_LSB, 1);
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_X_H, &read_value_MSB, 1);
-	accel_X = (read_value_MSB << 8) + read_value_LSB;
-	iacceleration_X = u16_2s_complement_to_int(accel_X);
-	//Read Y:
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_Y_L, &read_value_LSB, 1);
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_Y_H, &read_value_MSB, 1);
-	accel_Y = (read_value_MSB << 8) + read_value_LSB;
-	iacceleration_Y = u16_2s_complement_to_int(accel_Y);
-	//Read Z:
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_Z_L, &read_value_LSB, 1);
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_Z_H, &read_value_MSB, 1);
-	accel_Z = (read_value_MSB << 8) + read_value_LSB;
-	iacceleration_Z = u16_2s_complement_to_int(accel_Z);
-
-//	printf("  Acceleration = X: %+5d, Y: %+5d, Z: %+5d\r\n",iacceleration_X, iacceleration_Y, iacceleration_Z);
-	printf("  Acceleration = X: %+5d, Y: %+5d, Z: %+5d\r",iacceleration_X, iacceleration_Y, iacceleration_Z);
-} //read_motion()
-
-/* String formats used to build the file name path to specific GPIO
- * instances. */
-#define FILE_FORMAT_GPIO_PATH          "/sys/class/gpio"
-#define FILE_FORMAT_GPIO_EXPORT        "/export"
-#define FILE_FORMAT_GPIO_DIRECTION     "/direction"
-#define FILE_FORMAT_GPIO_VALUE         "/value"
-#define FILENAME_GPIO_OFFSETS          "/mnt/emmc/gpio_offsets.txt"
-
-#define GPIO_DIRECTION_INPUT	0
-#define GPIO_DIRECTION_OUTPUT	1
-
-// The max # of GPIOs this release of Linux is configured to support is 1024.  For 2017.2 the logic was as follows:
-// The ZYNQ PS GPIO block has 118 IOs (54 on MIO, 64 on EMIO).
-// 1024-118 = 906, hence "gpiochip906".  In our design, we have BT_REG_ON tied to EMIO[0], which is the first GPIO after
-// all of the MIO, or 906 + 54 = 960.
-// For 2017.2 values were #defined as constants.  But for 2017.4 it appears that these values can shift when the PL configuration changes.
-// Therefore these are now variables and they are assigned after inspecting the content of the Linux-assigned
-// fields in /sys/glass/gpio/gpiochipN/label fields. N is the number assigned.
-// For 2017.4 the default offsets were as below.
-
-int GPIO_OFFSET						= 903;
-int GPIO_PS_BUTTON_OFFSET			= 903; //MIO#0
-int GPIO_PS_LED_R_OFFSET			= 955; //MIO#52 (MIO#0 + 52)
-int GPIO_PS_LED_G_OFFSET			= 956; //MIO#53 (MIO#0 + 53)
-int GPIO_PL_LED_G_OFFSET			= 1023; //pl_led_2bits(1)
-int GPIO_PL_LED_R_OFFSET			= 1022; //pl_led_2bits(0)
-int GPIO_PL_SWITCH_OFFSET			= 1021; //pl_sw_1bit
-int GPIO_PL_MICROPHONE7_OFFSET		= 1020; //Bit 7 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE6_OFFSET		= 1019; //Bit 6 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE5_OFFSET		= 1018; //Bit 5 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE4_OFFSET		= 1017; //Bit 4 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE3_OFFSET		= 1016; //Bit 3 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE2_OFFSET		= 1015; //Bit 2 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE1_OFFSET		= 1014; //Bit 1 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE0_OFFSET		= 1013; //Bit 0 of AXI_GPIO to microphone
-
-int iMIO0_Offset = 0;
-int iAXI_MAX_Offset = 0;
-
-#define LED_COLOR_OFF	0
-#define LED_COLOR_GREEN	1
-#define LED_COLOR_RED	2
-#define LED_COLOR_AMBER	3
-
-int configure_gpio(int gpio_offset, unsigned char gpio_direction)
-{
-	char gpio_setting[8];
-	int test_result = 0;
-	const int char_buf_size = 80;
-	char formatted_file_name[char_buf_size];
-   int retval;
-	FILE  *fp;
-
-	// Open the export file and write the PSGPIO number for each Pmod GPIO
-	// signal to the Linux sysfs GPIO export property, then close the file.
-	fp = fopen(FILE_FORMAT_GPIO_PATH FILE_FORMAT_GPIO_EXPORT, "w");
-	if (fp == NULL)
-	{
-		printf("Error opening /sys/class/gpio/export node\n");
-		return -1;
-	}
-	else
-	{
-		// Set the value property for the export to the GPIO number.
-		sprintf(gpio_setting, "%d", gpio_offset);
-		fwrite(&gpio_setting, sizeof(char), strlen(gpio_setting), fp);
-		fflush(fp);
-		fclose(fp);
-	}
-
-	// Set the direction property of the GPIO number
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_DIRECTION, gpio_offset);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "w");
-	if (fp == NULL)
-	{
-		printf("Error opening %s\n", formatted_file_name);
-		return -1;
-	}
-	else
-	{
-		if (gpio_direction == GPIO_DIRECTION_INPUT)
-		{
-			fwrite("in", sizeof(char), 2, fp);
-		}
-		else
-		{ //GPIO_DIRECTION_OUTPUT
-			fwrite("out", sizeof(char), 3, fp);
-		}
-		fflush(fp);
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_DIRECTION, gpio_offset);
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening " FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_DIRECTION " node\n", gpio_offset);
-		return -1;
-	}
-	else
-	{
-		retval=fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as %s\n", gpio_offset, gpio_setting);
-		fflush(fp);
-		fclose(fp);
-	}
-	return test_result;
-} //configure_gpio()
-
-int set_gpio_value(int gpio_offset, unsigned char gpio_value)
-{
-	const int char_buf_size = 80;
-    char gpio_setting[5];
-    int test_result = 0;
-    char formatted_file_name[char_buf_size];
-
-    FILE  *fp_led;
-
-    // Open the gpio value properties so that they can be read/written.
-    test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_VALUE, gpio_offset);
-    if ((test_result < 0) ||
-        (test_result == (char_buf_size - 1)))
-    {
-        printf("Error formatting string, check the GPIO specified\r\n");
-        printf("%s", formatted_file_name);
-        return -1;
-    }
-    fp_led = fopen(formatted_file_name, "r+");
-	// Now turn the specified LED ON.
-    sprintf(gpio_setting, "%d", gpio_value);
-	//strcpy(gpio_setting, "1");
-    fwrite(&gpio_setting, sizeof(char), 1, fp_led);
-    fflush(fp_led);
-    // Close the GPIO value property files.
-    fclose(fp_led);
-    return test_result;
-} //set_gpio_value()
-
-void set_PS_LED_color(unsigned char led_color)
-{
-	switch(led_color)
-	{
-		case LED_COLOR_OFF :
-			set_gpio_value(GPIO_PS_LED_R_OFFSET, 0); //Red LED off
-			set_gpio_value(GPIO_PS_LED_G_OFFSET, 0); //Green LED off
-			break;
-		case LED_COLOR_GREEN :
-			set_gpio_value(GPIO_PS_LED_R_OFFSET, 0); //Red LED off
-			set_gpio_value(GPIO_PS_LED_G_OFFSET, 1); //Green LED on
-			break;
-		case LED_COLOR_RED :
-			set_gpio_value(GPIO_PS_LED_R_OFFSET, 1); //Red LED on
-			set_gpio_value(GPIO_PS_LED_G_OFFSET, 0); //Green LED off
-			break;
-		case LED_COLOR_AMBER :
-			set_gpio_value(GPIO_PS_LED_R_OFFSET, 1); //Red LED on
-			set_gpio_value(GPIO_PS_LED_G_OFFSET, 1); //Green LED on
-			break;
-		default : /* Error */
-			//Do nothing
-			break;
-	} //switch(led_color)
-} //set_PS_LED_color()
-
-void set_PL_LED_color(unsigned char led_color)
-{
-	switch(led_color)
-	{
-		case LED_COLOR_OFF :
-			set_gpio_value(GPIO_PL_LED_R_OFFSET, 0); //Red LED off
-			set_gpio_value(GPIO_PL_LED_G_OFFSET, 0); //Green LED off
-			break;
-		case LED_COLOR_GREEN :
-			set_gpio_value(GPIO_PL_LED_R_OFFSET, 0); //Red LED off
-			set_gpio_value(GPIO_PL_LED_G_OFFSET, 1); //Green LED on
-			break;
-		case LED_COLOR_RED :
-			set_gpio_value(GPIO_PL_LED_R_OFFSET, 1); //Red LED on
-			set_gpio_value(GPIO_PL_LED_G_OFFSET, 0); //Green LED off
-			break;
-		case LED_COLOR_AMBER :
-			set_gpio_value(GPIO_PL_LED_R_OFFSET, 1); //Red LED on
-			set_gpio_value(GPIO_PL_LED_G_OFFSET, 1); //Green LED on
-			break;
-		default : /* Error */
-			//Do nothing
-			break;
-	} //switch(led_color)
-} //set_PL_LED_color()
-
-int get_gpio_value(int gpio_offset)
-{
-	const int char_buf_size = 80;
-    char gpio_setting[5];
-    int test_result = 0;
-    char formatted_file_name[char_buf_size];
-
-	int sw1_value;
-	FILE  *fp_sw1;
-
-	// Open the gpio value properties so that they can be read/written.
-
-	// Open the value property file for SW1.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_VALUE, gpio_offset);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);
-		return -1;
-	}
-	fp_sw1 = fopen(formatted_file_name, "r+");
-
-	// Read the current value of the SW1 GPIO input.
-	fscanf(fp_sw1, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw1_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw1_value = 0;
-
-	// Close the GPIO value property files.
-	fclose(fp_sw1);
-
-	return sw1_value;
-} //get_gpio_value()
-
-unsigned char get_PS_button_value(void)
-{
-	unsigned char value;
-	value = get_gpio_value(GPIO_PS_BUTTON_OFFSET);
-	return(value);
-} //get_PS_button_value()
-
-unsigned char get_PL_switch_value(void)
-{
-	unsigned char value;
-	value = get_gpio_value(GPIO_PL_SWITCH_OFFSET);
-	return(value);
-} //get_PL_switch_value()
-
-int get_gpio_base(void)
-{
-    int test_result = 0;
-	const int char_buf_size = 80;
-	char formatted_file_name[char_buf_size];
-    char gpio_setting[256];
-    char chiplist[128][20];
-    char OffsetString[5];
-    int iOffset;
-    int chipindex = 0;
-    int index;
-    FILE  *fp;
-
-	//(1) Do a directory of /sys/class/gpio and put all the "gpiochip" entries into a list
-	DIR * d = opendir(FILE_FORMAT_GPIO_PATH); // Open the path
-	if(d==NULL) return(-1); // If was not able to, return
-	struct dirent * dir; // For the directory entries
-	chipindex = 0;
-	while ((dir = readdir(d)) != NULL) // if we were able to read something from the directory
-	{
-		if(strcmp(dir->d_name,".")==0 || strcmp(dir->d_name,"..")==0 ) // if it is a directory
-		{
-			//printf("%s This is a directory\r\n", dir->d_name); // print its name in green
-		}
-		else
-		{
-			//printf("%s\n", dir->d_name);
-			if(strstr(dir->d_name, "gpiochip") != NULL)
-			{
-				//printf("Found gpiochip\r\n");
-				sprintf(chiplist[chipindex++], "%s%c", dir->d_name, '\0');
-			}
-		}
-	}
-	closedir(d); // finally close the directory
-
-	//(2) Examine each /sys/class/gpio/gpiochipN/label field
-	printf("Examining the fields in all /sys/class/gpio/gpiochipN/label locations:\r\n");
-	iMIO0_Offset = 0;
-	iAXI_MAX_Offset = 0;
-	for (index=0;index<chipindex;index++)
-	{
-		//printf("%s\r\n", chiplist[index]);
-		// Open the value property file for SW1.
-		test_result = sprintf(formatted_file_name, "%s/%s/label", FILE_FORMAT_GPIO_PATH, chiplist[index]);
-		if ((test_result < 0) ||
-			(test_result == (char_buf_size - 1)))
-		{
-			printf("Error formatting string, check the GPIO specified\r\n");
-			printf("%s", formatted_file_name);
-			return -1;
-		}
-		fp = fopen(formatted_file_name, "r");
-		fscanf(fp, "%s", gpio_setting); //read "label" sub-directory
-		printf("%s = %s\r\n", formatted_file_name, gpio_setting);
-		strncpy(OffsetString, &chiplist[index][8],4); //Length of gpiochip=8
-		OffsetString[4] = 0; //null terminate
-		iOffset = atoi(OffsetString);
-		//(3) Mark N for the gpiochipN label that reads "zynq_gpio" as the base for MIO#0
-		if (!strcmp(gpio_setting, "zynq_gpio"))
-		{
-			iMIO0_Offset = iOffset;
-			printf("Found the MIO[0] base = %d\r\n", iMIO0_Offset);
-		}
-		else
-		{
-			//(4) Look for the highest other N and assign that as the upper end of the AXI GPIO
-			if (iOffset > iAXI_MAX_Offset)
-			{
-				iAXI_MAX_Offset = iOffset; //Keep track of the largest number that is not the MIO[0] base
-			}
-		}
-		fclose(fp);
-	}
-	printf("Maximum AXI GPIO offset value = %d\r\n", iAXI_MAX_Offset);
-	return(iMIO0_Offset);
-} //get_gpio_base()
-
-//Write the significant offset values to a file in the eMMC root so that scripts or other programs can pick them up there.
-int write_offset_file(void)
-{
-    FILE  *fp;
-
-	fp = fopen(FILENAME_GPIO_OFFSETS, "w");
-	fprintf(fp, "MIO0_OFFSET=%d\n", iMIO0_Offset);
-	fprintf(fp, "AXI_GPIO_MAX_OFFSET=%d\n", iAXI_MAX_Offset);
-    fflush(fp);
-    fclose(fp);
-    printf("Offsets written to %s\r\n", FILENAME_GPIO_OFFSETS);
-	return(0);
-} //write_offset_file()
-
-void assign_offsets(void)
-{
-	GPIO_OFFSET						= iMIO0_Offset;
-	GPIO_PS_BUTTON_OFFSET			= iMIO0_Offset; //MIO#0
-	GPIO_PS_LED_R_OFFSET			= iMIO0_Offset + 52; //MIO#52
-	GPIO_PS_LED_G_OFFSET			= iMIO0_Offset + 53; //MIO#53
-	GPIO_PL_LED_G_OFFSET			= iAXI_MAX_Offset; //pl_led_2bits(1)
-	GPIO_PL_LED_R_OFFSET			= iAXI_MAX_Offset - 1; //pl_led_2bits(0)
-	GPIO_PL_SWITCH_OFFSET			= iAXI_MAX_Offset - 2; //pl_sw_1bit
-	GPIO_PL_MICROPHONE7_OFFSET		= iAXI_MAX_Offset - 3; //Bit 7 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE6_OFFSET		= iAXI_MAX_Offset - 4; //Bit 6 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE5_OFFSET		= iAXI_MAX_Offset - 5; //Bit 5 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE4_OFFSET		= iAXI_MAX_Offset - 6; //Bit 4 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE3_OFFSET		= iAXI_MAX_Offset - 7; //Bit 3 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE2_OFFSET		= iAXI_MAX_Offset - 8; //Bit 2 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE1_OFFSET		= iAXI_MAX_Offset - 9; //Bit 1 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE0_OFFSET		= iAXI_MAX_Offset - 10; //Bit 0 of AXI_GPIO to microphone
-} //assign_offsets()
-
-
-/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-int main( int argc, char *argv[] )
-{
-	#define LOOP_DELAY_MS 20
-	int iTimeout_secs = 1;
-	int iTime_remaining_ms = iTimeout_secs * 1000;
-	bool bUserEnteredTimeout;
-	bool bKeyPressed = false;
-	char chkey;
-
-	if (get_gpio_base())
-	{
-		//write_offset_file();
-		assign_offsets();
-	}
-
-	printf("################################################################################\n");
-	printf("Ready to change the MiniZed Dialog DA9062 PMIC Buck Regulator mode\n");
-	printf("--------------------------------------------------------------------------------\n");
-	printf("The PS Button will reset the Dialog RTC time to midnight August 1st, 2017\n");
-	printf("The P key will change the mode to PWM  (0x80) for BUCK1, BUCK2 & BUCK3\n");
-	printf("The A key will change the mode to Auto (0xC0) for BUCK1, BUCK2 & BUCK3\n");
-	printf("Any other key to exit without change\n");
-	printf("################################################################################\n");
-	//See if a timeout in seconds was specified as a command line argument:
-	if(argc<=1)
-	{
-		//printf("No user arguments: Will loop forever.\n");
-		bUserEnteredTimeout = false;
-	}
-	else
-	{
-		iTimeout_secs = atoi(argv[1]);  //argv[0] is the program name
-		iTime_remaining_ms = iTimeout_secs * 1000;
-		printf("User specified timeout = %i seconds.\n", iTimeout_secs);
-		bUserEnteredTimeout = true;
-	}
-
-	// Open a connection to the I2C userspace control file.
-    if ((i2c_file = open(I2C_FILE_NAME, O_RDWR)) < 0) {
-        perror("Unable to open I2C control file");
-        exit(1);
-    }
-	sensor_init();
-
-	configure_gpio(GPIO_PL_SWITCH_OFFSET, GPIO_DIRECTION_INPUT);
-	configure_gpio(GPIO_PS_BUTTON_OFFSET, GPIO_DIRECTION_INPUT);
-	configure_gpio(GPIO_PS_LED_R_OFFSET, GPIO_DIRECTION_OUTPUT);
-	configure_gpio(GPIO_PS_LED_G_OFFSET, GPIO_DIRECTION_OUTPUT);
-	configure_gpio(GPIO_PL_LED_R_OFFSET, GPIO_DIRECTION_OUTPUT);
-	configure_gpio(GPIO_PL_LED_G_OFFSET, GPIO_DIRECTION_OUTPUT);
-	//configure_gpio(GPIO_PL_MICROPHONE0_OFFSET, GPIO_DIRECTION_OUTPUT);
-	//configure_gpio(GPIO_PL_MICROPHONE1_OFFSET, GPIO_DIRECTION_OUTPUT);
-
-	unsigned int free_count = 0;
-	unsigned int led_count = 0;
-	unsigned char led_counter_select = 0;
-	unsigned char led_counter_select_history;
-	//These are inverted, since we want the default switch position to select the microphone
-	led_counter_select = get_PL_switch_value() ^ 1; //XOR
-	//set_gpio_value(GPIO_PL_MICROPHONE1_OFFSET, led_counter_select);
-	led_counter_select_history = led_counter_select;
-
-	if (Dialog_modes_read() >0 )  //Display the BUCK modes
-	{
-		printf("Dialog device error or not present.\n");
-		fflush(stdout); // Prints to screen or whatever your standard out is
-		close(i2c_file);
-		return 0;
-	}
-	//while (1) //forever
-	while (iTime_remaining_ms > 0)
-	{
-		//Echo not switch on microphone GPIO bit 1:
-		led_counter_select = get_PL_switch_value() ^ 1; //XOR
-		if (led_counter_select_history != led_counter_select)
-		{ //only update when there is a change:
-			set_gpio_value(GPIO_PL_MICROPHONE1_OFFSET, led_counter_select);
-			led_counter_select_history = led_counter_select;
-		}
-		//reset the count when the button is pushed:
-		if (get_PS_button_value() == 1)
-		{
-			free_count = 0;
-			while (get_PS_button_value() == 1)
-			{} //wait for button release
-			Dialog_time_reset();
-		}
-		led_count = (free_count & 0x0F0) >> 4;
-		//Show a binary counter on the two LEDs:
-		switch(led_count)
-		{
-			case 0x00 :
-				set_PL_LED_color(LED_COLOR_OFF);
-				set_PS_LED_color(LED_COLOR_OFF);
-				break;
-			case 0x01 :
-				set_PL_LED_color(LED_COLOR_OFF);
-				set_PS_LED_color(LED_COLOR_RED);
-				break;
-			case 0x02 :
-				set_PL_LED_color(LED_COLOR_OFF);
-				set_PS_LED_color(LED_COLOR_GREEN);
-				break;
-			case 0x03 :
-				set_PL_LED_color(LED_COLOR_OFF);
-				set_PS_LED_color(LED_COLOR_AMBER);
-				break;
-			case 0x04 :
-				set_PL_LED_color(LED_COLOR_RED);
-				set_PS_LED_color(LED_COLOR_OFF);
-				break;
-			case 0x05 :
-				set_PL_LED_color(LED_COLOR_RED);
-				set_PS_LED_color(LED_COLOR_RED);
-				break;
-			case 0x06 :
-				set_PL_LED_color(LED_COLOR_RED);
-				set_PS_LED_color(LED_COLOR_GREEN);
-				break;
-			case 0x07 :
-				set_PL_LED_color(LED_COLOR_RED);
-				set_PS_LED_color(LED_COLOR_AMBER);
-				break;
-			case 0x08 :
-				set_PL_LED_color(LED_COLOR_GREEN);
-				set_PS_LED_color(LED_COLOR_OFF);
-				break;
-			case 0x09 :
-				set_PL_LED_color(LED_COLOR_GREEN);
-				set_PS_LED_color(LED_COLOR_RED);
-				break;
-			case 0x0A :
-				set_PL_LED_color(LED_COLOR_GREEN);
-				set_PS_LED_color(LED_COLOR_GREEN);
-				break;
-			case 0x0B :
-				set_PL_LED_color(LED_COLOR_GREEN);
-				set_PS_LED_color(LED_COLOR_AMBER);
-				break;
-			case 0x0C :
-				set_PL_LED_color(LED_COLOR_AMBER);
-				set_PS_LED_color(LED_COLOR_OFF);
-				break;
-			case 0x0D :
-				set_PL_LED_color(LED_COLOR_AMBER);
-				set_PS_LED_color(LED_COLOR_RED);
-				break;
-			case 0x0E :
-				set_PL_LED_color(LED_COLOR_AMBER);
-				set_PS_LED_color(LED_COLOR_GREEN);
-				break;
-			case 0x0F :
-				set_PL_LED_color(LED_COLOR_AMBER);
-				set_PS_LED_color(LED_COLOR_AMBER);
-				break;
-			default : /* Error */
-				//Do nothing
-				break;
-		} //switch(led_color)
-		fflush(stdout); //you need to do this before you sleep
-		usleep(20000); //20 ms
-		free_count++;
-		//if ((free_count & 0x1F) == 0x1F) //Every 31*20ms = 0.62 seconds
-		if ((free_count & 0x0F) == 0x0F) //Every 15*20ms = 0.31 seconds
-		{
-			i2c_device_addr = MINIZED_MOTION_SENSOR_ADDRESS_SA0_HI; //default
-			//read_temperature();
-			//read_motion();
-			Dialog_time_read();
-		}
-		if (bUserEnteredTimeout)
-		{
-			iTime_remaining_ms -= LOOP_DELAY_MS;
-		}
-
-	    if (kbhit())
-		{
-	    	bKeyPressed = true;
-			chkey = getchar();
-			//printf("\nChar received:%c\n", chkey);
-			break;
-		}
-
-	} //while (timeout)
-	printf("\n******************************************************************************\n");
-	if (bKeyPressed)
-	{
-		int intkey = (int)chkey;
-		if (chkey == ' ')
-		{
-			printf("Dialog control utility interrupted by the SPACE key.\n");
-		}
-		else if ((chkey == 'P') || (chkey == 'p'))
-		{
-			printf("Changing modes for PWM (0x80):\n");
-			Dialog_modes_write(0x80);
-			Dialog_modes_read();
-			printf("Done.\n");
-		}
-		else if ((chkey == 'A') || (chkey == 'a'))
-		{
-			printf("Changing modes for Auto: (0xC0)\n");
-			Dialog_modes_write(0xC0);
-			Dialog_modes_read();
-			printf("Done.\n");
-		}
-		else if ((intkey == 0x0A) || (intkey == 0x0D))
-		{
-			printf("Dialog control utility interrupted by the ENTER key.\n");
-		}
-		else if (intkey == 0x1B)
-		{
-			printf("Dialog control utility interrupted by the ESCAPE key.\n");
-		}
-		else if ((intkey >= 0x21) && (intkey <= 0x7E))
-		{
-			printf("Dialog control utility interrupted by the '%c' key.\n", chkey);
-		}
-		else
-		{
-			printf("Dialog control utility interrupted by key: 0x%02X.\n", intkey);
-		}
-	}
-	else if (bUserEnteredTimeout)
-	{
-		printf("Dialog control utility done after %i seconds.\n", iTimeout_secs);
-	}
-	printf("\n");
-	fflush(stdout); // Prints to screen or whatever your standard out is
-	close(i2c_file);
-	return 0;
-
-} //main()
diff --git a/recipes-apps/get-gpio-offsets/.gdbinit b/recipes-apps/get-gpio-offsets/.gdbinit
deleted file mode 100644
index 760896a756bada91c6625fe928d9dfbb17efd8bf..0000000000000000000000000000000000000000
--- a/recipes-apps/get-gpio-offsets/.gdbinit
+++ /dev/null
@@ -1,3 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
-
diff --git a/recipes-apps/get-gpio-offsets/README b/recipes-apps/get-gpio-offsets/README
deleted file mode 100644
index 1621daccc169c8410734a521e759fb91f6bd52eb..0000000000000000000000000000000000000000
--- a/recipes-apps/get-gpio-offsets/README
+++ /dev/null
@@ -1,52 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-If you are developing your application from scratch, simply start editing the
-file get-gpio-offsets.c.
-
-You can easily import any existing application code by copying it into this 
-directory, and editing the automatically generated Makefile.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To build your application, simply run "petalinux-build -c get-gpio-offsets".
-This command will build your application and will install your application
-into the target file system host copy.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
-To add extra source code files (for example, to split a large application into 
-multiple source files), add the relevant .o files to the list in the local 
-Makefile where indicated.  
-
-To have other files (for example application configuration files or scripts) 
-copied into the root file system, add addition lines under the "install:"
-target in the Makefile.  For example:
-
-    $(TARGETINST) myfile.conf /etc
-
-Copy the file myfile.conf from this directory into the /etc directory
-on the Embedded Linux filesystem).
-
-Another example:
-    (TARGETINST) -a "some text here" /etc/system.conf
-
-Add the line "some text here" to the /etc/system.conf file.
-
-See ${PETALINUX}/components/rootfs/targetroot-inst.sh for details and more options.
diff --git a/recipes-apps/get-gpio-offsets/files/Makefile b/recipes-apps/get-gpio-offsets/files/Makefile
deleted file mode 100644
index db06c70633be80624f20cd1c906611d0f10006c1..0000000000000000000000000000000000000000
--- a/recipes-apps/get-gpio-offsets/files/Makefile
+++ /dev/null
@@ -1,14 +0,0 @@
-APP = get-gpio-offsets
-
-# Add any other object files to this list below
-APP_OBJS = get-gpio-offsets.o
-
-all: build
-
-build: $(APP)
-
-$(APP): $(APP_OBJS)
-	$(CXX) $(LDFLAGS) -o $@ $(APP_OBJS) $(LDLIBS)
-
-clean:
-	-rm -f $(APP) *.elf *.gdb *.o
diff --git a/recipes-apps/get-gpio-offsets/files/get-gpio-offsets.cpp b/recipes-apps/get-gpio-offsets/files/get-gpio-offsets.cpp
deleted file mode 100644
index 4ce03d6dae6a363bb00ef234280357dd7aa5ad53..0000000000000000000000000000000000000000
--- a/recipes-apps/get-gpio-offsets/files/get-gpio-offsets.cpp
+++ /dev/null
@@ -1,179 +0,0 @@
-//MiniZEd test code that discovers the Linux offsets for GPIO pins and writes them to a file
-
-#include <stdio.h>
-#include <fcntl.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include <sys/ioctl.h>
-#include <string.h>
-#include <termios.h>
-#include <dirent.h>
-
-
-#define u8	unsigned char
-#define u16 unsigned short
-
-/* String formats used to build the file name path to specific GPIO
- * instances. */
-#define FILE_FORMAT_GPIO_PATH          "/sys/class/gpio"
-#define FILE_FORMAT_GPIO_EXPORT        "/export"
-#define FILE_FORMAT_GPIO_DIRECTION     "/direction"
-#define FILE_FORMAT_GPIO_VALUE         "/value"
-#define FILENAME_GPIO_OFFSETS          "/mnt/emmc/gpio_offsets.txt"
-
-#define GPIO_DIRECTION_INPUT	0
-#define GPIO_DIRECTION_OUTPUT	1
-
-// The max # of GPIOs this release of Linux is configured to support is 1024.  For 2017.2 the logic was as follows:
-// The ZYNQ PS GPIO block has 118 IOs (54 on MIO, 64 on EMIO).
-// 1024-118 = 906, hence "gpiochip906".  In our design, we have BT_REG_ON tied to EMIO[0], which is the first GPIO after
-// all of the MIO, or 906 + 54 = 960.
-// For 2017.2 values were #defined as constants.  But for 2017.4 it appears that these values can shift when the PL configuration changes.
-// Therefore these are now variables and they are assigned after inspecting the content of the Linux-assigned
-// fields in /sys/glass/gpio/gpiochipN/label fields. N is the number assigned.
-// For 2017.4 the default offsets were as below.
-
-int GPIO_OFFSET						= 903;
-int GPIO_PS_BUTTON_OFFSET			= 903; //MIO#0
-int GPIO_PS_LED_R_OFFSET			= 955; //MIO#52 (MIO#0 + 52)
-int GPIO_PS_LED_G_OFFSET			= 956; //MIO#53 (MIO#0 + 53)
-int GPIO_PL_LED_G_OFFSET			= 1023; //pl_led_2bits(1)
-int GPIO_PL_LED_R_OFFSET			= 1022; //pl_led_2bits(0)
-int GPIO_PL_SWITCH_OFFSET			= 1021; //pl_sw_1bit
-int GPIO_PL_MICROPHONE7_OFFSET		= 1020; //Bit 7 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE6_OFFSET		= 1019; //Bit 6 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE5_OFFSET		= 1018; //Bit 5 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE4_OFFSET		= 1017; //Bit 4 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE3_OFFSET		= 1016; //Bit 3 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE2_OFFSET		= 1015; //Bit 2 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE1_OFFSET		= 1014; //Bit 1 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE0_OFFSET		= 1013; //Bit 0 of AXI_GPIO to microphone
-
-int iMIO0_Offset = 0;
-int iAXI_MAX_Offset = 0;
-
-int get_gpio_base(void)
-{
-    int test_result = 0;
-	const int char_buf_size = 80;
-	char formatted_file_name[char_buf_size];
-    char gpio_setting[256];
-    char chiplist[128][20];
-    char OffsetString[5];
-    int iOffset;
-    int chipindex = 0;
-    int index;
-    int retval;
-    FILE  *fp;
-
-	//(1) Do a directory of /sys/class/gpio and put all the "gpiochip" entries into a list
-	DIR * d = opendir(FILE_FORMAT_GPIO_PATH); // Open the path
-	if(d==NULL) return(-1); // If was not able to, return
-	struct dirent * dir; // For the directory entries
-	chipindex = 0;
-	while ((dir = readdir(d)) != NULL) // if we were able to read something from the directory
-	{
-		if(strcmp(dir->d_name,".")==0 || strcmp(dir->d_name,"..")==0 ) // if it is a directory
-		{
-			//printf("%s This is a directory\r\n", dir->d_name); // print its name in green
-		}
-		else
-		{
-			//printf("%s\n", dir->d_name);
-			if(strstr(dir->d_name, "gpiochip") != NULL)
-			{
-				//printf("Found gpiochip\r\n");
-				sprintf(chiplist[chipindex++], "%s%c", dir->d_name, '\0');
-			}
-		}
-	}
-	closedir(d); // finally close the directory
-
-	//(2) Examine each /sys/class/gpio/gpiochipN/label field
-	printf("Examining the fields in all /sys/class/gpio/gpiochipN/label locations:\r\n");
-	iMIO0_Offset = 0;
-	iAXI_MAX_Offset = 0;
-	for (index=0;index<chipindex;index++)
-	{
-		//printf("%s\r\n", chiplist[index]);
-		// Open the value property file for SW1.
-		test_result = sprintf(formatted_file_name, "%s/%s/label", FILE_FORMAT_GPIO_PATH, chiplist[index]);
-		if ((test_result < 0) ||
-			(test_result == (char_buf_size - 1)))
-		{
-			printf("Error formatting string, check the GPIO specified\r\n");
-			printf("%s", formatted_file_name);
-			return -1;
-		}
-		fp = fopen(formatted_file_name, "r");
-		retval=fscanf(fp, "%s", gpio_setting); //read "label" sub-directory
-		printf("%s = %s\r\n", formatted_file_name, gpio_setting);
-		strncpy(OffsetString, &chiplist[index][8],4); //Length of gpiochip=8
-		OffsetString[4] = 0; //null terminate
-		iOffset = atoi(OffsetString);
-		//(3) Mark N for the gpiochipN label that reads "zynq_gpio" as the base for MIO#0
-		if (!strcmp(gpio_setting, "zynq_gpio"))
-		{
-			iMIO0_Offset = iOffset;
-			printf("Found the MIO[0] base = %d\r\n", iMIO0_Offset);
-		}
-		else
-		{
-			//(4) Look for the highest other N and assign that as the upper end of the AXI GPIO
-			if (iOffset > iAXI_MAX_Offset)
-			{
-				iAXI_MAX_Offset = iOffset; //Keep track of the largest number that is not the MIO[0] base
-			}
-		}
-		fclose(fp);
-	}
-	printf("Maximum AXI GPIO offset value = %d\r\n", iAXI_MAX_Offset);
-	return(iMIO0_Offset);
-} //get_gpio_base()
-
-//Write the significant offset values to a file in the eMMC root so that scripts or other programs can pick them up there.
-int write_offset_file(void)
-{
-    FILE  *fp;
-
-	fp = fopen(FILENAME_GPIO_OFFSETS, "w");
-	fprintf(fp, "MIO0_OFFSET=%d\n", iMIO0_Offset);
-	fprintf(fp, "AXI_GPIO_MAX_OFFSET=%d\n", iAXI_MAX_Offset);
-    fflush(fp);
-    fclose(fp);
-    printf("Offsets written to %s\r\n", FILENAME_GPIO_OFFSETS);
-	return(0);
-} //write_offset_file()
-
-void assign_offsets(void)
-{
-	GPIO_OFFSET						= iMIO0_Offset;
-	GPIO_PS_BUTTON_OFFSET			= iMIO0_Offset; //MIO#0
-	GPIO_PS_LED_R_OFFSET			= iMIO0_Offset + 52; //MIO#52
-	GPIO_PS_LED_G_OFFSET			= iMIO0_Offset + 53; //MIO#53
-	GPIO_PL_LED_G_OFFSET			= iAXI_MAX_Offset; //pl_led_2bits(1)
-	GPIO_PL_LED_R_OFFSET			= iAXI_MAX_Offset - 1; //pl_led_2bits(0)
-	GPIO_PL_SWITCH_OFFSET			= iAXI_MAX_Offset - 2; //pl_sw_1bit
-	GPIO_PL_MICROPHONE7_OFFSET		= iAXI_MAX_Offset - 3; //Bit 7 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE6_OFFSET		= iAXI_MAX_Offset - 4; //Bit 6 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE5_OFFSET		= iAXI_MAX_Offset - 5; //Bit 5 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE4_OFFSET		= iAXI_MAX_Offset - 6; //Bit 4 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE3_OFFSET		= iAXI_MAX_Offset - 7; //Bit 3 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE2_OFFSET		= iAXI_MAX_Offset - 8; //Bit 2 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE1_OFFSET		= iAXI_MAX_Offset - 9; //Bit 1 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE0_OFFSET		= iAXI_MAX_Offset - 10; //Bit 0 of AXI_GPIO to microphone
-} //assign_offsets()
-
-
-/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-int main( int argc, char *argv[] )
-{
-	if (get_gpio_base())
-	{
-		write_offset_file();
-		assign_offsets();
-	}
-
-	return 0;
-} //main()
-
diff --git a/recipes-apps/get-gpio-offsets/get-gpio-offsets.bb b/recipes-apps/get-gpio-offsets/get-gpio-offsets.bb
deleted file mode 100644
index 50d99416b17d9213e3a66e4a8efb8ed7e258ba18..0000000000000000000000000000000000000000
--- a/recipes-apps/get-gpio-offsets/get-gpio-offsets.bb
+++ /dev/null
@@ -1,23 +0,0 @@
-#
-# This file is the get-gpio-offsets recipe.
-#
-
-SUMMARY = "Simple get-gpio-offsets application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-SRC_URI = "file://get-gpio-offsets.cpp \
-           file://Makefile \
-		  "
-
-S = "${WORKDIR}"
-
-do_compile() {
-	     oe_runmake
-}
-
-do_install() {
-	     install -d ${D}${bindir}
-	     install -m 0755 get-gpio-offsets ${D}${bindir}
-}
diff --git a/recipes-apps/gpio-demo/files/Makefile b/recipes-apps/gpio-demo/files/Makefile
deleted file mode 100644
index 9106be1bd52d21feeacf9530b23aaa06bc87417b..0000000000000000000000000000000000000000
--- a/recipes-apps/gpio-demo/files/Makefile
+++ /dev/null
@@ -1,14 +0,0 @@
-APP = gpio-demo
-
-# Add any other object files to this list below
-APP_OBJS = gpio-demo.o
-
-all: $(APP)
-
-$(APP): $(APP_OBJS)
-	$(CC) $(LDFLAGS) -o $@ $(APP_OBJS) $(LDLIBS)
-
-clean:
-	-rm -f $(APP) *.elf *.gdb *.o
-
-
diff --git a/recipes-apps/gpio-demo/files/gpio-demo.c b/recipes-apps/gpio-demo/files/gpio-demo.c
deleted file mode 100644
index 4456768e70f14a7519e043c21b78ebb6caa96f8d..0000000000000000000000000000000000000000
--- a/recipes-apps/gpio-demo/files/gpio-demo.c
+++ /dev/null
@@ -1,359 +0,0 @@
-/*
-*
-* gpio-demo app
-*
-* Copyright (C) 2013 - 2016  Xilinx, Inc.  All rights reserved.
-*
-* Permission is hereby granted, free of charge, to any person
-* obtaining a copy of this software and associated documentation
-* files (the "Software"), to deal in the Software without restriction,
-* including without limitation the rights to use, copy, modify, merge,
-* publish, distribute, sublicense, and/or sell copies of the Software,
-* and to permit persons to whom the Software is furnished to do so,
-* subject to the following conditions:
-*
-* The above copyright notice and this permission notice shall be included
-* in all copies or substantial portions of the Software.
-*
-* Use of the Software is limited solely to applications:
-* (a) running on a Xilinx device, or (b) that interact
-* with a Xilinx device through a bus or interconnect.
-*
-* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-* IN NO EVENT SHALL XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
-* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-*
-* Except as contained in this notice, the name of the Xilinx shall not be used
-* in advertising or otherwise to promote the sale, use or other dealings in this
-* Software without prior written authorization from Xilinx.
-*
-*/
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include <string.h>
-#include <errno.h>
-#include <fcntl.h>
-#include <signal.h>
-
-#define GPIO_ROOT "/sys/class/gpio"
-#define ARRAY_SIZE(a) (sizeof(a)/sizeof(a[0]))
-
-static enum {NONE, IN, OUT, CYLON, KIT} gpio_opt = NONE;
-
-static const unsigned long cylon[] = {
-	0x00000080, 0x00000040, 0x00000020, 0x00000010,
-	0x00000008, 0x00000004, 0x00000002, 0x00000001,
-		    0x00000002, 0x00000004, 0x00000008,
-	0x00000010, 0x00000020, 0x00000040, 0x00000080,
-};
-
-static const unsigned long kit[] = {
-	0x000000e0, 0x00000070, 0x00000038, 0x0000001c,
-	0x0000000e, 0x00000007, 0x00000003, 0x00000001,
-		    0x00000003, 0x00000007, 0x0000000e,
-	0x0000001c, 0x00000038, 0x00000070, 0x000000e0,
-};
-
-static int gl_gpio_base = 0;
-
-static void usage (char *argv0)
-{
-	char *basename = strrchr(argv0, '/');
-	if (!basename)
-		basename = argv0;
-
-	fprintf(stderr,
-		"Usage: %s [-g GPIO_BASE] COMMAND\n"
-		"\twhere COMMAND is one of:\n"
-		"\t\t-i\t\tInput value from GPIO and print it\n"
-		"\t\t-o\tVALUE\tOutput value to GPIO\n"
-		"\t\t-c\t\tCylon test pattern\n"
-		"\t\t-k\t\t KIT test pattern\n"
-		"\tGPIO_BASE indicates which GPIO chip to talk to (The number can be \n"
-		"\tfound at /sys/class/gpio/gpiochipN).\n"
-		"\tThe highest gpiochipN is the first gpio listed in the dts file, \n"
-		"\tand the lowest gpiochipN is the last gpio listed in the dts file.\n"
-		"\tE.g.If the gpiochip240 is the LED_8bit gpio, and I want to output '1' \n"
-		"\tto the LED_8bit gpio, the command should be:\n"
-		"\t\tgpio-demo -g 240 -o 1\n"
-		"\n"
-		"\tgpio-demo written by Xilinx Inc.\n"
-		"\n"
-		,  basename);
-	exit(-2);
-}
-
-static int open_gpio_channel(int gpio_base)
-{
-	char gpio_nchan_file[128];
-	int gpio_nchan_fd;
-	int gpio_max;
-	int nchannel;
-	char nchannel_str[5];
-	char *cptr;
-	int c;
-	char channel_str[5];
-
-	char *gpio_export_file = "/sys/class/gpio/export";
-	int export_fd=0;
-
-	/* Check how many channels the GPIO chip has */
-	sprintf(gpio_nchan_file, "%s/gpiochip%d/ngpio", GPIO_ROOT, gpio_base);
-	gpio_nchan_fd = open(gpio_nchan_file, O_RDONLY);
-	if (gpio_nchan_fd < 0) {
-		fprintf(stderr, "Failed to open %s: %s\n", gpio_nchan_file, strerror(errno)); 
-		return -1;
-	}
-	read(gpio_nchan_fd, nchannel_str, sizeof(nchannel_str));
-	close(gpio_nchan_fd);
-	nchannel=(int)strtoul(nchannel_str, &cptr, 0);
-	if (cptr == nchannel_str) {
-		fprintf(stderr, "Failed to change %s into GPIO channel number\n", nchannel_str);
-		exit(1);
-	}
-
-	/* Open files for each GPIO channel */
-	export_fd=open(gpio_export_file, O_WRONLY);
-	if (export_fd < 0) {
-		fprintf(stderr, "Cannot open GPIO to export %d\n", gpio_base);
-		return -1;
-	}
-
-	gpio_max = gpio_base + nchannel;	
-	for(c = gpio_base; c < gpio_max; c++) {
-		sprintf(channel_str, "%d", c);
-		write(export_fd, channel_str, (strlen(channel_str)+1));
-	}
-	close(export_fd);
-	return nchannel;
-}
-
-static int close_gpio_channel(int gpio_base)
-{
-	char gpio_nchan_file[128];
-	int gpio_nchan_fd;
-	int gpio_max;
-	int nchannel;
-	char nchannel_str[5];
-	char *cptr;
-	int c;
-	char channel_str[5];
-
-	char *gpio_unexport_file = "/sys/class/gpio/unexport";
-	int unexport_fd=0;
-
-	/* Check how many channels the GPIO chip has */
-	sprintf(gpio_nchan_file, "%s/gpiochip%d/ngpio", GPIO_ROOT, gpio_base);
-	gpio_nchan_fd = open(gpio_nchan_file, O_RDONLY);
-	if (gpio_nchan_fd < 0) {
-		fprintf(stderr, "Failed to open %s: %s\n", gpio_nchan_file, strerror(errno)); 
-		return -1;
-	}
-	read(gpio_nchan_fd, nchannel_str, sizeof(nchannel_str));
-	close(gpio_nchan_fd);
-	nchannel=(int)strtoul(nchannel_str, &cptr, 0);
-	if (cptr == nchannel_str) {
-		fprintf(stderr, "Failed to change %s into GPIO channel number\n", nchannel_str);
-		exit(1);
-	}
-
-	/* Close opened files for each GPIO channel */
-	unexport_fd=open(gpio_unexport_file, O_WRONLY);
-	if (unexport_fd < 0) {
-		fprintf(stderr, "Cannot close GPIO by writing unexport %d\n", gpio_base);
-		return -1;
-	}
-
-	gpio_max = gpio_base + nchannel;	
-	for(c = gpio_base; c < gpio_max; c++) {
-		sprintf(channel_str, "%d", c);
-		write(unexport_fd, channel_str, (strlen(channel_str)+1));
-	}
-	close(unexport_fd);
-	return 0;
-}
-
-static int set_gpio_direction(int gpio_base, int nchannel, char *direction)
-{
-	char gpio_dir_file[128];
-	int direction_fd=0;
-	int gpio_max;
-	int c;
-
-	gpio_max = gpio_base + nchannel;
-	for(c = gpio_base; c < gpio_max; c++) {
-		sprintf(gpio_dir_file, "/sys/class/gpio/gpio%d/direction",c);
-		direction_fd=open(gpio_dir_file, O_RDWR);
-		if (direction_fd < 0) {
-			fprintf(stderr, "Cannot open the direction file for GPIO %d\n", c);
-			return 1;
-		}
-		write(direction_fd, direction, (strlen(direction)+1));
-		close(direction_fd);
-	}
-	return 0;
-}
-
-static int set_gpio_value(int gpio_base, int nchannel, int value)
-{
-	char gpio_val_file[128];
-	int val_fd=0;
-	int gpio_max;
-	char val_str[2];
-	int c;
-
-	gpio_max = gpio_base + nchannel;
-
-	for(c = gpio_base; c < gpio_max; c++) {
-		sprintf(gpio_val_file, "/sys/class/gpio/gpio%d/value",c);
-		val_fd=open(gpio_val_file, O_RDWR);
-		if (val_fd < 0) {
-			fprintf(stderr, "Cannot open the value file of GPIO %d\n", c);
-			return -1;
-		}
-		sprintf(val_str,"%d", (value & 1));
-		write(val_fd, val_str, sizeof(val_str));
-		close(val_fd);
-		value >>= 1;
-	}
-	return 0;
-}
-
-static int get_gpio_value(int gpio_base, int nchannel)
-{
-	char gpio_val_file[128];
-	int val_fd=0;
-	int gpio_max;
-	char val_str[2];
-	char *cptr;
-	int value = 0;
-	int c;
-
-	gpio_max = gpio_base + nchannel;
-
-	for(c = gpio_max-1; c >= gpio_base; c--) {
-		sprintf(gpio_val_file, "/sys/class/gpio/gpio%d/value",c);
-		val_fd=open(gpio_val_file, O_RDWR);
-		if (val_fd < 0) {
-			fprintf(stderr, "Cannot open GPIO to export %d\n", c);
-			return -1;
-		}
-		read(val_fd, val_str, sizeof(val_str));
-		value <<= 1;
-		value += (int)strtoul(val_str, &cptr, 0);
-		if (cptr == optarg) {
-			fprintf(stderr, "Failed to change %s into integer", val_str);
-		}
-		close(val_fd);
-	}
-	return value;
-}
-
-void signal_handler(int sig)
-{
-	switch (sig) {
-		case SIGTERM:
-		case SIGHUP:
-		case SIGQUIT:
-		case SIGINT:
-			close_gpio_channel(gl_gpio_base);
-			exit(0) ;
-		default:
-			break;
-	}
-}
-
-int main(int argc, char *argv[])
-{
-	extern char *optarg;
-	char *cptr;
-	int gpio_value = 0;
-	int nchannel = 0;
-
-	int c;
-	int i;
-
-	opterr = 0;
-	
-	while ((c = getopt(argc, argv, "g:io:ck")) != -1) {
-		switch (c) {
-			case 'g':
-				gl_gpio_base = (int)strtoul(optarg, &cptr, 0);
-				if (cptr == optarg)
-					usage(argv[0]);
-				break;
-			case 'i':
-				gpio_opt = IN;
-				break;
-			case 'o':
-				gpio_opt = OUT;
-				gpio_value = (int)strtoul(optarg, &cptr, 0);
-				if (cptr == optarg)
-					usage(argv[0]);
-				break;
-			case 'c':
-				gpio_opt = CYLON;
-				break;
-			case 'k':
-				gpio_opt = KIT;
-				break;
-			case '?':
-				usage(argv[0]);
-			default:
-				usage(argv[0]);
-				
-		}
-	}
-
-	if (gl_gpio_base == 0) {
-		usage(argv[0]);
-	}
-
-	nchannel = open_gpio_channel(gl_gpio_base);
-	signal(SIGTERM, signal_handler); /* catch kill signal */
-	signal(SIGHUP, signal_handler); /* catch hang up signal */
-	signal(SIGQUIT, signal_handler); /* catch quit signal */
-	signal(SIGINT, signal_handler); /* catch a CTRL-c signal */
-	switch (gpio_opt) {
-		case IN:
-			set_gpio_direction(gl_gpio_base, nchannel, "in");
-			gpio_value=get_gpio_value(gl_gpio_base, nchannel);
-			fprintf(stdout,"0x%08X\n", gpio_value);
-			break;
-		case OUT:
-			set_gpio_direction(gl_gpio_base, nchannel, "out");
-			set_gpio_value(gl_gpio_base, nchannel, gpio_value);
-			break;
-		case CYLON:
-#define CYLON_DELAY_USECS (10000)
-			set_gpio_direction(gl_gpio_base, nchannel, "out");
-			for (;;) {
-				for(i=0; i < ARRAY_SIZE(cylon); i++) {
-					gpio_value=(int)cylon[i];
-					set_gpio_value(gl_gpio_base, nchannel, gpio_value);
-				}
-				usleep(CYLON_DELAY_USECS);
-			}
-		case KIT:
-#define KIT_DELAY_USECS (10000)
-			set_gpio_direction(gl_gpio_base, nchannel, "out");
-			for (;;) {
-				for (i=0; i<ARRAY_SIZE(kit); i++) {
-					gpio_value=(int)kit[i];
-					set_gpio_value(gl_gpio_base, nchannel, gpio_value);
-				}
-				usleep(KIT_DELAY_USECS);
-			}
-		default:
-			break;
-	}
-	close_gpio_channel(gl_gpio_base);
-	return 0;
-}
-
-
diff --git a/recipes-apps/gpio-demo/gpio-demo.bb b/recipes-apps/gpio-demo/gpio-demo.bb
deleted file mode 100644
index cb5b431dbb7c9cb88c9c1b320fc3dbc3437c4063..0000000000000000000000000000000000000000
--- a/recipes-apps/gpio-demo/gpio-demo.bb
+++ /dev/null
@@ -1,23 +0,0 @@
-#
-# This is the GPIO-DEMO apllication recipe
-#
-#
-
-SUMMARY = "gpio-demo application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-SRC_URI = "file://gpio-demo.c \
-           file://Makefile \
-        "
-S = "${WORKDIR}"
-CFLAGS_prepend = "-I ${S}/include"
-do_compile() {
-        oe_runmake
-}
-do_install() {
-        install -d ${D}${bindir}
-        install -m 0755 ${S}/gpio-demo ${D}${bindir}
-
-}
-
diff --git a/recipes-apps/i2csensor/.gdbinit b/recipes-apps/i2csensor/.gdbinit
deleted file mode 100644
index 760896a756bada91c6625fe928d9dfbb17efd8bf..0000000000000000000000000000000000000000
--- a/recipes-apps/i2csensor/.gdbinit
+++ /dev/null
@@ -1,3 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
-
diff --git a/recipes-apps/i2csensor/README b/recipes-apps/i2csensor/README
deleted file mode 100644
index a93e20bca4d940f178e25665aa63ccd64e93b2fd..0000000000000000000000000000000000000000
--- a/recipes-apps/i2csensor/README
+++ /dev/null
@@ -1,52 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-If you are developing your application from scratch, simply start editing the
-file i2csensor.c.
-
-You can easily import any existing application code by copying it into this 
-directory, and editing the automatically generated Makefile.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To build your application, simply run "petlainux-build -c rootfs/i2csensor".
-This command will build your application and will install your application
-into the target file system host copy.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
-To add extra source code files (for example, to split a large application into 
-multiple source files), add the relevant .o files to the list in the local 
-Makefile where indicated.  
-
-To have other files (for example application configuration files or scripts) 
-copied into the root file system, add addition lines under the "install:"
-target in the Makefile.  For example:
-
-    $(TARGETINST) myfile.conf /etc
-
-Copy the file myfile.conf from this directory into the /etc directory
-on the Embedded Linux filesystem).
-
-Another example:
-    (TARGETINST) -a "some text here" /etc/system.conf
-
-Add the line "some text here" to the /etc/system.conf file.
-
-See ${PETALINUX}/components/rootfs/targetroot-inst.sh for details and more options.
diff --git a/recipes-apps/i2csensor/i2csensor.bb b/recipes-apps/i2csensor/i2csensor.bb
deleted file mode 100644
index c11e2a7901d1f156d90eb934cf0de6f3d1c2ec61..0000000000000000000000000000000000000000
--- a/recipes-apps/i2csensor/i2csensor.bb
+++ /dev/null
@@ -1,23 +0,0 @@
-#
-# This file is the i2csensor recipe.
-#
-
-SUMMARY = "Simple i2csensor application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-SRC_URI = "file://i2csensor.cpp \
-           file://Makefile \
-		  "
-
-S = "${WORKDIR}"
-
-do_compile() {
-	     oe_runmake
-}
-
-do_install() {
-	     install -d ${D}${bindir}
-	     install -m 0755 i2csensor ${D}${bindir}
-}
diff --git a/recipes-apps/i2csensor/i2csensor/Makefile b/recipes-apps/i2csensor/i2csensor/Makefile
deleted file mode 100644
index 5aecaab7d02f17808ddfadfbac2364c72127eb93..0000000000000000000000000000000000000000
--- a/recipes-apps/i2csensor/i2csensor/Makefile
+++ /dev/null
@@ -1,14 +0,0 @@
-APP = i2csensor
-
-# Add any other object files to this list below
-APP_OBJS = i2csensor.o
-
-all: build
-
-build: $(APP)
-
-$(APP): $(APP_OBJS)
-	$(CXX) $(LDFLAGS) -o $@ $(APP_OBJS) $(LDLIBS)
-
-clean:
-	-rm -f $(APP) *.elf *.gdb *.o
diff --git a/recipes-apps/i2csensor/i2csensor/i2csensor.cpp b/recipes-apps/i2csensor/i2csensor/i2csensor.cpp
deleted file mode 100644
index 7a142a809efa93a0992276ab36bd17c2fba8be54..0000000000000000000000000000000000000000
--- a/recipes-apps/i2csensor/i2csensor/i2csensor.cpp
+++ /dev/null
@@ -1,926 +0,0 @@
-//Test code for the LIS2DS12 motion and temperature sensor on MiniZed
-
-#include <stdio.h>
-#include <linux/i2c.h>
-#include <linux/i2c-dev.h>
-#include <fcntl.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include <sys/ioctl.h>
-#include <string.h>
-#include <termios.h>
-#include <dirent.h>
-
-int kbhit(void) {
-    static bool initflag = false;
-    static const int STDIN = 0;
-
-    if (!initflag) {
-        // Use termios to turn off line buffering
-        struct termios term;
-        tcgetattr(STDIN, &term);
-        term.c_lflag &= ~ICANON;
-        tcsetattr(STDIN, TCSANOW, &term);
-        setbuf(stdin, NULL);
-        initflag = true;
-    }
-
-    int nbbytes;
-    ioctl(STDIN, FIONREAD, &nbbytes);  // 0 is STDIN
-    return nbbytes;
-}
-
-#define u8	unsigned char
-#define u16 unsigned short
-#define I2C_FILE_NAME "/dev/i2c-0"
-
-// The following constant defines the address of the IIC device on the IIC bus.  Note that since
-// the address is only 7 bits, this  constant is the address divided by 2.
-#define MAGNETOMETER_ADDRESS  0x1E /* LIS3MDL on Arduino shield */
-#define MINIZED_MOTION_SENSOR_ADDRESS_SA0_LO  0x1E /* 0011110b for LIS2DS12 on MiniZed when SA0 is pulled low*/
-#define MINIZED_MOTION_SENSOR_ADDRESS_SA0_HI  0x1D /* 0011101b for LIS2DS12 on MiniZed when SA0 is pulled high*/
-
-#define LIS2DS12_ACC_WHO_AM_I         0x43
-/************** Device Register  *******************/
-#define LIS2DS12_ACC_SENSORHUB_OUT1  	0X06
-#define LIS2DS12_ACC_SENSORHUB_OUT2  	0X07
-#define LIS2DS12_ACC_SENSORHUB_OUT3  	0X08
-#define LIS2DS12_ACC_SENSORHUB_OUT4  	0X09
-#define LIS2DS12_ACC_SENSORHUB_OUT5  	0X0A
-#define LIS2DS12_ACC_SENSORHUB_OUT6  	0X0B
-#define LIS2DS12_ACC_MODULE_8BIT  	0X0C
-#define LIS2DS12_ACC_WHO_AM_I_REG  	0X0F
-#define LIS2DS12_ACC_CTRL1  	0X20
-#define LIS2DS12_ACC_CTRL2  	0X21
-#define LIS2DS12_ACC_CTRL3  	0X22
-#define LIS2DS12_ACC_CTRL4  	0X23
-#define LIS2DS12_ACC_CTRL5  	0X24
-#define LIS2DS12_ACC_FIFO_CTRL  	0X25
-#define LIS2DS12_ACC_OUT_T  	0X26
-#define LIS2DS12_ACC_STATUS  	0X27
-#define LIS2DS12_ACC_OUT_X_L  	0X28
-#define LIS2DS12_ACC_OUT_X_H  	0X29
-#define LIS2DS12_ACC_OUT_Y_L  	0X2A
-#define LIS2DS12_ACC_OUT_Y_H  	0X2B
-#define LIS2DS12_ACC_OUT_Z_L  	0X2C
-#define LIS2DS12_ACC_OUT_Z_H  	0X2D
-#define LIS2DS12_ACC_FIFO_THS  	0X2E
-#define LIS2DS12_ACC_FIFO_SRC  	0X2F
-#define LIS2DS12_ACC_FIFO_SAMPLES  	0X30
-#define LIS2DS12_ACC_TAP_6D_THS  	0X31
-#define LIS2DS12_ACC_INT_DUR  	0X32
-#define LIS2DS12_ACC_WAKE_UP_THS  	0X33
-#define LIS2DS12_ACC_WAKE_UP_DUR  	0X34
-#define LIS2DS12_ACC_FREE_FALL  	0X35
-#define LIS2DS12_ACC_STATUS_DUP  	0X36
-#define LIS2DS12_ACC_WAKE_UP_SRC  	0X37
-#define LIS2DS12_ACC_TAP_SRC  	0X38
-#define LIS2DS12_ACC_6D_SRC  	0X39
-#define LIS2DS12_ACC_STEP_C_MINTHS  	0X3A
-#define LIS2DS12_ACC_STEP_C_L  	0X3B
-#define LIS2DS12_ACC_STEP_C_H  	0X3C
-#define LIS2DS12_ACC_FUNC_CK_GATE  	0X3D
-#define LIS2DS12_ACC_FUNC_SRC  	0X3E
-#define LIS2DS12_ACC_FUNC_CTRL  	0X3F
-
-u8 send_byte;
-u8 write_data [256];
-u8 read_data [256];
-
-int i2c_file;
-useconds_t delay = 2000; //2ms
-u8 i2c_device_addr = MINIZED_MOTION_SENSOR_ADDRESS_SA0_HI; //by default
-
-static int set_i2c_register(int file,
-                            unsigned char addr,
-                            unsigned char reg,
-                            unsigned char value) {
-
-    unsigned char outbuf[2];
-    struct i2c_rdwr_ioctl_data packets;
-    struct i2c_msg messages[1];
-
-    messages[0].addr  = addr;
-    messages[0].flags = 0;
-    messages[0].len   = sizeof(outbuf);
-    messages[0].buf   = outbuf;
-
-    /* The first byte indicates which register we'll write */
-    outbuf[0] = reg;
-
-    /*
-     * The second byte indicates the value to write.  Note that for many
-     * devices, we can write multiple, sequential registers at once by
-     * simply making outbuf bigger.
-     */
-    outbuf[1] = value;
-
-    /* Transfer the i2c packets to the kernel and verify it worked */
-    packets.msgs  = messages;
-    packets.nmsgs = 1;
-    if(ioctl(file, I2C_RDWR, &packets) < 0) {
-        perror("Unable to send I2C data");
-        return 1;
-    }
-
-    return 0;
-}
-
-
-static int get_i2c_register(int file,
-                            unsigned char addr,
-                            unsigned char reg,
-                            unsigned char *val) {
-    unsigned char inbuf, outbuf;
-    struct i2c_rdwr_ioctl_data packets;
-    struct i2c_msg messages[2];
-
-    /*
-     * In order to read a register, we first do a "dummy write" by writing
-     * 0 bytes to the register we want to read from.  This is similar to
-     * the packet in set_i2c_register, except it's 1 byte rather than 2.
-     */
-    outbuf = reg;
-    messages[0].addr  = addr;
-    messages[0].flags = 0;
-    messages[0].len   = sizeof(outbuf);
-    messages[0].buf   = &outbuf;
-
-    /* The data will get returned in this structure */
-    messages[1].addr  = addr;
-    messages[1].flags = I2C_M_RD/* | I2C_M_NOSTART*/;
-    messages[1].len   = sizeof(inbuf);
-    messages[1].buf   = &inbuf;
-
-    /* Send the request to the kernel and get the result back */
-    packets.msgs      = messages;
-    packets.nmsgs     = 2;
-    if(ioctl(file, I2C_RDWR, &packets) < 0) {
-        perror("Unable to send I2C data");
-        return 1;
-    }
-    *val = inbuf;
-
-    return 0;
-}
-
-
-u8 LIS2DS12_WriteReg(u8 Reg, u8 *Bufp, u16 len)
-{
-	if(set_i2c_register(i2c_file, i2c_device_addr, Reg, (u8)(Bufp[0])))
-    {
-        printf("Unable to set I2C register!\n");
-        return (1);
-    }
-	return(0);
-}
-
-u8 LIS2DS12_ReadReg(u8 Reg, u8 *Bufp, u16 len)
-{
-    if(get_i2c_register(i2c_file, i2c_device_addr, Reg, &Bufp[0]))
-    {
-        printf("Unable to get I2C register!\n");
-        return (1);
-    }
-	return(0);
-}
-
-
-void sensor_init(void)
-{
-	u8 who_am_i = 0;
-
-	i2c_device_addr = MINIZED_MOTION_SENSOR_ADDRESS_SA0_HI; //default
-	LIS2DS12_ReadReg(LIS2DS12_ACC_WHO_AM_I_REG, &who_am_i, 1);
-	printf("With I2C device address 0x%02x received WhoAmI = 0x%02x\r\n", i2c_device_addr, who_am_i);
-	if (who_am_i != LIS2DS12_ACC_WHO_AM_I)
-	{
-		//maybe the address bit was changed, try the other one:
-		i2c_device_addr = MINIZED_MOTION_SENSOR_ADDRESS_SA0_LO;
-		LIS2DS12_ReadReg(LIS2DS12_ACC_WHO_AM_I_REG, &who_am_i, 1);
-		printf("With I2C device address 0x%02x received WhoAmI = 0x%02x\r\n", i2c_device_addr, who_am_i);
-	}
-	send_byte = 0x00; //No auto increment
-	LIS2DS12_WriteReg(LIS2DS12_ACC_CTRL2, &send_byte, 1);
-
-
-	//Write 60h in CTRL1	// Turn on the accelerometer.  14-bit mode, ODR = 400 Hz, FS = 2g
-	send_byte = 0x60;
-	LIS2DS12_WriteReg(LIS2DS12_ACC_CTRL1, &send_byte, 1);
-	printf("CTL1 = 0x60 written\r\n");
-
-	//Enable interrupt
-	send_byte = 0x01; //Acc data-ready interrupt on INT1
-	LIS2DS12_WriteReg(LIS2DS12_ACC_CTRL4, &send_byte, 1);
-	printf("CTL4 = 0x01 written\r\n");
-
-#if (0)
-	write_data[0] = 0x0F; //WhoAmI
-	ByteCount = XIic_Send(IIC_BASE_ADDRESS, MAGNETOMETER_ADDRESS, (u8*)&write_data, 1, XIIC_REPEATED_START);
-	ByteCount = XIic_Recv(IIC_BASE_ADDRESS, MAGNETOMETER_ADDRESS, (u8*)&read_data[0], 1, XIIC_STOP);
-	printf("Received 0x%02x\r\n",read_data[0]);
-	printf("\r\n"); //Empty line
-	//for (int n=0;n<1400;n++) //118 ms is too little
-	for (int n=0;n<1500;n++) //128 ms
-	{
-		printf(".");
-	};
-	printf("\r\n");
-#endif
-} //sensor_init()
-
-void read_temperature(void)
-{
-	int temp;
-	u8 read_value;
-
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_T, &read_value, 1);
-	//Temperature is from -40 to +85 deg C.  So 125 range.  0 is 25 deg C.  +1 deg C/LSB.  So if value < 128 temp = 25 + value else temp = 25 - (256-value)
-	if (read_value < 128)
-	{
-		temp = 25 + read_value;
-	}
-	else
-	{
-		temp = 25 - (256 - read_value);
-	}
-	printf(" OUT_T register = 0x%02x -> Temperature = %i degrees C.  ",read_value,temp);
-	//printf("OUT_T register = 0x%02x -> Temperature = %i degrees C\r\n",read_value,temp);
-} //read_temperature()
-
-int u16_2s_complement_to_int(u16 word_to_convert)
-{
-	u16 result_16bit;
-	int result_14bit;
-	int sign;
-
-	if (word_to_convert & 0x8000)
-	{ //MSB is set, negative number
-		//Invert and add 1
-		sign = -1;
-		result_16bit = (~word_to_convert) + 1;
-	}
-	else
-	{ //Positive number
-		//No change
-		sign = 1;
-		result_16bit = word_to_convert;
-	}
-	//We are using it in 14-bit mode
-	//All data is left-aligned.  So convert 16-bit value to 14-but value
-	result_14bit = sign * (int)(result_16bit >> 2);
-	return(result_14bit);
-} //u16_2s_complement_to_int()
-
-void read_motion(void)
-{
-	int iacceleration_X;
-	int iacceleration_Y;
-	int iacceleration_Z;
-	u8 read_value_LSB;
-	u8 read_value_MSB;
-	u16 accel_X;
-	u16 accel_Y;
-	u16 accel_Z;
-	u8 accel_status;
-	u8 data_ready;
-
-	data_ready = 0;
-	while (!data_ready)
-	{ //wait for DRDY
-		LIS2DS12_ReadReg(LIS2DS12_ACC_STATUS, &accel_status, 1);
-		data_ready = accel_status & 0x01; //bit 0 = DRDY
-        usleep(5); //micro seconds
-	} //wait for DRDY
-
-
-	//Read X:
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_X_L, &read_value_LSB, 1);
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_X_H, &read_value_MSB, 1);
-	accel_X = (read_value_MSB << 8) + read_value_LSB;
-	iacceleration_X = u16_2s_complement_to_int(accel_X);
-	//Read Y:
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_Y_L, &read_value_LSB, 1);
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_Y_H, &read_value_MSB, 1);
-	accel_Y = (read_value_MSB << 8) + read_value_LSB;
-	iacceleration_Y = u16_2s_complement_to_int(accel_Y);
-	//Read Z:
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_Z_L, &read_value_LSB, 1);
-	LIS2DS12_ReadReg(LIS2DS12_ACC_OUT_Z_H, &read_value_MSB, 1);
-	accel_Z = (read_value_MSB << 8) + read_value_LSB;
-	iacceleration_Z = u16_2s_complement_to_int(accel_Z);
-
-//	printf("  Acceleration = X: %+5d, Y: %+5d, Z: %+5d\r\n",iacceleration_X, iacceleration_Y, iacceleration_Z);
-	printf("  Acceleration = X: %+5d, Y: %+5d, Z: %+5d\r",iacceleration_X, iacceleration_Y, iacceleration_Z);
-} //read_motion()
-
-/* String formats used to build the file name path to specific GPIO
- * instances. */
-#define FILE_FORMAT_GPIO_PATH          "/sys/class/gpio"
-#define FILE_FORMAT_GPIO_EXPORT        "/export"
-#define FILE_FORMAT_GPIO_DIRECTION     "/direction"
-#define FILE_FORMAT_GPIO_VALUE         "/value"
-#define FILENAME_GPIO_OFFSETS          "/mnt/emmc/gpio_offsets.txt"
-
-#define GPIO_DIRECTION_INPUT	0
-#define GPIO_DIRECTION_OUTPUT	1
-
-// The max # of GPIOs this release of Linux is configured to support is 1024.  For 2017.2 the logic was as follows:
-// The ZYNQ PS GPIO block has 118 IOs (54 on MIO, 64 on EMIO).
-// 1024-118 = 906, hence "gpiochip906".  In our design, we have BT_REG_ON tied to EMIO[0], which is the first GPIO after
-// all of the MIO, or 906 + 54 = 960.
-// For 2017.2 values were #defined as constants.  But for 2017.4 it appears that these values can shift when the PL configuration changes.
-// Therefore these are now variables and they are assigned after inspecting the content of the Linux-assigned
-// fields in /sys/glass/gpio/gpiochipN/label fields. N is the number assigned.
-// For 2017.4 the default offsets were as below.
-
-int GPIO_OFFSET						= 903;
-int GPIO_PS_BUTTON_OFFSET			= 903; //MIO#0
-int GPIO_PS_LED_R_OFFSET			= 955; //MIO#52 (MIO#0 + 52)
-int GPIO_PS_LED_G_OFFSET			= 956; //MIO#53 (MIO#0 + 53)
-int GPIO_PL_LED_G_OFFSET			= 1023; //pl_led_2bits(1)
-int GPIO_PL_LED_R_OFFSET			= 1022; //pl_led_2bits(0)
-int GPIO_PL_SWITCH_OFFSET			= 1021; //pl_sw_1bit
-int GPIO_PL_MICROPHONE7_OFFSET		= 1020; //Bit 7 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE6_OFFSET		= 1019; //Bit 6 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE5_OFFSET		= 1018; //Bit 5 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE4_OFFSET		= 1017; //Bit 4 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE3_OFFSET		= 1016; //Bit 3 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE2_OFFSET		= 1015; //Bit 2 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE1_OFFSET		= 1014; //Bit 1 of AXI_GPIO to microphone
-int GPIO_PL_MICROPHONE0_OFFSET		= 1013; //Bit 0 of AXI_GPIO to microphone
-
-int iMIO0_Offset = 0;
-int iAXI_MAX_Offset = 0;
-
-#define LED_COLOR_OFF	0
-#define LED_COLOR_GREEN	1
-#define LED_COLOR_RED	2
-#define LED_COLOR_AMBER	3
-
-int configure_gpio(int gpio_offset, unsigned char gpio_direction)
-{
-	char gpio_setting[8];
-	int test_result = 0;
-	const int char_buf_size = 80;
-	char formatted_file_name[char_buf_size];
-	FILE  *fp;
-
-	// Open the export file and write the PSGPIO number for each Pmod GPIO
-	// signal to the Linux sysfs GPIO export property, then close the file.
-	fp = fopen(FILE_FORMAT_GPIO_PATH FILE_FORMAT_GPIO_EXPORT, "w");
-	if (fp == NULL)
-	{
-		printf("Error opening /sys/class/gpio/export node\n");
-		return -1;
-	}
-	else
-	{
-		// Set the value property for the export to the GPIO number.
-		sprintf(gpio_setting, "%d", gpio_offset);
-		fwrite(&gpio_setting, sizeof(char), strlen(gpio_setting), fp);
-		fflush(fp);
-		fclose(fp);
-	}
-
-	// Set the direction property of the GPIO number
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_DIRECTION, gpio_offset);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-      printf("%s", formatted_file_name);
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "w");
-	if (fp == NULL)
-	{
-		printf("Error opening %s\n", formatted_file_name);
-		return -1;
-	}
-	else
-	{
-		if (gpio_direction == GPIO_DIRECTION_INPUT)
-		{
-			fwrite("in", sizeof(char), 2, fp);
-		}
-		else
-		{ //GPIO_DIRECTION_OUTPUT
-			fwrite("out", sizeof(char), 3, fp);
-		}
-		fflush(fp);
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_DIRECTION, gpio_offset);
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening " FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_DIRECTION " node\n", gpio_offset);
-		return -1;
-	}
-	else
-	{
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as %s\n", gpio_offset, gpio_setting);
-		fflush(fp);
-		fclose(fp);
-	}
-	return test_result;
-} //configure_gpio()
-
-int set_gpio_value(int gpio_offset, unsigned char gpio_value)
-{
-	const int char_buf_size = 80;
-    char gpio_setting[5];
-    int test_result = 0;
-    char formatted_file_name[char_buf_size];
-
-    FILE  *fp_led;
-
-    // Open the gpio value properties so that they can be read/written.
-    test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_VALUE, gpio_offset);
-    if ((test_result < 0) ||
-        (test_result == (char_buf_size - 1)))
-    {
-        printf("Error formatting string, check the GPIO specified\r\n");
-        printf("%s", formatted_file_name);
-        return -1;
-    }
-    fp_led = fopen(formatted_file_name, "r+");
-	// Now turn the specified LED ON.
-    sprintf(gpio_setting, "%d", gpio_value);
-	//strcpy(gpio_setting, "1");
-    fwrite(&gpio_setting, sizeof(char), 1, fp_led);
-    fflush(fp_led);
-    // Close the GPIO value property files.
-    fclose(fp_led);
-    return test_result;
-} //set_gpio_value()
-
-int check_if_gpiochip_exists(int gpio_offset)
-{
-	int test_result = 0;
-	const int char_buf_size = 80;
-	char formatted_file_name[char_buf_size];
-
-	// Try to open the gpiochipxxx directory
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH "/gpiochip%d", gpio_offset);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);
-		return -1;
-	}
-	DIR * d = opendir(formatted_file_name); // Open the path
-	if (d == NULL)
-	{
-		//printf("Error opening %s\n", formatted_file_name);
-		return -1;
-	}
-	else
-	{
-		closedir(d); // finally close the directory
-	}
-	return test_result;
-} //check_if_gpiochip_exists()
-
-void set_PS_LED_color(unsigned char led_color)
-{
-	switch(led_color)
-	{
-		case LED_COLOR_OFF :
-			set_gpio_value(GPIO_PS_LED_R_OFFSET, 0); //Red LED off
-			set_gpio_value(GPIO_PS_LED_G_OFFSET, 0); //Green LED off
-			break;
-		case LED_COLOR_GREEN :
-			set_gpio_value(GPIO_PS_LED_R_OFFSET, 0); //Red LED off
-			set_gpio_value(GPIO_PS_LED_G_OFFSET, 1); //Green LED on
-			break;
-		case LED_COLOR_RED :
-			set_gpio_value(GPIO_PS_LED_R_OFFSET, 1); //Red LED on
-			set_gpio_value(GPIO_PS_LED_G_OFFSET, 0); //Green LED off
-			break;
-		case LED_COLOR_AMBER :
-			set_gpio_value(GPIO_PS_LED_R_OFFSET, 1); //Red LED on
-			set_gpio_value(GPIO_PS_LED_G_OFFSET, 1); //Green LED on
-			break;
-		default : /* Error */
-			//Do nothing
-			break;
-	} //switch(led_color)
-} //set_PS_LED_color()
-
-void set_PL_LED_color(unsigned char led_color)
-{
-	switch(led_color)
-	{
-		case LED_COLOR_OFF :
-			set_gpio_value(GPIO_PL_LED_R_OFFSET, 0); //Red LED off
-			set_gpio_value(GPIO_PL_LED_G_OFFSET, 0); //Green LED off
-			break;
-		case LED_COLOR_GREEN :
-			set_gpio_value(GPIO_PL_LED_R_OFFSET, 0); //Red LED off
-			set_gpio_value(GPIO_PL_LED_G_OFFSET, 1); //Green LED on
-			break;
-		case LED_COLOR_RED :
-			set_gpio_value(GPIO_PL_LED_R_OFFSET, 1); //Red LED on
-			set_gpio_value(GPIO_PL_LED_G_OFFSET, 0); //Green LED off
-			break;
-		case LED_COLOR_AMBER :
-			set_gpio_value(GPIO_PL_LED_R_OFFSET, 1); //Red LED on
-			set_gpio_value(GPIO_PL_LED_G_OFFSET, 1); //Green LED on
-			break;
-		default : /* Error */
-			//Do nothing
-			break;
-	} //switch(led_color)
-} //set_PL_LED_color()
-
-int get_gpio_value(int gpio_offset)
-{
-	const int char_buf_size = 80;
-    char gpio_setting[5];
-    int test_result = 0;
-    char formatted_file_name[char_buf_size];
-
-	int sw1_value;
-	FILE  *fp_sw1;
-
-	// Open the gpio value properties so that they can be read/written.
-
-	// Open the value property file for SW1.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH "/gpio%d" FILE_FORMAT_GPIO_VALUE, gpio_offset);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);
-		return -1;
-	}
-	fp_sw1 = fopen(formatted_file_name, "r+");
-
-	// Read the current value of the SW1 GPIO input.
-	fscanf(fp_sw1, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw1_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw1_value = 0;
-
-	// Close the GPIO value property files.
-	fclose(fp_sw1);
-
-	return sw1_value;
-} //get_gpio_value()
-
-unsigned char get_PS_button_value(void)
-{
-	unsigned char value;
-	value = get_gpio_value(GPIO_PS_BUTTON_OFFSET);
-	return(value);
-} //get_PS_button_value()
-
-unsigned char get_PL_switch_value(void)
-{
-	unsigned char value;
-	value = get_gpio_value(GPIO_PL_SWITCH_OFFSET);
-	return(value);
-} //get_PL_switch_value()
-
-int get_gpio_base(void)
-{
-    int test_result = 0;
-	const int char_buf_size = 80;
-	char formatted_file_name[char_buf_size];
-    char gpio_setting[256];
-    char chiplist[128][20];
-    char OffsetString[5];
-    int iOffset;
-    int chipindex = 0;
-    int index;
-    int retval;
-    FILE  *fp;
-
-	//(1) Do a directory of /sys/class/gpio and put all the "gpiochip" entries into a list
-	DIR * d = opendir(FILE_FORMAT_GPIO_PATH); // Open the path
-	if(d==NULL) return(-1); // If was not able to, return
-	struct dirent * dir; // For the directory entries
-	chipindex = 0;
-	while ((dir = readdir(d)) != NULL) // if we were able to read something from the directory
-	{
-		if(strcmp(dir->d_name,".")==0 || strcmp(dir->d_name,"..")==0 ) // if it is a directory
-		{
-			//printf("%s This is a directory\r\n", dir->d_name); // print its name in green
-		}
-		else
-		{
-			//printf("%s\n", dir->d_name);
-			if(strstr(dir->d_name, "gpiochip") != NULL)
-			{
-				//printf("Found gpiochip\r\n");
-				sprintf(chiplist[chipindex++], "%s%c", dir->d_name, '\0');
-			}
-		}
-	}
-	closedir(d); // finally close the directory
-
-	//(2) Examine each /sys/class/gpio/gpiochipN/label field
-	printf("Examining the fields in all /sys/class/gpio/gpiochipN/label locations:\r\n");
-	iMIO0_Offset = 0;
-	iAXI_MAX_Offset = 0;
-	for (index=0;index<chipindex;index++)
-	{
-		//printf("%s\r\n", chiplist[index]);
-		// Open the value property file for SW1.
-		test_result = sprintf(formatted_file_name, "%s/%s/label", FILE_FORMAT_GPIO_PATH, chiplist[index]);
-		if ((test_result < 0) ||
-			(test_result == (char_buf_size - 1)))
-		{
-			printf("Error formatting string, check the GPIO specified\r\n");
-			printf("%s", formatted_file_name);
-			return -1;
-		}
-		fp = fopen(formatted_file_name, "r");
-		retval=fscanf(fp, "%s", gpio_setting); //read "label" sub-directory
-		printf("%s = %s\r\n", formatted_file_name, gpio_setting);
-		strncpy(OffsetString, &chiplist[index][8],4); //Length of gpiochip=8
-		OffsetString[4] = 0; //null terminate
-		iOffset = atoi(OffsetString);
-		//(3) Mark N for the gpiochipN label that reads "zynq_gpio" as the base for MIO#0
-		if (!strcmp(gpio_setting, "zynq_gpio"))
-		{
-			iMIO0_Offset = iOffset;
-			printf("Found the MIO[0] base = %d\r\n", iMIO0_Offset);
-		}
-		else
-		{
-			//(4) Look for the highest other N and assign that as the upper end of the AXI GPIO
-			if (iOffset > iAXI_MAX_Offset)
-			{
-				iAXI_MAX_Offset = iOffset; //Keep track of the largest number that is not the MIO[0] base
-			}
-		}
-		fclose(fp);
-	}
-	printf("Maximum AXI GPIO offset value = %d\r\n", iAXI_MAX_Offset);
-	return(iMIO0_Offset);
-} //get_gpio_base()
-
-//Write the significant offset values to a file in the eMMC root so that scripts or other programs can pick them up there.
-int write_offset_file(void)
-{
-    FILE  *fp;
-
-	fp = fopen(FILENAME_GPIO_OFFSETS, "w");
-	fprintf(fp, "MIO0_OFFSET=%d\n", iMIO0_Offset);
-	fprintf(fp, "AXI_GPIO_MAX_OFFSET=%d\n", iAXI_MAX_Offset);
-    fflush(fp);
-    fclose(fp);
-    printf("Offsets written to %s\r\n", FILENAME_GPIO_OFFSETS);
-	return(0);
-} //write_offset_file()
-
-void assign_offsets(void)
-{
-	GPIO_OFFSET						= iMIO0_Offset;
-	GPIO_PS_BUTTON_OFFSET			= iMIO0_Offset; //MIO#0
-	GPIO_PS_LED_R_OFFSET			= iMIO0_Offset + 52; //MIO#52
-	GPIO_PS_LED_G_OFFSET			= iMIO0_Offset + 53; //MIO#53
-	GPIO_PL_LED_G_OFFSET			= iAXI_MAX_Offset; //pl_led_2bits(1)
-	GPIO_PL_LED_R_OFFSET			= iAXI_MAX_Offset - 1; //pl_led_2bits(0)
-	GPIO_PL_SWITCH_OFFSET			= iAXI_MAX_Offset - 2; //pl_sw_1bit
-	GPIO_PL_MICROPHONE7_OFFSET		= iAXI_MAX_Offset - 3; //Bit 7 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE6_OFFSET		= iAXI_MAX_Offset - 4; //Bit 6 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE5_OFFSET		= iAXI_MAX_Offset - 5; //Bit 5 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE4_OFFSET		= iAXI_MAX_Offset - 6; //Bit 4 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE3_OFFSET		= iAXI_MAX_Offset - 7; //Bit 3 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE2_OFFSET		= iAXI_MAX_Offset - 8; //Bit 2 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE1_OFFSET		= iAXI_MAX_Offset - 9; //Bit 1 of AXI_GPIO to microphone
-	GPIO_PL_MICROPHONE0_OFFSET		= iAXI_MAX_Offset - 10; //Bit 0 of AXI_GPIO to microphone
-} //assign_offsets()
-
-
-/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-int main( int argc, char *argv[] )
-{
-	#define LOOP_DELAY_MS 20
-	int iTimeout_secs = 1;
-	int iTime_remaining_ms = iTimeout_secs * 1000;
-	bool bUserEnteredTimeout;
-	bool bKeyPressed = false;
-	char chkey;
-	bool bmicrophone_present = true;
-
-	if (get_gpio_base())
-	{
-		//write_offset_file();
-		assign_offsets();
-	}
-
-	printf("################################################################################\n");
-	printf("Testing the MiniZed GPIO and ST Micro LIS2DS12 I2C motion & temperature sensor\n");
-	printf("--------------------------------------------------------------------------------\n");
-	printf("The PS Button will reset the LED counter\n");
-	printf("The PL Switch selects the LED count or microphone output on the PL LED\n");
-	printf("################################################################################\n");
-	//See if a timeout in seconds was specified as a command line argument:
-	if(argc<=1)
-	{
-		//printf("No user arguments: Will loop forever.\n");
-		bUserEnteredTimeout = false;
-	}
-	else
-	{
-		iTimeout_secs = atoi(argv[1]);  //argv[0] is the program name
-		iTime_remaining_ms = iTimeout_secs * 1000;
-		printf("User specified timeout = %i seconds.\n", iTimeout_secs);
-		bUserEnteredTimeout = true;
-	}
-
-	// Open a connection to the I2C userspace control file.
-	if ((i2c_file = open(I2C_FILE_NAME, O_RDWR)) < 0) {
-		perror("Unable to open I2C control file");
-		exit(1);
-	}
-	sensor_init();
-
-	configure_gpio(GPIO_PL_SWITCH_OFFSET, GPIO_DIRECTION_INPUT);
-	configure_gpio(GPIO_PS_BUTTON_OFFSET, GPIO_DIRECTION_INPUT);
-	configure_gpio(GPIO_PS_LED_R_OFFSET, GPIO_DIRECTION_OUTPUT);
-	configure_gpio(GPIO_PS_LED_G_OFFSET, GPIO_DIRECTION_OUTPUT);
-	configure_gpio(GPIO_PL_LED_R_OFFSET, GPIO_DIRECTION_OUTPUT);
-	configure_gpio(GPIO_PL_LED_G_OFFSET, GPIO_DIRECTION_OUTPUT);
-	if (check_if_gpiochip_exists(GPIO_PL_MICROPHONE0_OFFSET) < 0)
-	{
-		bmicrophone_present = false;
-		printf("No microphone selection register present in PL and/or device tree.\n");
-	}
-	else
-	{
-		configure_gpio(GPIO_PL_MICROPHONE0_OFFSET, GPIO_DIRECTION_OUTPUT); //Used as a user trigger for ILA capture
-		configure_gpio(GPIO_PL_MICROPHONE1_OFFSET, GPIO_DIRECTION_OUTPUT); //Used to select Microphone or User for PL LED
-	}
-
-	unsigned int free_count = 0;
-	unsigned int led_count = 0;
-	unsigned char led_counter_select = 0;
-	unsigned char led_counter_select_history;
-	//These are inverted, since we want the default switch position to select the microphone
-	led_counter_select = get_PL_switch_value() ^ 1; //XOR
-	if (bmicrophone_present)
-	{
-		set_gpio_value(GPIO_PL_MICROPHONE1_OFFSET, led_counter_select);
-	}
-	led_counter_select_history = led_counter_select;
-
-	//while (1) //forever
-	while (iTime_remaining_ms > 0)
-	{
-		//Echo not switch on microphone GPIO bit 1:
-		led_counter_select = get_PL_switch_value() ^ 1; //XOR
-		if (led_counter_select_history != led_counter_select)
-		{ //only update when there is a change:
-			if (bmicrophone_present)
-			{
-				set_gpio_value(GPIO_PL_MICROPHONE1_OFFSET, led_counter_select);
-			}
-			led_counter_select_history = led_counter_select;
-		}
-		//reset the count when the button is pushed:
-		if (get_PS_button_value() == 1)
-		{
-			free_count = 0;
-		}
-		led_count = (free_count & 0x0F0) >> 4;
-		//Show a binary counter on the two LEDs:
-		switch(led_count)
-		{
-			case 0x00 :
-				set_PL_LED_color(LED_COLOR_OFF);
-				set_PS_LED_color(LED_COLOR_OFF);
-				break;
-			case 0x01 :
-				set_PL_LED_color(LED_COLOR_OFF);
-				set_PS_LED_color(LED_COLOR_RED);
-				break;
-			case 0x02 :
-				set_PL_LED_color(LED_COLOR_OFF);
-				set_PS_LED_color(LED_COLOR_GREEN);
-				break;
-			case 0x03 :
-				set_PL_LED_color(LED_COLOR_OFF);
-				set_PS_LED_color(LED_COLOR_AMBER);
-				break;
-			case 0x04 :
-				set_PL_LED_color(LED_COLOR_RED);
-				set_PS_LED_color(LED_COLOR_OFF);
-				break;
-			case 0x05 :
-				set_PL_LED_color(LED_COLOR_RED);
-				set_PS_LED_color(LED_COLOR_RED);
-				break;
-			case 0x06 :
-				set_PL_LED_color(LED_COLOR_RED);
-				set_PS_LED_color(LED_COLOR_GREEN);
-				break;
-			case 0x07 :
-				set_PL_LED_color(LED_COLOR_RED);
-				set_PS_LED_color(LED_COLOR_AMBER);
-				break;
-			case 0x08 :
-				set_PL_LED_color(LED_COLOR_GREEN);
-				set_PS_LED_color(LED_COLOR_OFF);
-				break;
-			case 0x09 :
-				set_PL_LED_color(LED_COLOR_GREEN);
-				set_PS_LED_color(LED_COLOR_RED);
-				break;
-			case 0x0A :
-				set_PL_LED_color(LED_COLOR_GREEN);
-				set_PS_LED_color(LED_COLOR_GREEN);
-				break;
-			case 0x0B :
-				set_PL_LED_color(LED_COLOR_GREEN);
-				set_PS_LED_color(LED_COLOR_AMBER);
-				break;
-			case 0x0C :
-				set_PL_LED_color(LED_COLOR_AMBER);
-				set_PS_LED_color(LED_COLOR_OFF);
-				break;
-			case 0x0D :
-				set_PL_LED_color(LED_COLOR_AMBER);
-				set_PS_LED_color(LED_COLOR_RED);
-				break;
-			case 0x0E :
-				set_PL_LED_color(LED_COLOR_AMBER);
-				set_PS_LED_color(LED_COLOR_GREEN);
-				break;
-			case 0x0F :
-				set_PL_LED_color(LED_COLOR_AMBER);
-				set_PS_LED_color(LED_COLOR_AMBER);
-				break;
-			default : /* Error */
-				//Do nothing
-				break;
-		} //switch(led_color)
-		fflush(stdout); //you need to do this before you sleep
-		usleep(20000); //20 ms
-		free_count++;
-		if ((free_count & 0x1F) == 0x1F) //Every 31*20ms = 0.62 seconds
-		{
-			read_temperature();
-			read_motion();
-		}
-		if (bUserEnteredTimeout)
-		{
-			iTime_remaining_ms -= LOOP_DELAY_MS;
-		}
-
-	    if (kbhit())
-		{
-	    	bKeyPressed = true;
-			chkey = getchar();
-			//printf("\nChar received:%c\n", chkey);
-			break;
-		}
-
-	} //while (timeout)
-	printf("\n*******************************************************************************************************\n");
-	if (bKeyPressed)
-	{
-		int intkey = (int)chkey;
-		if (chkey == ' ')
-		{
-			printf("GPIO and I2C sensor test interrupted by the SPACE key.\n");
-		}
-		else if ((intkey == 0x0A) || (intkey == 0x0D))
-		{
-			printf("GPIO and I2C sensor test interrupted by the ENTER key.\n");
-		}
-		else if (intkey == 0x1B)
-		{
-			printf("GPIO and I2C sensor test interrupted by the ESCAPE key.\n");
-		}
-		else if ((intkey >= 0x21) && (intkey <= 0x7E))
-		{
-			printf("GPIO and I2C sensor test interrupted by the '%c' key.\n", chkey);
-		}
-		else
-		{
-			printf("GPIO and I2C sensor test interrupted by key: 0x%02X.\n", intkey);
-		}
-	}
-	else if (bUserEnteredTimeout)
-	{
-		printf("GPIO and I2C sensor test done after %i seconds.\n", iTimeout_secs);
-	}
-	printf("\n");
-	fflush(stdout); // Prints to screen or whatever your standard out is
-	close(i2c_file);
-	return 0;
-
-} //main()
-
diff --git a/recipes-apps/mac-eeprom-config-init/.gdbinit b/recipes-apps/mac-eeprom-config-init/.gdbinit
deleted file mode 100644
index d59fb8d90efb393c83d35becbecddcfa493a5e67..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config-init/.gdbinit
+++ /dev/null
@@ -1,2 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
diff --git a/recipes-apps/mac-eeprom-config-init/README b/recipes-apps/mac-eeprom-config-init/README
deleted file mode 100644
index 3d724a984d83d987a9367efa5457685434a5ccf6..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config-init/README
+++ /dev/null
@@ -1,47 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-If you are developing your application from scratch, simply start editing the
-file mac-eeprom-config-init.c.
-
-You can easily import any existing application code by copying it into this 
-directory, and editing the automatically generated Makefile.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To build your application, simply run "petalinux-build -c mac-eeprom-config-init".
-This command will build your application and will install your application
-into the target file system host copy.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
-To add extra source code files (for example, to split a large application into 
-multiple source files), add the relevant .o files to the list in the local 
-Makefile where indicated.  
-
-To have other files (for example application configuration files or scripts) 
-copied into the root file system, add addition lines under the "install:"
-target in the Makefile.  For example:
-
-    $(TARGETINST) myfile.conf /etc
-
-Copy the file myfile.conf from this directory into the /etc directory
-on the Embedded Linux filesystem).
-
-Another example:
-    (TARGETINST) -a "some text here" /etc/system.conf
-
-Add the line "some text here" to the /etc/system.conf file.
-
-See ${PETALINUX}/components/rootfs/targetroot-inst.sh for details and more options.
diff --git a/recipes-apps/mac-eeprom-config-init/files/pz/mac-eeprom-config-init b/recipes-apps/mac-eeprom-config-init/files/pz/mac-eeprom-config-init
deleted file mode 100644
index 9dd8b351896674b0eb698821a896bb5b8e3bb1e1..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config-init/files/pz/mac-eeprom-config-init
+++ /dev/null
@@ -1,105 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Jan 02, 2018
-#  Design Name:         Ethernet MAC ID Config Init Script Launcher
-#  Module Name:         mac-eeprom-config-init(.sh)
-#  Project Name:        Ethernet MAC ID Config Init Script Launcher
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-#                       UltraZed-EG + I/O Carrier
-#                       UltraZed-EG + PCIe Carrier
-#                       PicoZed + FMC2 Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.4
-# 
-#  Description:         Script to launch Ethernet MAC ID config script for eth0
-#                       at runlevel 5 boot time
-# 
-#  Dependencies:        
-#
-#  Revision:            Apr 02, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-DAEMON=/home/root/mac_eeprom_config.sh
-#This script launches the script that will configure the MAC address of eth0
-#with the contents of the MAC address stored in the EEPROM
-#In this case the MAC EEPROM is located at I2C address 0x51
-DAEMON_OPTS="--bus 0 --slave 0x51 --file /etc/network/interfaces --interface eth0"
-
-start ()
-{
-# Show the application banner.
-echo " "
-echo "*********************************************************************"
-echo "***                                                               ***"
-echo "***   Avnet Out Of Box PetaLinux Build V1.2                       ***"
-echo "***   MAC address init config for eth0                            ***"
-echo "***                                                               ***"
-echo "*********************************************************************"
-echo " "
-echo "/home/root/mac_eeprom_config.sh --bus 0 --slave 0x51 --file /etc/network/interfaces --interface eth0"
-echo " "
-#    start-stop-daemon -S -o --background -x $DAEMON -- $DAEMON_OPTS
-    start-stop-daemon -S -o -x $DAEMON -- $DAEMON_OPTS
-}
-
-stop ()
-{
-    echo " Stopping MAC ID Configuration"
-    start-stop-daemon -K -x $DAEMON
-}
-
-restart()
-{
-    stop
-    start
-}
-
-[ -e $DAEMON ] || exit 1
-    case "$1" in
-        start)
-            start; ;;
-        stop)
-            stop; ;;
-        restart)
-            restart; ;;
-        *)
-            echo "Usage: $0 {start|stop|restart}"
-            exit 1
-
-esac
-exit $?
diff --git a/recipes-apps/mac-eeprom-config-init/files/uz/mac-eeprom-config-init b/recipes-apps/mac-eeprom-config-init/files/uz/mac-eeprom-config-init
deleted file mode 100644
index 34ba05a48e018d23df3e9efed2e2498be29cf3f6..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config-init/files/uz/mac-eeprom-config-init
+++ /dev/null
@@ -1,106 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-#
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-#
-#  Please direct any questions to the community support forum:
-#     http://www.ultrazed.org/forum
-#
-#  Product information is available at:
-#     http://www.ultrazed.org/
-#
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-#
-# ----------------------------------------------------------------------------
-#
-#  Create Date:         Jan 02, 2018
-#  Design Name:         Ethernet MAC ID Config Init Script Launcher
-#  Module Name:         mac-eeprom-config-init(.sh)
-#  Project Name:        Ethernet MAC ID Config Init Script Launcher
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-#                       UltraZed-EG + I/O Carrier
-#                       UltraZed-EG + PCIe Carrier
-#                       PicoZed + FMC2 Carrier
-#
-#  Tool versions:       Xilinx Vivado 2017.4
-#
-#  Description:         Script to launch Ethernet MAC ID config script for eth0
-#                       at runlevel 5 boot time
-#
-#  Dependencies:
-#
-#  Revision:            Apr 02, 2018: 1.0 Initial version
-#                       Mar 27, 2020: 1.1 Updated for adding DisplayPort
-#
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-DAEMON=/home/root/mac_eeprom_config.sh
-#This script launches the script that will configure the MAC address of eth0
-#with the contents of the MAC address stored in the EEPROM
-#In this case the MAC EEPROM is located at I2C address 0x51
-DAEMON_OPTS="--bus 2 --slave 0x51 --file /etc/network/interfaces --interface eth0"
-
-start ()
-{
-# Show the application banner.
-echo " "
-echo "*********************************************************************"
-echo "***                                                               ***"
-echo "***   Avnet Out Of Box PetaLinux Build V1.2                       ***"
-echo "***   MAC address init config for eth0                            ***"
-echo "***                                                               ***"
-echo "*********************************************************************"
-echo " "
-echo "/home/root/mac_eeprom_config.sh --bus 2 --slave 0x51 --file /etc/network/interfaces --interface eth0"
-echo " "
-#    start-stop-daemon -S -o --background -x $DAEMON -- $DAEMON_OPTS
-    start-stop-daemon -S -o -x $DAEMON -- $DAEMON_OPTS
-}
-
-stop ()
-{
-    echo " Stopping MAC ID Configuration"
-    start-stop-daemon -K -x $DAEMON
-}
-
-restart()
-{
-    stop
-    start
-}
-
-[ -e $DAEMON ] || exit 1
-    case "$1" in
-        start)
-            start; ;;
-        stop)
-            stop; ;;
-        restart)
-            restart; ;;
-        *)
-            echo "Usage: $0 {start|stop|restart}"
-            exit 1
-
-esac
-exit $?
diff --git a/recipes-apps/mac-eeprom-config-init/files/uz7ev-evcc-hdmi/mac-eeprom-config-init b/recipes-apps/mac-eeprom-config-init/files/uz7ev-evcc-hdmi/mac-eeprom-config-init
deleted file mode 100644
index faa36509b77a7b9b15ffe772262b07b8380d2279..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config-init/files/uz7ev-evcc-hdmi/mac-eeprom-config-init
+++ /dev/null
@@ -1,103 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-#
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-#
-#  Please direct any questions to the community support forum:
-#     http://www.ultrazed.org/forum
-#
-#  Product information is available at:
-#     http://www.ultrazed.org/
-#
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-#
-# ----------------------------------------------------------------------------
-#
-#  Create Date:         Jan 02, 2018
-#  Design Name:         Ethernet MAC ID Config Init Script Launcher
-#  Module Name:         mac-eeprom-config-init(.sh)
-#  Project Name:        Ethernet MAC ID Config Init Script Launcher
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-#
-#  Tool versions:       Xilinx Vivado 2017.4
-#
-#  Description:         Script to launch Ethernet MAC ID config script for eth0
-#                       at runlevel 5 boot time
-#
-#  Dependencies:
-#
-#  Revision:            Apr 02, 2018: 1.0 Initial version
-#                       Mar 27, 2020: 1.1 Updated for adding DisplayPort
-#
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-DAEMON=/home/root/mac_eeprom_config.sh
-#This script launches the script that will configure the MAC address of eth0
-#with the contents of the MAC address stored in the EEPROM
-#In this case the MAC EEPROM is located at I2C address 0x51
-DAEMON_OPTS="--bus 3 --slave 0x51 --file /etc/network/interfaces --interface eth0"
-
-start ()
-{
-# Show the application banner.
-echo " "
-echo "*********************************************************************"
-echo "***                                                               ***"
-echo "***   Avnet Out Of Box PetaLinux Build V1.2                       ***"
-echo "***   MAC address init config for eth0                            ***"
-echo "***                                                               ***"
-echo "*********************************************************************"
-echo " "
-echo "/home/root/mac_eeprom_config.sh --bus 3 --slave 0x51 --file /etc/network/interfaces --interface eth0"
-echo " "
-#    start-stop-daemon -S -o --background -x $DAEMON -- $DAEMON_OPTS
-    start-stop-daemon -S -o -x $DAEMON -- $DAEMON_OPTS
-}
-
-stop ()
-{
-    echo " Stopping MAC ID Configuration"
-    start-stop-daemon -K -x $DAEMON
-}
-
-restart()
-{
-    stop
-    start
-}
-
-[ -e $DAEMON ] || exit 1
-    case "$1" in
-        start)
-            start; ;;
-        stop)
-            stop; ;;
-        restart)
-            restart; ;;
-        *)
-            echo "Usage: $0 {start|stop|restart}"
-            exit 1
-
-esac
-exit $?
diff --git a/recipes-apps/mac-eeprom-config-init/files/uz7ev-evcc-quadcam-h/mac-eeprom-config-init b/recipes-apps/mac-eeprom-config-init/files/uz7ev-evcc-quadcam-h/mac-eeprom-config-init
deleted file mode 100644
index 6365f2753d959ad9f736e5669a9f4a1bc824f944..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config-init/files/uz7ev-evcc-quadcam-h/mac-eeprom-config-init
+++ /dev/null
@@ -1,103 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-#
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-#
-#  Please direct any questions to the community support forum:
-#     http://www.ultrazed.org/forum
-#
-#  Product information is available at:
-#     http://www.ultrazed.org/
-#
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-#
-# ----------------------------------------------------------------------------
-#
-#  Create Date:         Jan 02, 2018
-#  Design Name:         Ethernet MAC ID Config Init Script Launcher
-#  Module Name:         mac-eeprom-config-init(.sh)
-#  Project Name:        Ethernet MAC ID Config Init Script Launcher
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-#
-#  Tool versions:       Xilinx Vivado 2017.4
-#
-#  Description:         Script to launch Ethernet MAC ID config script for eth0
-#                       at runlevel 5 boot time
-#
-#  Dependencies:
-#
-#  Revision:            Apr 02, 2018: 1.0 Initial version
-#                       Mar 27, 2020: 1.1 Updated for adding DisplayPort
-#
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-DAEMON=/home/root/mac_eeprom_config.sh
-#This script launches the script that will configure the MAC address of eth0
-#with the contents of the MAC address stored in the EEPROM
-#In this case the MAC EEPROM is located at I2C address 0x51
-DAEMON_OPTS="--bus 5 --slave 0x51 --file /etc/network/interfaces --interface eth0"
-
-start ()
-{
-# Show the application banner.
-echo " "
-echo "*********************************************************************"
-echo "***                                                               ***"
-echo "***   Avnet Out Of Box PetaLinux Build V1.2                       ***"
-echo "***   MAC address init config for eth0                            ***"
-echo "***                                                               ***"
-echo "*********************************************************************"
-echo " "
-echo "/home/root/mac_eeprom_config.sh --bus 5 --slave 0x51 --file /etc/network/interfaces --interface eth0"
-echo " "
-#    start-stop-daemon -S -o --background -x $DAEMON -- $DAEMON_OPTS
-    start-stop-daemon -S -o -x $DAEMON -- $DAEMON_OPTS
-}
-
-stop ()
-{
-    echo " Stopping MAC ID Configuration"
-    start-stop-daemon -K -x $DAEMON
-}
-
-restart()
-{
-    stop
-    start
-}
-
-[ -e $DAEMON ] || exit 1
-    case "$1" in
-        start)
-            start; ;;
-        stop)
-            stop; ;;
-        restart)
-            restart; ;;
-        *)
-            echo "Usage: $0 {start|stop|restart}"
-            exit 1
-
-esac
-exit $?
diff --git a/recipes-apps/mac-eeprom-config-init/mac-eeprom-config-init.bb b/recipes-apps/mac-eeprom-config-init/mac-eeprom-config-init.bb
deleted file mode 100644
index da382eb7c00668d1008981865a1c486faf8e464c..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config-init/mac-eeprom-config-init.bb
+++ /dev/null
@@ -1,30 +0,0 @@
-#
-# This file is the mac-eeprom-config-init recipe.
-#
-
-SUMMARY = "Simple mac-eeprom-config-init application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-COMPATIBLE_MACHINE = "uz|pz"
-
-SRC_URI = "file://mac-eeprom-config-init \
-		  "
-
-S = "${WORKDIR}"
-
-inherit update-rc.d
-
-INITSCRIPT_NAME = "mac-eeprom-config-init"
-# Run the script at the very beginning of run level 5.  
-# Right before the networking is initialized
-INITSCRIPT_PARAMS = "start 00 5 ."
-
-
-do_install() {
-    install -d ${D}${sysconfdir}/init.d
-    install -m 0755 ${S}/mac-eeprom-config-init ${D}${sysconfdir}/init.d/mac-eeprom-config-init
-}
-
-FILES_${PN} += "${sysconfdir}/*"
diff --git a/recipes-apps/mac-eeprom-config/.gdbinit b/recipes-apps/mac-eeprom-config/.gdbinit
deleted file mode 100644
index d59fb8d90efb393c83d35becbecddcfa493a5e67..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config/.gdbinit
+++ /dev/null
@@ -1,2 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
diff --git a/recipes-apps/mac-eeprom-config/README b/recipes-apps/mac-eeprom-config/README
deleted file mode 100644
index f8d5edbb15c4f6f17cfb2fc7959370742434c717..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config/README
+++ /dev/null
@@ -1,47 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-If you are developing your application from scratch, simply start editing the
-file mac-eeprom-config.c.
-
-You can easily import any existing application code by copying it into this 
-directory, and editing the automatically generated Makefile.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To build your application, simply run "petalinux-build -c mac-eeprom-config".
-This command will build your application and will install your application
-into the target file system host copy.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
-To add extra source code files (for example, to split a large application into 
-multiple source files), add the relevant .o files to the list in the local 
-Makefile where indicated.  
-
-To have other files (for example application configuration files or scripts) 
-copied into the root file system, add addition lines under the "install:"
-target in the Makefile.  For example:
-
-    $(TARGETINST) myfile.conf /etc
-
-Copy the file myfile.conf from this directory into the /etc directory
-on the Embedded Linux filesystem).
-
-Another example:
-    (TARGETINST) -a "some text here" /etc/system.conf
-
-Add the line "some text here" to the /etc/system.conf file.
-
-See ${PETALINUX}/components/rootfs/targetroot-inst.sh for details and more options.
diff --git a/recipes-apps/mac-eeprom-config/files/mac_eeprom_config.sh b/recipes-apps/mac-eeprom-config/files/mac_eeprom_config.sh
deleted file mode 100644
index 27e655e6c553f8a69fcea2455fa30749d27f10a5..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config/files/mac_eeprom_config.sh
+++ /dev/null
@@ -1,188 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2018 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Mar 07, 2018
-#  Design Name:         MAC ID Read from IIC EEPROM
-#  Module Name:         eeprom-read-mac.sh
-#  Project Name:        UltraZed IIC EEPROM Read MAC ID Script
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EG + I/O Carrier
-#                       UltraZed-EG + PCIe Carrier
-#                       UltraZed-EV + EV Carrier
-#                       PicoZed + FMC2 Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.4
-# 
-#  Description:         Read and Config Script for IIC EEPROM MAC ID
-# 
-#  Dependencies:        
-#
-#  Revision:            Mar 07, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-# The way this script works is to read the six EUI-48 bytes from the 
-# specified I2C EEPROM and format the data into a string that is accepted by 
-# Linux network configuration.
-#
-# According to the manufacturer datasheet, the six EUI-48 bytes are located
-# at the top of the EEPROM memory space in addresses 0xFA to 0xFF:
-#
-# http://avnet.me/mac-id-eeprom-datasheet  
-#
-# The first three bytes are the Organizationally Unique Identifier (OUI) 
-# assigned to the EEPROM manufacturer by the IEEE Registration Authority. 
-# The remaining three bytes are the Extension Identifier, and are generated 
-# by the EEPROM manufacturer to ensure a globally unique, 48-bit value which
-# can be used in an embedded computing system as MAC address for a network
-# interface controller (NIC).
-
-# Configuration parameters which may be embedded Linux implementation specific
-# depending on whether BusyBox or real Bash is used for command interpreter.
-
-# This is the hexidecimal prefix that must be removed from the results of 
-# using the 'i2cget' tool.
-HEX_PREFIX=0x
-
-# This is the delimiter character that must be inserted into the formatted MAC
-# ID string that gets used by the Linux networking subsystem.
-MAC_ID_DELIMITER=:
-
-# Sleep interval used to synchonize accesses to the filesystem.
-SLEEP_INTERVAL_NORMAL=1
-
-# Default Ethernet interface that will be reconfigured.
-ETHERNET_INTERFACE_NAME=eth0
-
-# Default output file name is NULL.
-OUTPUT_FILE=NULL
-
-# Parse incoming arguments here.
-
-while [[ $# -gt 1 ]]
-do
-key="$1"
-
-case $key in
-    -b|--bus)
-    BUS="$2"
-    shift # past argument
-    ;;
-    -f|--file)
-    OUTPUT_FILE="$2"
-    shift # past argument
-    ;;
-    -i|--interface)
-    ETHERNET_INTERFACE_NAME="$2"
-    shift # past argument
-    ;;    -s|--slave)
-    SLAVE="$2"
-    shift # past argument
-    ;;
-    --default)
-    DEFAULT=YES
-    ;;
-    *)
-            # unknown option
-    ;;
-esac
-shift # past argument or value
-done
-
-echo "Reading MAC ID from target EEPROM at ${SLAVE} on bus i2c-${BUS}"
-
-# Read each of the six individual EUI-48 byte values from EEPROM memory 
-# locations 0xFA to 0xFF and store as individual octets.
-EEPROM_RAW_READ_STRING=$(i2cget -f -y ${BUS} ${SLAVE} 0xFA)
-MAC_OCTET1=${EEPROM_RAW_READ_STRING#$HEX_PREFIX}
-
-EEPROM_RAW_READ_STRING=$(i2cget -f -y ${BUS} ${SLAVE} 0xFB)
-MAC_OCTET2=${EEPROM_RAW_READ_STRING#$HEX_PREFIX}
-
-EEPROM_RAW_READ_STRING=$(i2cget -f -y ${BUS} ${SLAVE} 0xFC)
-MAC_OCTET3=${EEPROM_RAW_READ_STRING#$HEX_PREFIX}
-
-EEPROM_RAW_READ_STRING=$(i2cget -f -y ${BUS} ${SLAVE} 0xFD)
-MAC_OCTET4=${EEPROM_RAW_READ_STRING#$HEX_PREFIX}
-
-EEPROM_RAW_READ_STRING=$(i2cget -f -y ${BUS} ${SLAVE} 0xFE)
-MAC_OCTET5=${EEPROM_RAW_READ_STRING#$HEX_PREFIX}
-
-EEPROM_RAW_READ_STRING=$(i2cget -f -y ${BUS} ${SLAVE} 0xFF)
-MAC_OCTET6=${EEPROM_RAW_READ_STRING#$HEX_PREFIX}
-
-# Compute and display formatted MAC ID string.
-RESULT_FORMATTED_MAC_STRING="$MAC_OCTET1$MAC_ID_DELIMITER$MAC_OCTET2$MAC_ID_DELIMITER$MAC_OCTET3$MAC_ID_DELIMITER$MAC_OCTET4$MAC_ID_DELIMITER$MAC_OCTET5$MAC_ID_DELIMITER$MAC_OCTET6"
-echo "Retrieved MAC ID $RESULT_FORMATTED_MAC_STRING from target EEPROM"
-
-# Make sure the output file exits else simply reconfig networking interface 
-# and exit.
-if [ ! -f ${OUTPUT_FILE} ]; then
-    echo "$0: network interface configuration file $OUTPUT_FILE not found."
-	
-	# Bring down the networking interface to prepare for configuration.
-	ifconfig ${ETHERNET_INTERFACE_NAME} down
-	sleep ${SLEEP_INTERVAL_NORMAL}
-
-	# Set the specified network interface configuration to use the new 
-	# fomatted MAC ID.
-	ifconfig ${ETHERNET_INTERFACE_NAME} hw ether ${RESULT_FORMATTED_MAC_STRING}
-	sleep ${SLEEP_INTERVAL_NORMAL}
-
-	# Bring up the networking interface to commit updated configuration.
-	ifconfig ${ETHERNET_INTERFACE_NAME} up
-	sleep ${SLEEP_INTERVAL_NORMAL}
-
-	# Capture the return code from ifconfig as the script result.
-	IIC_EEPROM_MAC_RESULT=$?
-else
-	echo "Networking interfaces configuration file $OUTPUT_FILENAME detected"
-	echo "programming EEPROM MAC ID to ${ETHERNET_INTERFACE_NAME}"
-
-	if grep -A1 "iface $ETHERNET_INTERFACE_NAME" ${OUTPUT_FILE} | grep hw
-        then
-                echo "hwaddress was already set"
-        else
-                # Append the network configuration file with the new MAC address
-                # configuration.
-                sed -i "/iface $ETHERNET_INTERFACE_NAME inet dhcp/a\ \ \ \ \ \ \ \ hwaddress ether $RESULT_FORMATTED_MAC_STRING" "${OUTPUT_FILE}"
-        fi
-
-	# Capture the return code from set as the script result.
-	IIC_EEPROM_MAC_RESULT=$?
-fi
-
-# Return captured status code from above.
-exit ${IIC_EEPROM_MAC_RESULT}
diff --git a/recipes-apps/mac-eeprom-config/mac-eeprom-config.bb b/recipes-apps/mac-eeprom-config/mac-eeprom-config.bb
deleted file mode 100644
index 53be6acca801aa2b97b21c46fa42d040a01c6c1c..0000000000000000000000000000000000000000
--- a/recipes-apps/mac-eeprom-config/mac-eeprom-config.bb
+++ /dev/null
@@ -1,21 +0,0 @@
-#
-# This file is the mac-eeprom-config recipe.
-#
-
-SUMMARY = "Simple mac-eeprom-config application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-SRC_URI = "file://mac_eeprom_config.sh \
-		  "
-
-S = "${WORKDIR}"
-
-do_install() {
-	     install -d ${D}/home/root
-	     install -m 0755 mac_eeprom_config.sh ${D}/home/root
-}
-
-FILES_${PN} += "/home/root/mac_eeprom_config.sh \
-               "
diff --git a/recipes-apps/performance-tests/files/drive-test.sh b/recipes-apps/performance-tests/files/drive-test.sh
deleted file mode 100644
index f0e21746304b78a972026378afa330b5d134d96a..0000000000000000000000000000000000000000
--- a/recipes-apps/performance-tests/files/drive-test.sh
+++ /dev/null
@@ -1,250 +0,0 @@
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Mar 04, 2018
-#  Design Name:         Disk Drive Performance Tests
-#  Module Name:         drive-test.sh
-#  Project Name:        UltraZed-EV EV Carrier SD Boot OOB
-#  Target Devices:      Xilinx Zynq UltraScale+ EV MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         Script to run performance tests for 
-#                       block device (/dev/sd<x>) storage media
-# 
-#  Dependencies:        
-#
-#  Revision:            Mar 04, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-SLEEP_INTERVAL=2s
-IS_MOUNTED_TEST_RESULT=-1
-
-
-function cleanup(){
-    # Clean up before exiting
-    # Cleanup the shrapnel the tests leave behind
-    rm -rf /mnt/${BLOCK_DEVICE}/tmp
-    rm -rf /mnt/${BLOCK_DEVICE}/test.tmp
-    # Don't forget to unmount
-    umount /mnt/${BLOCK_DEVICE}
-    # Delete the mount point
-    rm -rf /mnt/${BLOCK_DEVICE}
-}
-
-function init(){
-    # Check to see if the device is mounted
-    df | grep /dev/${BLOCK_DEVICE} > /dev/null
-    IS_MOUNTED_TEST_RESULT=$?
-    
-    # If it is mounted
-    if [ $IS_MOUNTED_TEST_RESULT == "0" ];
-    then
-        # Then unmount it
-        umount /dev/${BLOCK_DEVICE}
-
-    else
-        # Device is not mounted.  Test if the mount point exists.
-        if [ -e /mnt/${BLOCK_DEVICE} ];
-        then
-            # If it exists then do nothing
-            echo " "
-        else
-            # It does not exist, so create it
-            mkdir /mnt/${BLOCK_DEVICE}
-        fi
-    fi
-    
-    # Device has been unmounted or was not already mounted, so do that now
-    mount /dev/${BLOCK_DEVICE} /mnt/${BLOCK_DEVICE}
-
-    # Delete evidence of previous tests if it exists
-    if [ -e /mnt/${BLOCK_DEVICE}/tmp ];
-    then
-        rm -rf /mnt/${BLOCK_DEVICE}/tmp
-    fi
-            
-    if [ -e /mnt/${BLOCK_DEVICE}/test.tmp ];
-    then
-        rm -rf /mnt/${BLOCK_DEVICE}/test.tmp
-    fi
-}
-
-## The usual terse usage information:
-##
-function usage_error(){
-	echo >&2
-	echo "Performance test utility for block device (eg /dev/sda1) storage media." >&2
-    echo "Parse the 'dmesg' output to determine the system device the media" >&2
-    echo "has been attached to." >&2
-    echo "Usage:  $0 [OPTION]" >&2
-    echo "-h      Display this help and exit" >&2
-    echo "-d      Block device to use (usually sda1 or sdb1)" >&2
-	echo "        if the drive is not partitioned this will be sans partition" >&2
-    echo "        number (eg. sda or sdb)" >&2
-    echo "-t      Test to run <bonnie++ | hdparm | dd>"
-    echo "Eg:     $0 -d sda1 -t dd" >&2
-	echo >&2
-	exit 1
-}
-
-function script_intro(){
-    echo " "
-    echo "******************************************************************"
-    echo "***      ****  **      **  ****    **  ********  **********    ***"
-    echo "***     **  **  **    **   ** **   **  **            **        ***"
-    echo "***    **    **  **  **    **  **  **  *******       **        ***"
-    echo "***   **      **  ****     **   ** **  **            **        ***"
-    echo "***  **  ....  **  **      **    ****  ********      **        ***"
-    echo "***     ......                                                 ***"
-    echo "***                                                            ***"
-    echo "*** This is a simple script to run the dd, hdparm, and         ***"
-    echo "*** bonnie++ test applications to determine the maximum        ***"
-    echo "*** maximum achievable read and write performance for SATA     ***"
-    echo "*** and USB SSDs and Flash drives.                             ***"
-    echo "***                                                            ***"
-    echo "*** More information about bonnie++ can be found at            ***"
-    echo "*** http://www.coker.com.au/bonnie++/readme.html               ***"
-    echo "***                                                            ***"
-    echo "*** This test will unmount the drive if it is already mounted! ***"
-    echo "***                                                            ***"
-    echo "******************************************************************"
-    echo " "
-}
-
-function dd_test() {
-    echo "Use the 'dd'command to test how long it takes to write a 4GB file to the disk."
-    echo "time sh -c dd if=/dev/zero of=/mnt/${BLOCK_DEVICE}/test.tmp bs=4k count=1000000 && sync"
-    echo " "
-    time sh -c "dd if=/dev/zero of=/mnt/${BLOCK_DEVICE}/test.tmp bs=4k count=1000000 && sync"
-}
-
-function hdparm_test() {
-    echo " "
-    echo "Use the 'hdparm' command to test the read times for the disk."
-    echo "Run this test a few times and calculate the average."
-    echo "hdparm -T -t /dev/${BLOCK_DEVICE}"
-    hdparm -T -t /dev/${BLOCK_DEVICE}
-    sleep ${SLEEP_INTERVAL}
-    hdparm -T -t /dev/${BLOCK_DEVICE}
-    sleep ${SLEEP_INTERVAL}
-    hdparm -T -t /dev/${BLOCK_DEVICE}
-    echo " "
-}
-
-function bonnie_test() {
-    # Create the tmp folder for the bonnie++ test
-    mkdir /mnt/${BLOCK_DEVICE}/tmp
-
-    echo " "
-    echo "Use the 'Bonnie++' command to test the time for sequential and random"
-    echo "reads and writes for the disk."
-    echo "NOTE: This test takes a few minutes, depending on the speed of the disk"
-    echo "bonnie++ -d /mnt/${BLOCK_DEVICE}/tmp -r 4096 -n 16 -u root"
-    echo " "
-    time bonnie++ -d /mnt/${BLOCK_DEVICE}/tmp -r 4096 -n 16 -u root
-}
-
-# START HERE: Non-boilerplate code above should be contained within 
-# functions so that at this point simple high level calls can be made to 
-# the bigger blocks above.
-# Check to see if the mass storage block device is enumerated.
-
-while getopts "d:t:h" opt; 
-do
-    case ${opt} in
-        h)
-            usage_error
-            ;;
-        d)
-            BLOCK_DEVICE="$OPTARG"
-            ;;
-        t)
-            TEST_TO_RUN="$OPTARG"
-            ;;
-        \?)
-            echo "Invalid option: -$OPTARG" >&2
-            usage_error
-            ;;
-    esac
-done
-
-if [ -b /dev/${BLOCK_DEVICE} ];
-then
-
-    script_intro
-    
-    read -p "Press enter to continue..."
-    
-    # Do some housekeeping
-    init
-    sleep ${SLEEP_INTERVAL}
-    
-    # Run the dd tests
-    if [ $TEST_TO_RUN == "dd" ]
-    then
-        dd_test
-        sleep ${SLEEP_INTERVAL}
-    fi
-    
-    # Run the hdparm test
-    if [ $TEST_TO_RUN == "hdparm" ]
-    then
-        hdparm_test
-        sleep ${SLEEP_INTERVAL}
-    fi
-    
-    # Run the bonnie++ test
-    if [ $TEST_TO_RUN == "bonnie++" ]
-    then
-        bonnie_test
-        sleep ${SLEEP_INTERVAL}
-    fi
-    
-    # Clean up before exiting
-    # Cleanup the shrapnel the tests leave behind
-    cleanup
-    
-else
-    echo "******************************************************************"
-    echo " "
-    echo "   No Mass Storage Block Device Enumerated!"
-    echo "   Make sure the SATA or USB3 drive is connected to the board!"
-    echo " "
-    echo "******************************************************************"
-    usage_error
-fi
-
diff --git a/recipes-apps/performance-tests/files/network-test.sh b/recipes-apps/performance-tests/files/network-test.sh
deleted file mode 100644
index bf2ce7a38dc01fc12aec0b10963ae154b651c233..0000000000000000000000000000000000000000
--- a/recipes-apps/performance-tests/files/network-test.sh
+++ /dev/null
@@ -1,210 +0,0 @@
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Mar 04, 2018
-#  Design Name:         Network Performance Tests
-#  Module Name:         network-test.sh
-#  Project Name:        UltraZed-EV EV Carrier SD Boot OOB
-#  Target Devices:      Xilinx Zynq UltraScale+ EV MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.4
-# 
-#  Description:         Script to run performance tests for 
-#                       Ethernet network interface running iperf3
-# 
-#  Dependencies:        
-#
-#  Revision:            Mar 04, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-SLEEP_INTERVAL=5s
-
-
-## The usual terse usage information:
-##
-function usage_error(){
-	echo >&2
-	echo "Performance test utility for Ethernet network interface." >&2
-    echo "Usage:  $0 [OPTION]" >&2
-    echo "-h      Display this help and exit" >&2
-    echo "-i      Ethernet interface to use (usually eth0 or eth1)" >&2
-    echo "-l      Local IP address (this device)" >&2
-    echo "-m      Test mode <c (client) | s (server)>" >&2
-    echo "-r      Remote IP address of network device running iperf3" >&2
-    echo "        client or server" >&2
-	echo " Eg:    $0 -i eth1 -r 192.168.1.105 -l 192.168.1.5 -m c" >&2
-	echo >&2
-	exit 1
-}
-
-function check_interface(){
-    if [ "${ETH_INTERFACE}" != "eth1" ];
-    then
-        if [ "${ETH_INTERFACE}" != "eth0" ];
-        then 
-            echo "******************************************************************"
-            echo "!!!                                                            !!!"
-            echo "!!! No correct Ethernet interface was selected!                !!!"
-            echo "!!!                                                            !!!"
-            echo "******************************************************************"
-            usage_error
-        fi
-    fi
-}
-
-function check_mode(){
-    if [ "${TEST_MODE}" != "c" ];
-    then
-        if [ "${TEST_MODE}" != "s" ];
-        then 
-            echo "******************************************************************"
-            echo "!!!                                                            !!!"
-            echo "!!! No correct test mode was selected!                         !!!"
-            echo "!!!                                                            !!!"
-            echo "******************************************************************"
-            usage_error
-        fi
-    fi
-}
-
-function init(){
-    # Test if eth1 interface was selected 
-    if [ ${ETH_INTERFACE} == "eth1" ];
-    then
-        # Start the eth1 interface
-        echo "Start the ${ETH_INTERFACE} interface..."
-        ifconfig ${ETH_INTERFACE} up
-        sleep ${SLEEP_INTERVAL}
-    fi
-    
-    # Set a static IP address for the interface
-    echo "Set the static IP address for the device ${LOCAL_IP_ADDR}..."
-    ifconfig ${ETH_INTERFACE} ${LOCAL_IP_ADDR}
-}
-
-function script_intro(){
-echo " "
-echo "******************************************************************"
-echo "***                                                            ***"
-echo "***      ****  **      **  ****    **  ********  **********    ***"
-echo "***     **  **  **    **   ** **   **  **            **        ***"
-echo "***    **    **  **  **    **  **  **  *******       **        ***"
-echo "***   **      **  ****     **   ** **  **            **        ***"
-echo "***  **  ....  **  **      **    ****  ********      **        ***"
-echo "***     ......                                                 ***"
-echo "***                                                            ***"
-echo "*** This is a simple script to run the iperf3 test application ***"
-echo "*** to determine the maximum achievable Ethernet               ***"
-echo "*** network bandwidth.                                         ***"
-echo "***                                                            ***"
-echo "*** More information about iperf3 can be found at              ***"
-echo "*** http://software.es.net/iperf/                              ***"
-echo "***                                                            ***"
-echo "*** Make sure the Ethernet cable is connected to only the      ***"
-echo "*** selected interface before continuing!!!                    ***"
-echo "*** eth0 == Carrier                                            ***"
-echo "*** eth1 == PCIe NIC                                           ***"
-echo "***                                                            ***"
-echo "*** If running test in CLIENT mode make sure the iperf3 server ***"
-echo "*** is started on a network host before continuing!!!          ***"
-echo "*** $ iperf3 -s                                                ***"
-echo "***                                                            ***"
-echo "******************************************************************"
-echo " "
-}
-
-
-
-# START HERE: Non-boilerplate code above should be contained within 
-# functions so that at this point simple high level calls can be made to 
-# the bigger blocks above.
-# Check to see if the correct Ethernet interface was selected.
-# If neither eth1 or eth0 were selected then print the usage statement 
-
-while getopts "i:r:l:m:h" opt; 
-do
-    case ${opt} in
-        h)
-            usage_error
-            ;;
-        i)
-            ETH_INTERFACE="$OPTARG"
-            ;;
-        r)
-            REMOTE_IP_ADDR="$OPTARG"
-            ;;
-        l)
-            LOCAL_IP_ADDR="$OPTARG"
-            ;;
-        m)
-            TEST_MODE="$OPTARG"
-            ;;
-        \?)
-            echo "Invalid option: -$OPTARG" >&2
-            usage_error
-            ;;
-    esac
-done
-
-check_interface
-
-check_mode
-
-script_intro
-
-read -p "Press enter to continue..."
-
-init
-
-sleep ${SLEEP_INTERVAL}
-
-if [ ${TEST_MODE} == "c" ];
-then
-    # Start the iperf3 test
-    echo "Start the iperf3 test as a client connected to the server at IP address ${REMOTE_IP_ADDR}..."
-    iperf3 -c ${REMOTE_IP_ADDR} -i 2 -t 30
-    exit 0
-    
-elif [ ${TEST_MODE} == "s" ];
-then
-    # Start the iperf3 test
-    echo "Start the iperf3 test server..."
-    iperf3 -s
-    exit 0
-else
-    echo "No such test mode as ${TEST_MODE} or no mode selected.  Exiting..."
-    usage_error
-fi
diff --git a/recipes-apps/performance-tests/files/sd-test.sh b/recipes-apps/performance-tests/files/sd-test.sh
deleted file mode 100644
index 6407b398328229a6e78495a3f57a07626e8ae1d7..0000000000000000000000000000000000000000
--- a/recipes-apps/performance-tests/files/sd-test.sh
+++ /dev/null
@@ -1,428 +0,0 @@
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Sep 04, 2018
-#  Design Name:         SD Card Performance Tests
-#  Module Name:         sd-test.sh
-#  Project Name:        PicoZed and UltraZed SD Boot OOB
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     PicoZed and UltraZed SOMs and carriers
-# 
-#  Tool versions:       Xilinx Vivado 2018.2
-# 
-#  Description:         Script to run performance tests for 
-#                       SD card (/dev/mmcblk<x>p<y>) storage media
-# 
-#  Dependencies:        
-#
-#  Revision:            Sep 04, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-
-
-#!/bin/bash
-
-SLEEP_INTERVAL=1s
-IS_MOUNTED_TEST_RESULT=-1
-#MMC_DEVICE=mmcblk0
-#MMC_PART=p1
-
-TEST_FILE=dd_testfile
-
-PRINTF_FORMAT="%8s : %s\n"
-CARD_FORMAT="*** Reported SD card size is %3s GB                            ***\n"
-
-function cleanup(){
-   # Clean up before exiting
-   # Cleanup the shrapnel the tests leave behind
-   if [ -e /mnt/${MMC_DEVICE}${MMC_PART}/tmp ];
-   then
-      rm -rf /mnt/${MMC_DEVICE}${MMC_PART}/tmp
-   fi
-   
-   if [ -e /mnt/${MMC_DEVICE}${MMC_PART}/test.tmp ];
-   then
-      rm -f /mnt/${MMC_DEVICE}${MMC_PART}/test.tmp
-   fi
-
-   if [ -e /mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE} ];
-   then
-      rm -f /mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE}
-   fi
-    
-   # Don't forget to unmount
-   umount /mnt/${MMC_DEVICE}${MMC_PART}
-   # Delete the mount point
-   rm -rf /mnt/${MMC_DEVICE}${MMC_PART}
-}
-
-function init(){
-   # Check to see if the device is mounted
-   df | grep /dev/${MMC_DEVICE}${MMC_PART} > /dev/null
-   IS_MOUNTED_TEST_RESULT=$?
-   
-   # If it is mounted
-   if [ $IS_MOUNTED_TEST_RESULT == "0" ];
-   then
-      # Then unmount it
-      umount /dev/${MMC_DEVICE}${MMC_PART}
-
-   else
-      # Device is not mounted.  Test if the mount point exists.
-      if [ -e /mnt/${MMC_DEVICE}${MMC_PART} ];
-      then
-         # If it exists then do nothing
-         echo " "
-      else
-         # It does not exist, so create it
-         mkdir /mnt/${MMC_DEVICE}${MMC_PART}
-      fi
-   fi
-    
-   # Device has been unmounted or was not already mounted, so do that now
-   mount /dev/${MMC_DEVICE}${MMC_PART} /mnt/${MMC_DEVICE}${MMC_PART} -o rw
-
-   # Delete evidence of previous tests if it exists
-   if [ -e /mnt/${MMC_DEVICE}${MMC_PART}/tmp ];
-   then
-      rm -rf /mnt/${MMC_DEVICE}${MMC_PART}/tmp
-   fi
-            
-   if [ -e /mnt/${MMC_DEVICE}${MMC_PART}/test.tmp ];
-   then
-      rm -rf /mnt/${MMC_DEVICE}${MMC_PART}/test.tmp
-   fi
-
-   if [ -e /mnt/${BLOCK_DEVICE}/${TEST_FILE} ];
-   then
-      rm -rf /mnt/${BLOCK_DEVICE}/${TEST_FILE}
-   fi
-
-   if [ -e /mnt/${BLOCK_DEVICE}/clearcache.tmp ];
-   then
-      rm -rf /mnt/${BLOCK_DEVICE}/clearcache.tmp
-   fi
-}
-
-## The usual terse usage information:
-##
-function usage_error(){
-   echo >&2
-   echo "Performance test utility for MMC device (eg /dev/mmcblk1p1) storage media." >&2
-   echo "Parse the 'dmesg' output to determine the system device the media" >&2
-   echo "has been attached to." >&2
-   echo "Usage:  $0 [OPTION]" >&2
-   echo "-h      Display this help and exit" >&2
-   echo "-d      MMC device to use (usually mmcblk0 or mmcblk1)" >&2
-   echo "-p      Device partition to use (usually p1 or p2)" >&2
-   echo "-t      Test to run <hdparm | dd>"
-   echo "Eg:     $0 -d mmcblk0 -p p1 -t dd" >&2
-   echo >&2
-   exit 1
-}
-
-function script_intro(){
-   echo " "
-   echo "******************************************************************"
-   echo "***      ****  **      **  ****    **  ********  **********    ***"
-   echo "***     **  **  **    **   ** **   **  **            **        ***"
-   echo "***    **    **  **  **    **  **  **  *******       **        ***"
-   echo "***   **      **  ****     **   ** **  **            **        ***"
-   echo "***  **  ....  **  **      **    ****  ********      **        ***"
-   echo "***     ......                                                 ***"
-   echo "***                                                            ***"
-   echo "*** This is a simple script to run the dd and hdparm           ***"
-   echo "*** test applications to determine the maximum                 ***"
-   echo "*** maximum achievable read and write performance for          ***"
-   echo "*** SD cards and eMMC devices.                                 ***"
-   echo "***                                                            ***"
-   echo "*** This test will unmount the drive if it is already mounted! ***"
-   echo "***                                                            ***"
-   echo "******************************************************************"
-   echo " "
-}
-
-function get_mmc_size() {
-   
-   # Calculate the SD card or eMMC device size
-   # Fetch the number of sectors on the card
-   CARD_SECTORS=$(cat /sys/block/${MMC_DEVICE}/${MMC_DEVICE}${MMC_PART}/size)
-   # Fetch the reported block size for the card
-   CARD_BS=$(cat /sys/block/${MMC_DEVICE}/queue/logical_block_size)
-   # Extract the partition size from the cat output
-   # Divide down to get the size in GB
-   CARD_SIZE=$(((((((( $CARD_SECTORS * $CARD_BS )) /1000)) /1000)) /1000))
-
-   echo "******************************************************************"
-   echo "***                                                            ***"
-   printf "$CARD_FORMAT" "$CARD_SIZE"
-   echo "***                                                            ***"
-   echo "******************************************************************"
-
-   #read -p "Pause here.  Press enter to continue."
-}
-
-function dd_test() {
-   #echo "Use the 'dd'command to test how long it takes to write a 4GB file to the disk."
-   #echo "time sh -c dd if=/dev/zero of=/mnt/${MMC_DEVICE}${MMC_PART}/test.tmp bs=4k count=1000000 && sync"
-   #echo " "
-   #time sh -c "dd if=/dev/zero of=/mnt/${MMC_DEVICE}${MMC_PART}/test.tmp bs=4k count=1000000 && sync"
-
-   echo "******************************************************************"
-   echo "***                                                            ***"
-   echo "*** Perform dd WRITE tests using a 1MB and 8MB files           ***"
-   #echo "*** Using a 1MB, 8MB, 64MB, 512MB, and 1GB file                ***"
-   echo "***                                                            ***"
-   echo "******************************************************************"
-
-   # File sizes of       1MB     8MB     64MB     512MB     1GB
-   #for TEST_FILE_SIZE in 1048576 8388608 67108864 536870912 1073741824
-   for TEST_FILE_SIZE in 1048576 8388608
-   do
-      echo ""
-      echo "***"
-      echo "*** Create a ${TEST_FILE_SIZE} byte file"
-      echo "***"
-      printf "$PRINTF_FORMAT" 'block size' 'transfer rate'
-   
-      # Block sizes of  1K   2K   4K   8K   16K   32K   64K   128K   256K   512K   1M      2M      4M      8M      16M      32M      64M
-      #for BLOCK_SIZE in 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864
-      for BLOCK_SIZE in 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576
-      do
-         # Calculate number of segments required to copy
-         COUNT=$(($TEST_FILE_SIZE / $BLOCK_SIZE))
-      
-         if [ $COUNT -le 0 ];
-         then
-            echo "Block size of $BLOCK_SIZE estimated to require $COUNT blocks, aborting further tests."
-            break
-         fi
-      
-         # Clear kernel cache to ensure more accurate test
-         [ $EUID -eq 0 ] && [ -e /proc/sys/vm/drop_caches ] && echo 3 > /proc/sys/vm/drop_caches >/dev/null
-
-      
-         # Create a test file with the specified block size
-         DD_RESULT=$(dd if=/dev/zero of=/mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE} bs=$BLOCK_SIZE count=$COUNT conv=fsync 2>&1 1>/dev/null)
-         #DD_RESULT=$(time sh -c "dd if=/dev/zero of=/mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE} bs=$BLOCK_SIZE count=$COUNT &&sync")
-   
-         # Flush the kernel filesystem buffers
-         sync
-         
-         # Extract the transfer rate from dd's STDERR output
-         #TRANSFER_RATE=$(echo $DD_RESULT | \grep --only-matching -E '[0-9.]+ ([MGk]?B|bytes)/s(ec)?')
-         TRANSFER_RATE=$(echo $DD_RESULT | \grep -o -E '[0-9.]+ ([MGk]?B|bytes)/s(ec)?')
-         #TRANSFER_RATE=$(echo $DD_RESULT | \grep -o -E '([1-9][0-9]{0,2})+ ([MGk]?B|bytes)/s(ec)?')
-   
-         # Delete the test file 
-         rm /mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE}; 
-         
-         # Output the result
-         printf "$PRINTF_FORMAT" "$BLOCK_SIZE" "$TRANSFER_RATE"
-
-         sleep ${SLEEP_INTERVAL}
-      done
-   done
-
-   # Delete the test file
-   rm -f /mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE}; 
-    
-   echo ""
-   echo "******************************************************************"
-   echo "***                                                            ***"
-   echo "*** Perform dd READ tests using a 8MB file                     ***"
-   echo "***                                                            ***"
-   echo "******************************************************************"
-   echo " "
-   echo "This test uses the buffer cache."
-   echo "The cache is filled and then the card is read."
-   echo "Because the test first fills the cache and then does the read,"
-   echo "This test best shows the MMC device's actual speed."
-   echo " "
-   echo "Before the read test for each block size a large file"
-   echo "approximately the size of the system RAM will be written to"
-   echo "the MMC device."
-   echo " "
-   echo "BE SURE THE MMC DEVICE PARTITION HAS AT LEAST 1GB OF FREE SPACE."
-   echo " "
-   echo "This large file is written because we need to flush the file cache."
-   echo "If we don’t do this the 8MB test file will be partially in RAM"
-   echo "and therefore the read test will not be completely read from disk."
-   echo " "
-   
-   TEST_FILE_SIZE=8388608
-   
-   # Write a 8MB file for the read tests (131072 block size * 64 blocks = 8388608 bytes = 8MB)
-   dd if=/dev/zero of=/mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE} bs=131072 count=64 > /dev/null 2>&1
-   sync
-   
-   printf "$PRINTF_FORMAT" 'block size' 'transfer rate'
-   
-   # Block sizes of  1K   2K   4K   8K   16K   32K   64K   128K   256K   512K   1M      2M      4M      8M
-   for BLOCK_SIZE in 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 
-   #for BLOCK_SIZE in 1024 2048 4096 8192 16384 32768 65536 131072
-   do
-      # Calculate number of segments required to copy
-      COUNT=$(($TEST_FILE_SIZE / $BLOCK_SIZE))
-   
-      if [ $COUNT -le 0 ];
-      then
-         echo "Block size of $BLOCK_SIZE estimated to require $COUNT blocks, aborting further tests."
-         break
-      fi
-   
-      # Clear kernel cache to ensure more accurate test
-      [ $EUID -eq 0 ] && [ -e /proc/sys/vm/drop_caches ] && echo 3 > /proc/sys/vm/drop_caches >/dev/null
-   
-      # Before we do the read test we need to flush the file cache by
-      # writing another file which is about the size of the RAM
-      # installed on the test system. If we don’t do this the 8MB test file
-      # we just created will be partially in RAM and therefore
-      # the read test will not be completely read from disk
-      # Write a ~2GB file to use for the read tests
-      dd if=/dev/zero of=/mnt/${MMC_DEVICE}${MMC_PART}/clearcache.tmp bs=131072 count=16372 > /dev/null 2>&1
-
-      #DD_RESULT=$(dd if=/mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE} of=/dev/null bs=$BLOCK_SIZE count=$COUNT iflag=direct 2>&1 1>/dev/null)
-      DD_RESULT=$(dd if=/mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE} of=/dev/null bs=$BLOCK_SIZE count=$COUNT 2>&1 1>/dev/null)
-      TRANSFER_RATE=$(echo $DD_RESULT | \grep -o -E '[0-9.]+ ([MGk]?B|bytes)/s(ec)?')
-
-      # Output the result
-      printf "$PRINTF_FORMAT" "$BLOCK_SIZE" "$TRANSFER_RATE"
-      
-      sleep ${SLEEP_INTERVAL}
-
-      # Delete the file we wrote to fill the RAM and force the test file read from the SD card
-      rm -f /mnt/${MMC_DEVICE}${MMC_PART}/clearcache.tmp 
-      
-   done
-    
-   # Delete the test file
-   rm -f /mnt/${MMC_DEVICE}${MMC_PART}/${TEST_FILE}; 
-}
-
-function hdparm_test() {
-   echo ""
-   echo "******************************************************************"
-   echo "***                                                            ***"
-   echo "*** Perform hdparm READ tests                                  ***"
-   echo "***                                                            ***"
-   echo "******************************************************************"
-   echo " "
-   echo "Use the 'hdparm' command to test the read times for the disk."
-   echo "Run this test a few times and calculate the average."
-   echo "hdparm -T -t /dev/${MMC_DEVICE}${MMC_PART}"
-    
-   hdparm -T -t /dev/${MMC_DEVICE}${MMC_PART}
-   sleep ${SLEEP_INTERVAL}
-   hdparm -T -t /dev/${MMC_DEVICE}${MMC_PART}
-   sleep ${SLEEP_INTERVAL}
-   hdparm -T -t /dev/${MMC_DEVICE}${MMC_PART}
-   echo " "
-}
-
-# START HERE: Non-boilerplate code above should be contained within 
-# functions so that at this point simple high level calls can be made to 
-# the bigger blocks above.
-# Check to see if the mass storage block device is enumerated.
-
-while getopts "d:p:t:h" opt; 
-do
-   case ${opt} in
-      h)
-         usage_error
-         ;;
-      d)
-         MMC_DEVICE="$OPTARG"
-         ;;
-      p)
-         MMC_PART="$OPTARG"
-         ;;
-      t)
-         TEST_TO_RUN="$OPTARG"
-         ;;
-      \?)
-         echo "Invalid option: -$OPTARG" >&2
-         usage_error
-         ;;
-    esac
-done
-
-if [ -b /dev/${MMC_DEVICE}${MMC_PART} ];
-then
-
-   script_intro
-
-   get_mmc_size
-    
-   read -p "Press enter to continue..."
-    
-   # Do some housekeeping
-   init
-   sleep ${SLEEP_INTERVAL}
-   #read -p "Pause here.  Press enter to continue."
-
-   if [ $EUID -ne 0 ]; 
-   then
-      echo "NOTE: Kernel cache will not be cleared between tests without sudo."
-      echo "This will likely cause inaccurate results." 1>&2
-   fi
-
-
-    # Run the dd tests
-    if [ $TEST_TO_RUN == "dd" ]
-    then
-        dd_test
-        sleep ${SLEEP_INTERVAL}
-    fi
-    
-    # Run the hdparm test
-    if [ $TEST_TO_RUN == "hdparm" ]
-    then
-        hdparm_test
-        sleep ${SLEEP_INTERVAL}
-    fi
-    
-    # Clean up before exiting
-    # Cleanup the shrapnel the tests leave behind
-    cleanup
-    
-else
-    echo "******************************************************************"
-    echo " "
-    echo "   No Mass Storage Block Device Enumerated!"
-    echo "   Make sure the SD card or eMMC is connected to the board!"
-    echo " "
-    echo "******************************************************************"
-    usage_error
-fi
-
diff --git a/recipes-apps/performance-tests/performance-tests.bb b/recipes-apps/performance-tests/performance-tests.bb
deleted file mode 100644
index 8b7cf5ed0ad820e3026b417898400e3c7ca3c16c..0000000000000000000000000000000000000000
--- a/recipes-apps/performance-tests/performance-tests.bb
+++ /dev/null
@@ -1,27 +0,0 @@
-#
-# This file is the performance-tests recipe.
-#
-
-SUMMARY = "Simple performance-tests application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-SRC_URI = "file://drive-test.sh \
-      file://network-test.sh \
-      file://sd-test.sh \
-        "
-
-S = "${WORKDIR}"
-
-do_install() {
-        install -d ${D}/home/root
-        install -m 0755 ${S}/drive-test.sh ${D}/home/root
-        install -m 0755 ${S}/network-test.sh ${D}/home/root
-        install -m 0755 ${S}/sd-test.sh ${D}/home/root
-}
-
-FILES_${PN} += "/home/root/drive-test.sh \
-           /home/root/network-test.sh \
-           /home/root/sd-test.sh \
-               "
diff --git a/recipes-apps/python-webserver-init/.gdbinit b/recipes-apps/python-webserver-init/.gdbinit
deleted file mode 100644
index d59fb8d90efb393c83d35becbecddcfa493a5e67..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver-init/.gdbinit
+++ /dev/null
@@ -1,2 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
diff --git a/recipes-apps/python-webserver-init/README b/recipes-apps/python-webserver-init/README
deleted file mode 100644
index 5cd160c32359b23e8ae2248f15e48a39904fd6c4..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver-init/README
+++ /dev/null
@@ -1,47 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-If you are developing your application from scratch, simply start editing the
-file python-webserver-init.c.
-
-You can easily import any existing application code by copying it into this 
-directory, and editing the automatically generated Makefile.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To build your application, simply run "petalinux-build -c python-webserver-init".
-This command will build your application and will install your application
-into the target file system host copy.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
-To add extra source code files (for example, to split a large application into 
-multiple source files), add the relevant .o files to the list in the local 
-Makefile where indicated.  
-
-To have other files (for example application configuration files or scripts) 
-copied into the root file system, add addition lines under the "install:"
-target in the Makefile.  For example:
-
-    $(TARGETINST) myfile.conf /etc
-
-Copy the file myfile.conf from this directory into the /etc directory
-on the Embedded Linux filesystem).
-
-Another example:
-    (TARGETINST) -a "some text here" /etc/system.conf
-
-Add the line "some text here" to the /etc/system.conf file.
-
-See ${PETALINUX}/components/rootfs/targetroot-inst.sh for details and more options.
diff --git a/recipes-apps/python-webserver-init/files/python-webserver-init b/recipes-apps/python-webserver-init/files/python-webserver-init
deleted file mode 100644
index d691ca23a989011ae449d480385ea11f556f577c..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver-init/files/python-webserver-init
+++ /dev/null
@@ -1,88 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Jan 02, 2018
-#  Design Name:         Python webserver Application Daemon Launcher
-#  Module Name:         python-webserver-init(.sh)
-#  Project Name:        Python-webserver" Application
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         Script to launch "python-webserver" App as a daemon
-# 
-#  Dependencies:        
-#
-#  Revision:            Jan 02, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-DAEMON=/home/root/webserver/launch_server.sh
-KDAEMON=/home/root/webserver/stop_server.sh
-#This script launches the Python webserver application
-
-start ()
-{
-echo " Starting Python webserver"
-    start-stop-daemon -S -o -x $DAEMON
-}
-
-stop ()
-{
-    echo " Stopping Python webserver"
-    start-stop-daemon -K -x $KDAEMON
-}
-
-restart()
-{
-    stop
-    start
-}
-
-[ -e $DAEMON ] || exit 1
-    case "$1" in
-        start)
-            start; ;;
-        stop)
-            stop; ;;
-        restart)
-            restart; ;;
-        *)
-            echo "Usage: $0 {start|stop|restart}"
-            exit 1
-
-esac
-exit $?
diff --git a/recipes-apps/python-webserver-init/python-webserver-init.bb b/recipes-apps/python-webserver-init/python-webserver-init.bb
deleted file mode 100644
index 119f8bbb533cbe31ae174c083c523e5e14a79b89..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver-init/python-webserver-init.bb
+++ /dev/null
@@ -1,29 +0,0 @@
-#
-# This file is the python-webserver-init recipe.
-#
-
-SUMMARY = "Simple python-webserver-init application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-SRC_URI = "file://python-webserver-init \
-		  "
-
-S = "${WORKDIR}"
-
-FILESEXTRAPATHS_prepend := "${THISDIR}/files:"
-
-inherit update-rc.d
-
-INITSCRIPT_NAME = "python-webserver-init"
-INITSCRIPT_PARAMS = "start 99 S ."
-
-
-do_install() {
-    install -d ${D}${sysconfdir}/init.d
-    install -m 0755 ${S}/python-webserver-init ${D}${sysconfdir}/init.d/python-webserver-init
-}
-
-FILES_${PN} += "${sysconfdir}/*"
-
diff --git a/recipes-apps/python-webserver/files/cgi.py b/recipes-apps/python-webserver/files/cgi.py
deleted file mode 100644
index ad7e9d94c0632c921a11640e9a35b01af0a5c680..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/cgi.py
+++ /dev/null
@@ -1,1077 +0,0 @@
-#! /usr/bin/python3
-
-# NOTE: the above "/usr/local/bin/python" is NOT a mistake.  It is
-# intentionally NOT "/usr/bin/env python".  On many systems
-# (e.g. Solaris), /usr/local/bin is not in $PATH as passed to CGI
-# scripts, and /usr/local/bin is the default directory where Python is
-# installed, so /usr/bin/env would be unable to find python.  Granted,
-# binary installations by Linux vendors often install Python in
-# /usr/bin.  So let those vendors patch cgi.py to match their choice
-# of installation.
-
-"""Support module for CGI (Common Gateway Interface) scripts.
-
-This module defines a number of utilities for use by CGI scripts
-written in Python.
-"""
-
-# History
-# -------
-#
-# Michael McLay started this module.  Steve Majewski changed the
-# interface to SvFormContentDict and FormContentDict.  The multipart
-# parsing was inspired by code submitted by Andreas Paepcke.  Guido van
-# Rossum rewrote, reformatted and documented the module and is currently
-# responsible for its maintenance.
-#
-
-__version__ = "2.6"
-
-
-# Imports
-# =======
-
-from io import StringIO, BytesIO, TextIOWrapper
-from collections import Mapping
-import sys
-import os
-import urllib.parse
-from email.parser import FeedParser
-from email.message import Message
-from warnings import warn
-import html
-import locale
-import tempfile
-
-__all__ = ["MiniFieldStorage", "FieldStorage",
-           "parse", "parse_qs", "parse_qsl", "parse_multipart",
-           "parse_header", "print_exception", "print_environ",
-           "print_form", "print_directory", "print_arguments",
-           "print_environ_usage", "escape"]
-
-# Logging support
-# ===============
-
-logfile = ""            # Filename to log to, if not empty
-logfp = None            # File object to log to, if not None
-
-def initlog(*allargs):
-    """Write a log message, if there is a log file.
-
-    Even though this function is called initlog(), you should always
-    use log(); log is a variable that is set either to initlog
-    (initially), to dolog (once the log file has been opened), or to
-    nolog (when logging is disabled).
-
-    The first argument is a format string; the remaining arguments (if
-    any) are arguments to the % operator, so e.g.
-        log("%s: %s", "a", "b")
-    will write "a: b" to the log file, followed by a newline.
-
-    If the global logfp is not None, it should be a file object to
-    which log data is written.
-
-    If the global logfp is None, the global logfile may be a string
-    giving a filename to open, in append mode.  This file should be
-    world writable!!!  If the file can't be opened, logging is
-    silently disabled (since there is no safe place where we could
-    send an error message).
-
-    """
-    global log, logfile, logfp
-    if logfile and not logfp:
-        try:
-            logfp = open(logfile, "a")
-        except OSError:
-            pass
-    if not logfp:
-        log = nolog
-    else:
-        log = dolog
-    log(*allargs)
-
-def dolog(fmt, *args):
-    """Write a log message to the log file.  See initlog() for docs."""
-    logfp.write(fmt%args + "\n")
-
-def nolog(*allargs):
-    """Dummy function, assigned to log when logging is disabled."""
-    pass
-
-def closelog():
-    """Close the log file."""
-    global log, logfile, logfp
-    logfile = ''
-    if logfp:
-        logfp.close()
-        logfp = None
-    log = initlog
-
-log = initlog           # The current logging function
-
-
-# Parsing functions
-# =================
-
-# Maximum input we will accept when REQUEST_METHOD is POST
-# 0 ==> unlimited input
-maxlen = 0
-
-def parse(fp=None, environ=os.environ, keep_blank_values=0, strict_parsing=0):
-    """Parse a query in the environment or from a file (default stdin)
-
-        Arguments, all optional:
-
-        fp              : file pointer; default: sys.stdin.buffer
-
-        environ         : environment dictionary; default: os.environ
-
-        keep_blank_values: flag indicating whether blank values in
-            percent-encoded forms should be treated as blank strings.
-            A true value indicates that blanks should be retained as
-            blank strings.  The default false value indicates that
-            blank values are to be ignored and treated as if they were
-            not included.
-
-        strict_parsing: flag indicating what to do with parsing errors.
-            If false (the default), errors are silently ignored.
-            If true, errors raise a ValueError exception.
-    """
-    if fp is None:
-        fp = sys.stdin
-
-    # field keys and values (except for files) are returned as strings
-    # an encoding is required to decode the bytes read from self.fp
-    if hasattr(fp,'encoding'):
-        encoding = fp.encoding
-    else:
-        encoding = 'latin-1'
-
-    # fp.read() must return bytes
-    if isinstance(fp, TextIOWrapper):
-        fp = fp.buffer
-
-    if not 'REQUEST_METHOD' in environ:
-        environ['REQUEST_METHOD'] = 'GET'       # For testing stand-alone
-    if environ['REQUEST_METHOD'] == 'POST':
-        ctype, pdict = parse_header(environ['CONTENT_TYPE'])
-        if ctype == 'multipart/form-data':
-            return parse_multipart(fp, pdict)
-        elif ctype == 'application/x-www-form-urlencoded':
-            clength = int(environ['CONTENT_LENGTH'])
-            if maxlen and clength > maxlen:
-                raise ValueError('Maximum content length exceeded')
-            qs = fp.read(clength).decode(encoding)
-        else:
-            qs = ''                     # Unknown content-type
-        if 'QUERY_STRING' in environ:
-            if qs: qs = qs + '&'
-            qs = qs + environ['QUERY_STRING']
-        elif sys.argv[1:]:
-            if qs: qs = qs + '&'
-            qs = qs + sys.argv[1]
-        environ['QUERY_STRING'] = qs    # XXX Shouldn't, really
-    elif 'QUERY_STRING' in environ:
-        qs = environ['QUERY_STRING']
-    else:
-        if sys.argv[1:]:
-            qs = sys.argv[1]
-        else:
-            qs = ""
-        environ['QUERY_STRING'] = qs    # XXX Shouldn't, really
-    return urllib.parse.parse_qs(qs, keep_blank_values, strict_parsing,
-                                 encoding=encoding)
-
-
-# parse query string function called from urlparse,
-# this is done in order to maintain backward compatibility.
-
-def parse_qs(qs, keep_blank_values=0, strict_parsing=0):
-    """Parse a query given as a string argument."""
-    warn("cgi.parse_qs is deprecated, use urllib.parse.parse_qs instead",
-         DeprecationWarning, 2)
-    return urllib.parse.parse_qs(qs, keep_blank_values, strict_parsing)
-
-def parse_qsl(qs, keep_blank_values=0, strict_parsing=0):
-    """Parse a query given as a string argument."""
-    warn("cgi.parse_qsl is deprecated, use urllib.parse.parse_qsl instead",
-         DeprecationWarning, 2)
-    return urllib.parse.parse_qsl(qs, keep_blank_values, strict_parsing)
-
-def parse_multipart(fp, pdict):
-    """Parse multipart input.
-
-    Arguments:
-    fp   : input file
-    pdict: dictionary containing other parameters of content-type header
-
-    Returns a dictionary just like parse_qs(): keys are the field names, each
-    value is a list of values for that field.  This is easy to use but not
-    much good if you are expecting megabytes to be uploaded -- in that case,
-    use the FieldStorage class instead which is much more flexible.  Note
-    that content-type is the raw, unparsed contents of the content-type
-    header.
-
-    XXX This does not parse nested multipart parts -- use FieldStorage for
-    that.
-
-    XXX This should really be subsumed by FieldStorage altogether -- no
-    point in having two implementations of the same parsing algorithm.
-    Also, FieldStorage protects itself better against certain DoS attacks
-    by limiting the size of the data read in one chunk.  The API here
-    does not support that kind of protection.  This also affects parse()
-    since it can call parse_multipart().
-
-    """
-    import http.client
-
-    boundary = b""
-    if 'boundary' in pdict:
-        boundary = pdict['boundary']
-    if not valid_boundary(boundary):
-        raise ValueError('Invalid boundary in multipart form: %r'
-                            % (boundary,))
-
-    nextpart = b"--" + boundary
-    lastpart = b"--" + boundary + b"--"
-    partdict = {}
-    terminator = b""
-
-    while terminator != lastpart:
-        bytes = -1
-        data = None
-        if terminator:
-            # At start of next part.  Read headers first.
-            headers = http.client.parse_headers(fp)
-            clength = headers.get('content-length')
-            if clength:
-                try:
-                    bytes = int(clength)
-                except ValueError:
-                    pass
-            if bytes > 0:
-                if maxlen and bytes > maxlen:
-                    raise ValueError('Maximum content length exceeded')
-                data = fp.read(bytes)
-            else:
-                data = b""
-        # Read lines until end of part.
-        lines = []
-        while 1:
-            line = fp.readline()
-            if not line:
-                terminator = lastpart # End outer loop
-                break
-            if line.startswith(b"--"):
-                terminator = line.rstrip()
-                if terminator in (nextpart, lastpart):
-                    break
-            lines.append(line)
-        # Done with part.
-        if data is None:
-            continue
-        if bytes < 0:
-            if lines:
-                # Strip final line terminator
-                line = lines[-1]
-                if line[-2:] == b"\r\n":
-                    line = line[:-2]
-                elif line[-1:] == b"\n":
-                    line = line[:-1]
-                lines[-1] = line
-                data = b"".join(lines)
-        line = headers['content-disposition']
-        if not line:
-            continue
-        key, params = parse_header(line)
-        if key != 'form-data':
-            continue
-        if 'name' in params:
-            name = params['name']
-        else:
-            continue
-        if name in partdict:
-            partdict[name].append(data)
-        else:
-            partdict[name] = [data]
-
-    return partdict
-
-
-def _parseparam(s):
-    while s[:1] == ';':
-        s = s[1:]
-        end = s.find(';')
-        while end > 0 and (s.count('"', 0, end) - s.count('\\"', 0, end)) % 2:
-            end = s.find(';', end + 1)
-        if end < 0:
-            end = len(s)
-        f = s[:end]
-        yield f.strip()
-        s = s[end:]
-
-def parse_header(line):
-    """Parse a Content-type like header.
-
-    Return the main content-type and a dictionary of options.
-
-    """
-    parts = _parseparam(';' + line)
-    key = parts.__next__()
-    pdict = {}
-    for p in parts:
-        i = p.find('=')
-        if i >= 0:
-            name = p[:i].strip().lower()
-            value = p[i+1:].strip()
-            if len(value) >= 2 and value[0] == value[-1] == '"':
-                value = value[1:-1]
-                value = value.replace('\\\\', '\\').replace('\\"', '"')
-            pdict[name] = value
-    return key, pdict
-
-
-# Classes for field storage
-# =========================
-
-class MiniFieldStorage:
-
-    """Like FieldStorage, for use when no file uploads are possible."""
-
-    # Dummy attributes
-    filename = None
-    list = None
-    type = None
-    file = None
-    type_options = {}
-    disposition = None
-    disposition_options = {}
-    headers = {}
-
-    def __init__(self, name, value):
-        """Constructor from field name and value."""
-        self.name = name
-        self.value = value
-        # self.file = StringIO(value)
-
-    def __repr__(self):
-        """Return printable representation."""
-        return "MiniFieldStorage(%r, %r)" % (self.name, self.value)
-
-
-class FieldStorage:
-
-    """Store a sequence of fields, reading multipart/form-data.
-
-    This class provides naming, typing, files stored on disk, and
-    more.  At the top level, it is accessible like a dictionary, whose
-    keys are the field names.  (Note: None can occur as a field name.)
-    The items are either a Python list (if there's multiple values) or
-    another FieldStorage or MiniFieldStorage object.  If it's a single
-    object, it has the following attributes:
-
-    name: the field name, if specified; otherwise None
-
-    filename: the filename, if specified; otherwise None; this is the
-        client side filename, *not* the file name on which it is
-        stored (that's a temporary file you don't deal with)
-
-    value: the value as a *string*; for file uploads, this
-        transparently reads the file every time you request the value
-        and returns *bytes*
-
-    file: the file(-like) object from which you can read the data *as
-        bytes* ; None if the data is stored a simple string
-
-    type: the content-type, or None if not specified
-
-    type_options: dictionary of options specified on the content-type
-        line
-
-    disposition: content-disposition, or None if not specified
-
-    disposition_options: dictionary of corresponding options
-
-    headers: a dictionary(-like) object (sometimes email.message.Message or a
-        subclass thereof) containing *all* headers
-
-    The class is subclassable, mostly for the purpose of overriding
-    the make_file() method, which is called internally to come up with
-    a file open for reading and writing.  This makes it possible to
-    override the default choice of storing all files in a temporary
-    directory and unlinking them as soon as they have been opened.
-
-    """
-    def __init__(self, fp=None, headers=None, outerboundary=b'',
-                 environ=os.environ, keep_blank_values=0, strict_parsing=0,
-                 limit=None, encoding='utf-8', errors='replace'):
-        """Constructor.  Read multipart/* until last part.
-
-        Arguments, all optional:
-
-        fp              : file pointer; default: sys.stdin.buffer
-            (not used when the request method is GET)
-            Can be :
-            1. a TextIOWrapper object
-            2. an object whose read() and readline() methods return bytes
-
-        headers         : header dictionary-like object; default:
-            taken from environ as per CGI spec
-
-        outerboundary   : terminating multipart boundary
-            (for internal use only)
-
-        environ         : environment dictionary; default: os.environ
-
-        keep_blank_values: flag indicating whether blank values in
-            percent-encoded forms should be treated as blank strings.
-            A true value indicates that blanks should be retained as
-            blank strings.  The default false value indicates that
-            blank values are to be ignored and treated as if they were
-            not included.
-
-        strict_parsing: flag indicating what to do with parsing errors.
-            If false (the default), errors are silently ignored.
-            If true, errors raise a ValueError exception.
-
-        limit : used internally to read parts of multipart/form-data forms,
-            to exit from the reading loop when reached. It is the difference
-            between the form content-length and the number of bytes already
-            read
-
-        encoding, errors : the encoding and error handler used to decode the
-            binary stream to strings. Must be the same as the charset defined
-            for the page sending the form (content-type : meta http-equiv or
-            header)
-
-        """
-        method = 'GET'
-        self.keep_blank_values = keep_blank_values
-        self.strict_parsing = strict_parsing
-        if 'REQUEST_METHOD' in environ:
-            method = environ['REQUEST_METHOD'].upper()
-        self.qs_on_post = None
-        if method == 'GET' or method == 'HEAD':
-            if 'QUERY_STRING' in environ:
-                qs = environ['QUERY_STRING']
-            elif sys.argv[1:]:
-                qs = sys.argv[1]
-            else:
-                qs = ""
-            qs = qs.encode(locale.getpreferredencoding(), 'surrogateescape')
-            fp = BytesIO(qs)
-            if headers is None:
-                headers = {'content-type':
-                           "application/x-www-form-urlencoded"}
-        if headers is None:
-            headers = {}
-            if method == 'POST':
-                # Set default content-type for POST to what's traditional
-                headers['content-type'] = "application/x-www-form-urlencoded"
-            if 'CONTENT_TYPE' in environ:
-                headers['content-type'] = environ['CONTENT_TYPE']
-            if 'QUERY_STRING' in environ:
-                self.qs_on_post = environ['QUERY_STRING']
-            if 'CONTENT_LENGTH' in environ:
-                headers['content-length'] = environ['CONTENT_LENGTH']
-        else:
-            if not (isinstance(headers, (Mapping, Message))):
-                raise TypeError("headers must be mapping or an instance of "
-                                "email.message.Message")
-        self.headers = headers
-        if fp is None:
-            self.fp = sys.stdin.buffer
-        # self.fp.read() must return bytes
-        elif isinstance(fp, TextIOWrapper):
-            self.fp = fp.buffer
-        else:
-            if not (hasattr(fp, 'read') and hasattr(fp, 'readline')):
-                raise TypeError("fp must be file pointer")
-            self.fp = fp
-
-        self.encoding = encoding
-        self.errors = errors
-
-        if not isinstance(outerboundary, bytes):
-            raise TypeError('outerboundary must be bytes, not %s'
-                            % type(outerboundary).__name__)
-        self.outerboundary = outerboundary
-
-        self.bytes_read = 0
-        self.limit = limit
-
-        # Process content-disposition header
-        cdisp, pdict = "", {}
-        if 'content-disposition' in self.headers:
-            cdisp, pdict = parse_header(self.headers['content-disposition'])
-        self.disposition = cdisp
-        self.disposition_options = pdict
-        self.name = None
-        if 'name' in pdict:
-            self.name = pdict['name']
-        self.filename = None
-        if 'filename' in pdict:
-            self.filename = pdict['filename']
-        self._binary_file = self.filename is not None
-
-        # Process content-type header
-        #
-        # Honor any existing content-type header.  But if there is no
-        # content-type header, use some sensible defaults.  Assume
-        # outerboundary is "" at the outer level, but something non-false
-        # inside a multi-part.  The default for an inner part is text/plain,
-        # but for an outer part it should be urlencoded.  This should catch
-        # bogus clients which erroneously forget to include a content-type
-        # header.
-        #
-        # See below for what we do if there does exist a content-type header,
-        # but it happens to be something we don't understand.
-        if 'content-type' in self.headers:
-            ctype, pdict = parse_header(self.headers['content-type'])
-        elif self.outerboundary or method != 'POST':
-            ctype, pdict = "text/plain", {}
-        else:
-            ctype, pdict = 'application/x-www-form-urlencoded', {}
-        self.type = ctype
-        self.type_options = pdict
-        if 'boundary' in pdict:
-            self.innerboundary = pdict['boundary'].encode(self.encoding)
-        else:
-            self.innerboundary = b""
-
-        clen = -1
-        if 'content-length' in self.headers:
-            try:
-                clen = int(self.headers['content-length'])
-            except ValueError:
-                pass
-            if maxlen and clen > maxlen:
-                raise ValueError('Maximum content length exceeded')
-        self.length = clen
-        if self.limit is None and clen:
-            self.limit = clen
-
-        self.list = self.file = None
-        self.done = 0
-        if ctype == 'application/x-www-form-urlencoded':
-            self.read_urlencoded()
-        elif ctype[:10] == 'multipart/':
-            self.read_multi(environ, keep_blank_values, strict_parsing)
-        else:
-            self.read_single()
-
-    def __del__(self):
-        try:
-            self.file.close()
-        except AttributeError:
-            pass
-
-    def __enter__(self):
-        return self
-
-    def __exit__(self, *args):
-        self.file.close()
-
-    def __repr__(self):
-        """Return a printable representation."""
-        return "FieldStorage(%r, %r, %r)" % (
-                self.name, self.filename, self.value)
-
-    def __iter__(self):
-        return iter(self.keys())
-
-    def __getattr__(self, name):
-        if name != 'value':
-            raise AttributeError(name)
-        if self.file:
-            self.file.seek(0)
-            value = self.file.read()
-            self.file.seek(0)
-        elif self.list is not None:
-            value = self.list
-        else:
-            value = None
-        return value
-
-    def __getitem__(self, key):
-        """Dictionary style indexing."""
-        if self.list is None:
-            raise TypeError("not indexable")
-        found = []
-        for item in self.list:
-            if item.name == key: found.append(item)
-        if not found:
-            raise KeyError(key)
-        if len(found) == 1:
-            return found[0]
-        else:
-            return found
-
-    def getvalue(self, key, default=None):
-        """Dictionary style get() method, including 'value' lookup."""
-        if key in self:
-            value = self[key]
-            if isinstance(value, list):
-                return [x.value for x in value]
-            else:
-                return value.value
-        else:
-            return default
-
-    def getfirst(self, key, default=None):
-        """ Return the first value received."""
-        if key in self:
-            value = self[key]
-            if isinstance(value, list):
-                return value[0].value
-            else:
-                return value.value
-        else:
-            return default
-
-    def getlist(self, key):
-        """ Return list of received values."""
-        if key in self:
-            value = self[key]
-            if isinstance(value, list):
-                return [x.value for x in value]
-            else:
-                return [value.value]
-        else:
-            return []
-
-    def keys(self):
-        """Dictionary style keys() method."""
-        if self.list is None:
-            raise TypeError("not indexable")
-        return list(set(item.name for item in self.list))
-
-    def __contains__(self, key):
-        """Dictionary style __contains__ method."""
-        if self.list is None:
-            raise TypeError("not indexable")
-        return any(item.name == key for item in self.list)
-
-    def __len__(self):
-        """Dictionary style len(x) support."""
-        return len(self.keys())
-
-    def __bool__(self):
-        if self.list is None:
-            raise TypeError("Cannot be converted to bool.")
-        return bool(self.list)
-
-    def read_urlencoded(self):
-        """Internal: read data in query string format."""
-        qs = self.fp.read(self.length)
-        if not isinstance(qs, bytes):
-            raise ValueError("%s should return bytes, got %s" \
-                             % (self.fp, type(qs).__name__))
-        qs = qs.decode(self.encoding, self.errors)
-        if self.qs_on_post:
-            qs += '&' + self.qs_on_post
-        self.list = []
-        query = urllib.parse.parse_qsl(
-            qs, self.keep_blank_values, self.strict_parsing,
-            encoding=self.encoding, errors=self.errors)
-        for key, value in query:
-            self.list.append(MiniFieldStorage(key, value))
-        self.skip_lines()
-
-    FieldStorageClass = None
-
-    def read_multi(self, environ, keep_blank_values, strict_parsing):
-        """Internal: read a part that is itself multipart."""
-        ib = self.innerboundary
-        if not valid_boundary(ib):
-            raise ValueError('Invalid boundary in multipart form: %r' % (ib,))
-        self.list = []
-        if self.qs_on_post:
-            query = urllib.parse.parse_qsl(
-                self.qs_on_post, self.keep_blank_values, self.strict_parsing,
-                encoding=self.encoding, errors=self.errors)
-            for key, value in query:
-                self.list.append(MiniFieldStorage(key, value))
-
-        klass = self.FieldStorageClass or self.__class__
-        first_line = self.fp.readline() # bytes
-        if not isinstance(first_line, bytes):
-            raise ValueError("%s should return bytes, got %s" \
-                             % (self.fp, type(first_line).__name__))
-        self.bytes_read += len(first_line)
-
-        # Ensure that we consume the file until we've hit our inner boundary
-        while (first_line.strip() != (b"--" + self.innerboundary) and
-                first_line):
-            first_line = self.fp.readline()
-            self.bytes_read += len(first_line)
-
-        while True:
-            parser = FeedParser()
-            hdr_text = b""
-            while True:
-                data = self.fp.readline()
-                hdr_text += data
-                if not data.strip():
-                    break
-            if not hdr_text:
-                break
-            # parser takes strings, not bytes
-            self.bytes_read += len(hdr_text)
-            parser.feed(hdr_text.decode(self.encoding, self.errors))
-            headers = parser.close()
-
-            # Some clients add Content-Length for part headers, ignore them
-            if 'content-length' in headers:
-                del headers['content-length']
-
-            part = klass(self.fp, headers, ib, environ, keep_blank_values,
-                         strict_parsing,self.limit-self.bytes_read,
-                         self.encoding, self.errors)
-            self.bytes_read += part.bytes_read
-            self.list.append(part)
-            if part.done or self.bytes_read >= self.length > 0:
-                break
-        self.skip_lines()
-
-    def read_single(self):
-        """Internal: read an atomic part."""
-        if self.length >= 0:
-            self.read_binary()
-            self.skip_lines()
-        else:
-            self.read_lines()
-        self.file.seek(0)
-
-    bufsize = 8*1024            # I/O buffering size for copy to file
-
-    def read_binary(self):
-        """Internal: read binary data."""
-        self.file = self.make_file()
-        todo = self.length
-        if todo >= 0:
-            while todo > 0:
-                data = self.fp.read(min(todo, self.bufsize)) # bytes
-                if not isinstance(data, bytes):
-                    raise ValueError("%s should return bytes, got %s"
-                                     % (self.fp, type(data).__name__))
-                self.bytes_read += len(data)
-                if not data:
-                    self.done = -1
-                    break
-                self.file.write(data)
-                todo = todo - len(data)
-
-    def read_lines(self):
-        """Internal: read lines until EOF or outerboundary."""
-        if self._binary_file:
-            self.file = self.__file = BytesIO() # store data as bytes for files
-        else:
-            self.file = self.__file = StringIO() # as strings for other fields
-        if self.outerboundary:
-            self.read_lines_to_outerboundary()
-        else:
-            self.read_lines_to_eof()
-
-    def __write(self, line):
-        """line is always bytes, not string"""
-        if self.__file is not None:
-            if self.__file.tell() + len(line) > 1000:
-                self.file = self.make_file()
-                data = self.__file.getvalue()
-                self.file.write(data)
-                self.__file = None
-        if self._binary_file:
-            # keep bytes
-            self.file.write(line)
-        else:
-            # decode to string
-            self.file.write(line.decode(self.encoding, self.errors))
-
-    def read_lines_to_eof(self):
-        """Internal: read lines until EOF."""
-        while 1:
-            line = self.fp.readline(1<<16) # bytes
-            self.bytes_read += len(line)
-            if not line:
-                self.done = -1
-                break
-            self.__write(line)
-
-    def read_lines_to_outerboundary(self):
-        """Internal: read lines until outerboundary.
-        Data is read as bytes: boundaries and line ends must be converted
-        to bytes for comparisons.
-        """
-        next_boundary = b"--" + self.outerboundary
-        last_boundary = next_boundary + b"--"
-        delim = b""
-        last_line_lfend = True
-        _read = 0
-        while 1:
-            if _read >= self.limit:
-                break
-            line = self.fp.readline(1<<16) # bytes
-            self.bytes_read += len(line)
-            _read += len(line)
-            if not line:
-                self.done = -1
-                break
-            if delim == b"\r":
-                line = delim + line
-                delim = b""
-            if line.startswith(b"--") and last_line_lfend:
-                strippedline = line.rstrip()
-                if strippedline == next_boundary:
-                    break
-                if strippedline == last_boundary:
-                    self.done = 1
-                    break
-            odelim = delim
-            if line.endswith(b"\r\n"):
-                delim = b"\r\n"
-                line = line[:-2]
-                last_line_lfend = True
-            elif line.endswith(b"\n"):
-                delim = b"\n"
-                line = line[:-1]
-                last_line_lfend = True
-            elif line.endswith(b"\r"):
-                # We may interrupt \r\n sequences if they span the 2**16
-                # byte boundary
-                delim = b"\r"
-                line = line[:-1]
-                last_line_lfend = False
-            else:
-                delim = b""
-                last_line_lfend = False
-            self.__write(odelim + line)
-
-    def skip_lines(self):
-        """Internal: skip lines until outer boundary if defined."""
-        if not self.outerboundary or self.done:
-            return
-        next_boundary = b"--" + self.outerboundary
-        last_boundary = next_boundary + b"--"
-        last_line_lfend = True
-        while True:
-            line = self.fp.readline(1<<16)
-            self.bytes_read += len(line)
-            if not line:
-                self.done = -1
-                break
-            if line.endswith(b"--") and last_line_lfend:
-                strippedline = line.strip()
-                if strippedline == next_boundary:
-                    break
-                if strippedline == last_boundary:
-                    self.done = 1
-                    break
-            last_line_lfend = line.endswith(b'\n')
-
-    def make_file(self):
-        """Overridable: return a readable & writable file.
-
-        The file will be used as follows:
-        - data is written to it
-        - seek(0)
-        - data is read from it
-
-        The file is opened in binary mode for files, in text mode
-        for other fields
-
-        This version opens a temporary file for reading and writing,
-        and immediately deletes (unlinks) it.  The trick (on Unix!) is
-        that the file can still be used, but it can't be opened by
-        another process, and it will automatically be deleted when it
-        is closed or when the current process terminates.
-
-        If you want a more permanent file, you derive a class which
-        overrides this method.  If you want a visible temporary file
-        that is nevertheless automatically deleted when the script
-        terminates, try defining a __del__ method in a derived class
-        which unlinks the temporary files you have created.
-
-        """
-        if self._binary_file:
-            return tempfile.TemporaryFile("wb+")
-        else:
-            return tempfile.TemporaryFile("w+",
-                encoding=self.encoding, newline = '\n')
-
-
-# Test/debug code
-# ===============
-
-def test(environ=os.environ):
-    """Robust test CGI script, usable as main program.
-
-    Write minimal HTTP headers and dump all information provided to
-    the script in HTML form.
-
-    """
-    print("Content-type: text/html")
-    print()
-    sys.stderr = sys.stdout
-    try:
-        form = FieldStorage()   # Replace with other classes to test those
-        print_directory()
-        print_arguments()
-        print_form(form)
-        print_environ(environ)
-        print_environ_usage()
-        def f():
-            exec("testing print_exception() -- <I>italics?</I>")
-        def g(f=f):
-            f()
-        print("<H3>What follows is a test, not an actual exception:</H3>")
-        g()
-    except:
-        print_exception()
-
-    print("<H1>Second try with a small maxlen...</H1>")
-
-    global maxlen
-    maxlen = 50
-    try:
-        form = FieldStorage()   # Replace with other classes to test those
-        print_directory()
-        print_arguments()
-        print_form(form)
-        print_environ(environ)
-    except:
-        print_exception()
-
-def print_exception(type=None, value=None, tb=None, limit=None):
-    if type is None:
-        type, value, tb = sys.exc_info()
-    import traceback
-    print()
-    print("<H3>Traceback (most recent call last):</H3>")
-    list = traceback.format_tb(tb, limit) + \
-           traceback.format_exception_only(type, value)
-    print("<PRE>%s<B>%s</B></PRE>" % (
-        html.escape("".join(list[:-1])),
-        html.escape(list[-1]),
-        ))
-    del tb
-
-def print_environ(environ=os.environ):
-    """Dump the shell environment as HTML."""
-    keys = sorted(environ.keys())
-    print()
-    print("<H3>Shell Environment:</H3>")
-    print("<DL>")
-    for key in keys:
-        print("<DT>", html.escape(key), "<DD>", html.escape(environ[key]))
-    print("</DL>")
-    print()
-
-def print_form(form):
-    """Dump the contents of a form as HTML."""
-    keys = sorted(form.keys())
-    print()
-    print("<H3>Form Contents:</H3>")
-    if not keys:
-        print("<P>No form fields.")
-    print("<DL>")
-    for key in keys:
-        print("<DT>" + html.escape(key) + ":", end=' ')
-        value = form[key]
-        print("<i>" + html.escape(repr(type(value))) + "</i>")
-        print("<DD>" + html.escape(repr(value)))
-    print("</DL>")
-    print()
-
-def print_directory():
-    """Dump the current directory as HTML."""
-    print()
-    print("<H3>Current Working Directory:</H3>")
-    try:
-        pwd = os.getcwd()
-    except OSError as msg:
-        print("OSError:", html.escape(str(msg)))
-    else:
-        print(html.escape(pwd))
-    print()
-
-def print_arguments():
-    print()
-    print("<H3>Command Line Arguments:</H3>")
-    print()
-    print(sys.argv)
-    print()
-
-def print_environ_usage():
-    """Dump a list of environment variables used by CGI as HTML."""
-    print("""
-<H3>These environment variables could have been set:</H3>
-<UL>
-<LI>AUTH_TYPE
-<LI>CONTENT_LENGTH
-<LI>CONTENT_TYPE
-<LI>DATE_GMT
-<LI>DATE_LOCAL
-<LI>DOCUMENT_NAME
-<LI>DOCUMENT_ROOT
-<LI>DOCUMENT_URI
-<LI>GATEWAY_INTERFACE
-<LI>LAST_MODIFIED
-<LI>PATH
-<LI>PATH_INFO
-<LI>PATH_TRANSLATED
-<LI>QUERY_STRING
-<LI>REMOTE_ADDR
-<LI>REMOTE_HOST
-<LI>REMOTE_IDENT
-<LI>REMOTE_USER
-<LI>REQUEST_METHOD
-<LI>SCRIPT_NAME
-<LI>SERVER_NAME
-<LI>SERVER_PORT
-<LI>SERVER_PROTOCOL
-<LI>SERVER_ROOT
-<LI>SERVER_SOFTWARE
-</UL>
-In addition, HTTP headers sent by the server may be passed in the
-environment as well.  Here are some common variable names:
-<UL>
-<LI>HTTP_ACCEPT
-<LI>HTTP_CONNECTION
-<LI>HTTP_HOST
-<LI>HTTP_PRAGMA
-<LI>HTTP_REFERER
-<LI>HTTP_USER_AGENT
-</UL>
-""")
-
-
-# Utilities
-# =========
-
-def escape(s, quote=None):
-    """Deprecated API."""
-    warn("cgi.escape is deprecated, use html.escape instead",
-         DeprecationWarning, stacklevel=2)
-    s = s.replace("&", "&amp;") # Must be done first!
-    s = s.replace("<", "&lt;")
-    s = s.replace(">", "&gt;")
-    if quote:
-        s = s.replace('"', "&quot;")
-    return s
-
-
-def valid_boundary(s):
-    import re
-    if isinstance(s, bytes):
-        _vb_pattern = b"^[ -~]{0,200}[!-~]$"
-    else:
-        _vb_pattern = "^[ -~]{0,200}[!-~]$"
-    return re.match(_vb_pattern, s)
-
-# Invoke mainline
-# ===============
-
-# Call test() when this file is run as a script (not imported as a module)
-if __name__ == '__main__':
-    test()
diff --git a/recipes-apps/python-webserver/files/css/main.css b/recipes-apps/python-webserver/files/css/main.css
deleted file mode 100644
index cd442c1e82b993a9264f28b27ea2b5608d7ee660..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/css/main.css
+++ /dev/null
@@ -1,18 +0,0 @@
-body{background-color: #FFF; padding: 15px;
-    font: Arial,sans-serif}
-
-h1, h2, p, .forms {margin: 0 10px}
-h1 {font-size: 120%; text-indent: 10px; margin: 1.2em 0px; padding: 8px 0px; background: #6699FF}
-h2 {font-size: 110%; text-indent: 10px; margin: 1em 0px; padding:  5px 0px; background: #bbbbbb}
-.forms { padding: 10px 0 0 0}
-p  {font-size: 100%}
-div#container {margin: 0 10%; background: #eeeeee}
-div#led_results {margin: 10px 0px 0px}
-div#switch_status {margin: 10px 0px 0px}
-
-b.rtop, b.rbottom{display: block; background: #FFF}
-b.rtop b, b.rbottom b{display: block; height: 1px; overflow: hidden; background: #eeeeee}
-b.r1{margin: 0 5px}
-b.r2{margin: 0 3px}
-b.r3{margin: 0 2px}
-b.rtop b.r4, b.rbottom b.r4{margin: 0 1px; height: 2px}
diff --git a/recipes-apps/python-webserver/files/html/sata_results.html b/recipes-apps/python-webserver/files/html/sata_results.html
deleted file mode 100644
index 8a1110957d5d0a5c899b41918bedac34fb4dc5bd..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/html/sata_results.html
+++ /dev/null
@@ -1,5 +0,0 @@
-<!DOCTYPE html PUBLIC "-//W3C//Dtd XHTML 1.0 Strict//EN" "http://www.w3.org/tr/xhtml1/Dtd/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><title>Bonnie++ Benchmark results</title><style type="text/css">td.header {text-align: center; backgroundcolor: "#CCFFFF" }td.rowheader {text-align: center; backgroundcolor: "#CCCFFF" }td.size {text-align: center; backgroundcolor: "#CCCFFF" }td.ksec {text-align: center; fontstyle: italic }</style></head><body><table border="3" cellpadding="2" cellspacing="1"><tr><td colspan="2" class="header"><font size=+1><b>Bonnie++ v1.03e</b></font></td><td colspan="6" class="header"><font size=+2><b>Sequential Output</b></font></td><td colspan="4" class="header"><font size=+2><b>Sequential Input</b></font></td><td colspan="2" rowspan="2" class="header"><font size=+2><b>Random<br>Seeks</b></font></td><td colspan="1" class="header"></td><td colspan="6" class="header"><font size=+2><b>Sequential Create</b></font></td><td colspan="6" class="header"><font size=+2><b>Random Create</b></font></td></tr>
-<tr><td></td><td>Size</td><td colspan="2">Per Char</td><td colspan="2">Block</td><td colspan="2">Rewrite</td><td colspan="2">Per Char</td><td colspan="2">Block</td><td>Num Files</td><td colspan="2">Create</td><td colspan="2">Read</td><td colspan="2">Delete</td><td colspan="2">Create</td><td colspan="2">Read</td><td colspan="2">Delete</td></tr><tr><td colspan="2"></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td colspan="1"></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td></tr>
-<tr><td rowspan="2" bgcolor="#FFFFFF" class="rowheader"><font size=+1>SATA SSD Test</td><td class="size" bgcolor="#FFFFFF">8G</td><td>10901</td><td>89</td><td>75703</td><td>26</td><td>71952</td><td>28</td><td>12184</td><td>99</td><td>511863</td><td>71</td><td>5438</td><td>16</td><td class="size" bgcolor="#FFFFFF">16</td><td class="size" bgcolor="#FFFFFF">39</td><td class="size" bgcolor="#FFFFFF">97</td><td class="size" bgcolor="#FFFFFF">+++++</td><td class="size" bgcolor="#FFFFFF">+++</td><td>470</td><td>98</td><td>58</td><td>97</td><td>+++++</td><td>+++</td><td>138</td><td>97</td></tr>
-</table>
-</body></html>
diff --git a/recipes-apps/python-webserver/files/html/usb3_results.html b/recipes-apps/python-webserver/files/html/usb3_results.html
deleted file mode 100644
index 002e9285a3a75a5e1a9961817d38ca89512a7e5e..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/html/usb3_results.html
+++ /dev/null
@@ -1,5 +0,0 @@
-<!DOCTYPE html PUBLIC "-//W3C//Dtd XHTML 1.0 Strict//EN" "http://www.w3.org/tr/xhtml1/Dtd/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html;charset=utf-8" /><title>Bonnie++ Benchmark results</title><style type="text/css">td.header {text-align: center; backgroundcolor: "#CCFFFF" }td.rowheader {text-align: center; backgroundcolor: "#CCCFFF" }td.size {text-align: center; backgroundcolor: "#CCCFFF" }td.ksec {text-align: center; fontstyle: italic }</style></head><body><table border="3" cellpadding="2" cellspacing="1"><tr><td colspan="2" class="header"><font size=+1><b>Bonnie++ v1.03e</b></font></td><td colspan="6" class="header"><font size=+2><b>Sequential Output</b></font></td><td colspan="4" class="header"><font size=+2><b>Sequential Input</b></font></td><td colspan="2" rowspan="2" class="header"><font size=+2><b>Random<br>Seeks</b></font></td><td colspan="1" class="header"></td><td colspan="6" class="header"><font size=+2><b>Sequential Create</b></font></td><td colspan="6" class="header"><font size=+2><b>Random Create</b></font></td></tr>
-<tr><td></td><td>Size</td><td colspan="2">Per Char</td><td colspan="2">Block</td><td colspan="2">Rewrite</td><td colspan="2">Per Char</td><td colspan="2">Block</td><td>Num Files</td><td colspan="2">Create</td><td colspan="2">Read</td><td colspan="2">Delete</td><td colspan="2">Create</td><td colspan="2">Read</td><td colspan="2">Delete</td></tr><tr><td colspan="2"></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>K/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td colspan="1"></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td><td class="ksec"><font size=-2>/sec</font></td><td class="ksec"><font size=-2>% CPU</font></td></tr>
-<tr><td rowspan="2" bgcolor="#FFFFFF" class="rowheader"><font size=+1>USB3 Flash Test</td><td class="size" bgcolor="#FFFFFF">8G</td><td>8280</td><td>67</td><td>19507</td><td>6</td><td>15839</td><td>5</td><td>11804</td><td>96</td><td>150700</td><td>18</td><td>2183</td><td>5</td><td class="size" bgcolor="#FFFFFF">16</td><td class="size" bgcolor="#FFFFFF">39</td><td class="size" bgcolor="#FFFFFF">97</td><td class="size" bgcolor="#FFFFFF">+++++</td><td class="size" bgcolor="#FFFFFF">+++</td><td>473</td><td>97</td><td>58</td><td>97</td><td>+++++</td><td>+++</td><td>138</td><td>96</td></tr>
-</table>
-</body></html>
diff --git a/recipes-apps/python-webserver/files/images/Avnet_logo_tagline_rgb.png b/recipes-apps/python-webserver/files/images/Avnet_logo_tagline_rgb.png
deleted file mode 100644
index bf5ae35de6d9d5529736e61c7381cf1d2d228806..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/images/Avnet_logo_tagline_rgb.png and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/images/favicon.ico b/recipes-apps/python-webserver/files/images/favicon.ico
deleted file mode 100644
index 4dd6ac2b9df684322c702237bb7397a4584ec61d..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/images/favicon.ico and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/launch_server.sh b/recipes-apps/python-webserver/files/launch_server.sh
deleted file mode 100644
index 9b52e36b29b79b3e736f6cfa4a281d0ec0001ab5..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/launch_server.sh
+++ /dev/null
@@ -1,65 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Feb 22, 2018
-#  Design Name:         Python Webserver Launch Script
-#  Module Name:         launch_server.sh
-#  Project Name:        Python Webserver Launch Script
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EG + I/O Carrier
-#                       UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         Python Webserver Launch Script
-# 
-#  Dependencies:        
-#
-#  Revision:            Feb 22, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-cd /home/root/webserver
-
-echo "Export and initialize the GPIO"
-source ./setup_gpio.sh
-
-echo "Set web page location:"
-killall -9 httpd
-httpd -h /home/root/webserver
-
-echo "Start the Python webserver in the background"
-python3 ./server.py &
-
diff --git a/recipes-apps/python-webserver/files/pdfs/Delkin_Devices_Product_Line.pdf b/recipes-apps/python-webserver/files/pdfs/Delkin_Devices_Product_Line.pdf
deleted file mode 100755
index cb1e9864a87b80458e1d0570293309eacc1f6747..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/pdfs/Delkin_Devices_Product_Line.pdf and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/pz/images/board.jpg b/recipes-apps/python-webserver/files/pz/images/board.jpg
deleted file mode 100755
index e3c0c10dfc81df07989b66c9240c880e207d4e8e..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/pz/images/board.jpg and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/pz/images/picozed.png b/recipes-apps/python-webserver/files/pz/images/picozed.png
deleted file mode 100644
index 60adcfe9a99e9d05261ec9d22a1db4d8d30f9da4..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/pz/images/picozed.png and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/pz/index.html b/recipes-apps/python-webserver/files/pz/index.html
deleted file mode 100644
index 05bf63c9456e3aadf49cf4abe44c031b607ccea8..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/pz/index.html
+++ /dev/null
@@ -1,77 +0,0 @@
-<!DOCTYPE html>
-<html>
-<head>
-    <title> Avnet Python WebServer Demo </title>
-    <link type="text/css" rel="stylesheet" href="css/main.css" />
-    <script>
-    </script>
-</head>
-
-
-<body>
-<iframe name="dummy" style="display:none;"></iframe>
-
-    <center>
-        <img src="images/Avnet_logo_tagline_rgb.png" > </img>
-		<br>
-		</br>
-        <img src="images/picozed.png">
-    </center>
-
-<div id="container">
-<b class="rtop">
-  <b class="r1"></b> <b class="r2"></b> <b class="r3"></b> <b class="r4"></b>
-</b>
-
-<h1>Avnet Python Web Server Demo</h1>
-
-<p> Hello! This is a demonstration of a simple Python embedded webserver. Using Python, a webserver can be easily embedded into your Linux system. A webserver provides an easy method to control or monitor the embedded platform via an Internet browser. </p>
-
-<h2> Controlling the Embedded System </h2>
-<p>
-This example is intended to illustrate how the functionality of the embedded system can be controlled from the browser.
-Here, the <a href="images/board.jpg" target="_blank">LED's on the board</a> can be switched on or off by clicking on the 'Set PL LEDs' button.
-</p>
-
-<center>
-    <form action="#" method="POST" target="dummy">
-	<fieldset>
-		<br>
-		</br>
-            <legend align="Center"><b>Changing LEDs &nbsp </b></legend>
-		<p> 
-			<label>PL LEDs &nbsp</label>
-			<select name="PLledSel" id = "PLledSel">
-                <option value = "0">Off</option>
-                <option value = "1">On</option>
-			</select>
-            <input type="submit" name="SETPLLED" value="SET PL LED">
-		</p>
-	</fieldset>
-    </form>
-</center>
-
-<h2> Documentation </h2>
-<p> 
-    <ul>
-        <li>PicoZed SOM <a href="pdfs/5048-PB-PDP-AES-Z7PZ-SOM-G-V2.pdf" target="_blank"> product brief</a></li>
-        <li>PicoZed FMC2 Carrier Card <a href="pdfs/PB-AES-PZCC-FMC-V2-G-V1.pdf" target="_blank"> product brief</a> </li>
-    </ul>
-</p>
-
-<h2> External Links </h2>
-<p> 
-    <i> (Note that these links point to locations not served by the embedded webserver)</i> 
-    <ul>
-        <li> <a href="http://www.zedboard.org/product/picozed" target="_blank">PicoZed Product Page</a> </li>
-        <li> <a href="http://www.xilinx.com"  target="_blank">Xilinx</a></li>
-    </ul>
-</p>
-
-
-<b class="rbottom">
-  <b class="r4"></b> <b class="r3"></b> <b class="r2"></b> <b class="r1"></b>
-</b>
-</div>
-</body>
-</html>
diff --git a/recipes-apps/python-webserver/files/pz/pdfs/5048-PB-PDP-AES-Z7PZ-SOM-G-V2.pdf b/recipes-apps/python-webserver/files/pz/pdfs/5048-PB-PDP-AES-Z7PZ-SOM-G-V2.pdf
deleted file mode 100644
index 42464240441808c11afc7fc65969d024104cc86a..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/pz/pdfs/5048-PB-PDP-AES-Z7PZ-SOM-G-V2.pdf and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/pz/pdfs/PB-AES-PZCC-FMC-V2-G-V1.pdf b/recipes-apps/python-webserver/files/pz/pdfs/PB-AES-PZCC-FMC-V2-G-V1.pdf
deleted file mode 100644
index 397be9165f5887d7bed28013f0b2af22dcc60969..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/pz/pdfs/PB-AES-PZCC-FMC-V2-G-V1.pdf and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/pz/server.py b/recipes-apps/python-webserver/files/pz/server.py
deleted file mode 100644
index 05421a61014b9928f403f4b9483663d5b083a1b8..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/pz/server.py
+++ /dev/null
@@ -1,173 +0,0 @@
-#!/usr/bin/python3
-
-"""
-Save this file as server.py
->>> python3 server.py
-Serving on localhost:8000
-You can use this to test GET and POST methods.
-"""
-
-import http.server
-import socketserver
-import logging
-import cgi
-import sys
-import re
-import subprocess
-import time, struct
-
-
-###
-# For the PicoZed 7010, because there is only on PL GPIO LED for this SOM,
-# the PL LED is mapped to GPIO 1023. This will light up LED D6 on the FMC2 Carrier
-# when this SOM is installed.
-#
-# For the PicoZed 7015-7030 there are 4 PL GPIO LEDs with the first LED mapped to GPIO 1020.
-# This means that GPIO 1023 will light up the last LED (D9) on the FMC2 Carrier when any of
-# these SOMs are instsalled.
-###
-
-#LED0Portnumber = str(1020)
-#LED1Portnumber = str(1021)
-#LED2Portnumber = str(1022)
-LED3Portnumber = str(1023)
-#LED4Portnumber = str(500)
-#LED5Portnumber = str(501)
-#LED6Portnumber = str(502)
-#LED7Portnumber = str(503)
-#LED0Path = '/sys/class/gpio/gpio' + LED0Portnumber + '/value'
-#LED1Path = '/sys/class/gpio/gpio' + LED1Portnumber + '/value'
-#LED2Path = '/sys/class/gpio/gpio' + LED2Portnumber + '/value'
-LED3Path = '/sys/class/gpio/gpio' + LED3Portnumber + '/value'
-#LED4Path = '/sys/class/gpio/gpio' + LED4Portnumber + '/value'
-#LED5Path = '/sys/class/gpio/gpio' + LED5Portnumber + '/value'
-#LED6Path = '/sys/class/gpio/gpio' + LED6Portnumber + '/value'
-#LED7Path = '/sys/class/gpio/gpio' + LED7Portnumber + '/value'
-
-
-if len(sys.argv) > 2:
-    PORT = int(sys.argv[2])
-    I = sys.argv[1]
-elif len(sys.argv) > 1:
-    PORT = int(sys.argv[1])
-    I = ""
-else:
-    PORT = 8000
-    I = ""
-
-class ServerHandler(http.server.SimpleHTTPRequestHandler):
-
-    def do_GET(self):
-        logging.warning("======= GET STARTED =======")
-        logging.warning(self.headers)
-	
-        http.server.SimpleHTTPRequestHandler.do_GET(self)
-
-    def do_POST(self):
-        logging.warning("======= POST STARTED =======")
-        logging.warning(self.headers)
-        form = cgi.FieldStorage(
-            fp=self.rfile,
-            headers=self.headers,
-            environ={'REQUEST_METHOD':'POST',
-                     'CONTENT_TYPE':self.headers['Content-Type'],
-                     })
-        logging.warning("Host: %s", form.getvalue('Host'));
-
-        if (form.getvalue('SETPLLED')):
-            ledChosen = form.getvalue('PLledSel')
-            logging.warning("PL LED Setting is %s", ledChosen)
-            #LED0File= open (LED0Path,'w')
-            #LED1File= open (LED1Path,'w')
-            #LED2File= open (LED2Path,'w')
-            LED3File= open (LED3Path,'w')
-            #LED4File= open (LED4Path,'w')
-            #LED5File= open (LED5Path,'w')
-            #LED6File= open (LED6Path,'w')
-            #LED7File= open (LED7Path,'w')
-            #time.sleep(0.5)
-            if (int(ledChosen) == 0):
-                #LED0File.write('0')
-                #LED1File.write('0')
-                #LED2File.write('0')
-                LED3File.write('0')
-                #LED4File.write('0')
-                #LED5File.write('0')
-                #LED6File.write('0')
-                #LED7File.write('0')
-            elif (int(ledChosen) == 1):
-                #LED0File.write('1')
-                #LED1File.write('1')
-                #LED2File.write('1')
-                LED3File.write('1')
-                #LED4File.write('1')
-                #LED5File.write('1')
-                #LED6File.write('1')
-                #LED7File.write('1')
-            else:
-                #LED0File.write('0')
-                #LED1File.write('0')
-                #LED2File.write('0')
-                LED3File.write('0')
-                #LED4File.write('0')
-                #LED5File.write('0')
-                #LED6File.write('0')
-                #LED7File.write('0')
-            #LED0File.close()
-            #LED1File.close()
-            #LED2File.close()
-            LED3File.close()
-            #LED4File.close()
-            #LED5File.close()
-            #LED6File.close()
-            #LED7File.close()
-
-        #if (form.getvalue('GETPLSW')):
-            #SW0Portnumber = str(504)
-            #SW1Portnumber = str(505)
-            #SW2Portnumber = str(506)
-            #SW3Portnumber = str(507)
-            #SW4Portnumber = str(508)
-            #SW5Portnumber = str(509)
-            #SW6Portnumber = str(510)
-            #SW7Portnumber = str(511)
-            #SW0Path = '/sys/class/gpio/gpio' + SW0Portnumber + '/value'
-            #SW1Path = '/sys/class/gpio/gpio' + SW1Portnumber + '/value'
-            #SW2Path = '/sys/class/gpio/gpio' + SW2Portnumber + '/value'
-            #SW3Path = '/sys/class/gpio/gpio' + SW3Portnumber + '/value'
-            #SW4Path = '/sys/class/gpio/gpio' + SW4Portnumber + '/value'
-            #SW5Path = '/sys/class/gpio/gpio' + SW5Portnumber + '/value'
-            #SW6Path = '/sys/class/gpio/gpio' + SW6Portnumber + '/value'
-            #SW7Path = '/sys/class/gpio/gpio' + SW7Portnumber + '/value'
-            #SW0File= open (SW0Path,'r')
-            #SW1File= open (SW1Path,'r')
-            #SW2File= open (SW2Path,'r')
-            #SW3File= open (SW3Path,'r')
-            #SW4File= open (SW4Path,'r')
-            #SW5File= open (SW5Path,'r')
-            #SW6File= open (SW6Path,'r')
-            #SW7File= open (SW7Path,'r')
-            ##time.sleep(0.5)
-            #SW0VAL = SW0File.read()
-            #SW1VAL = SW1File.read()
-            #SW2VAL = SW2File.read()
-            #SW3VAL = SW3File.read()
-            #SW4VAL = SW4File.read()
-            #SW5VAL = SW5File.read()
-            #SW6VAL = SW6File.read()
-            #SW7VAL = SW7File.read()
-            #SW8BITS = str(SW7VAL) + str(SW6VAL) + str(SW5VAL) + str(SW4VAL) + str(SW3VAL) + str(SW2VAL) + str(SW1VAL) + str(SW0VAL)
-            #return SW8BITS
-            #SW0File.close()
-            #SW1File.close()
-            #SW2File.close()
-            #SW3File.close()
-            #SW4File.close()
-            #SW5File.close()
-            #SW6File.close()
-            #SW7File.close()
-			
-
-Handler = ServerHandler
-httpd = socketserver.TCPServer(("", PORT), Handler)
-httpd.serve_forever()
diff --git a/recipes-apps/python-webserver/files/pz/setup_gpio.sh b/recipes-apps/python-webserver/files/pz/setup_gpio.sh
deleted file mode 100644
index 999d2896600b68d7679e84b8e0cf6b508b18c28f..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/pz/setup_gpio.sh
+++ /dev/null
@@ -1,159 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Feb 22, 2018
-#  Design Name:         GPIO Sysfs Init Script
-#  Module Name:         setup_gpio.sh
-#  Project Name:        GPIO Sysfs Init Script
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EG + I/O Carrier
-#                       UltraZed-EG + PCIe Carrier
-#                       UltraZed-EV + EV Carrier
-#                       PicoZed + FMC2 Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         GPIO Sysfs Init Script
-# 
-#  Dependencies:        
-#
-#  Revision:            Feb 22, 2018: 1.0 Initial version
-#                       Mar 22, 2018: 1.1 Updated for PicoZed and
-#                                         PetaLinux 2017.4
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-###
-# For the PicoZed 7010, because there is only on PL GPIO LED for this SOM,
-# the PL LED is mapped to GPIO 1023. This will light up LED D6 on the FMC2 Carrier
-# when this SOM is installed.
-#
-# For the PicoZed 7015-7030 there are 4 PL GPIO LEDs with the first LED mapped to GPIO 1020.
-# This means that GPIO 1023 will light up the last LED (D9) on the FMC2 Carrier when any of
-# these SOMs are instsalled.
-###
-
-LED_GPIO_BASE=1020
-#LED0_BASE=$((LED_GPIO_BASE+0))
-#LED1_BASE=$((LED_GPIO_BASE+1))
-#LED2_BASE=$((LED_GPIO_BASE+2))
-LED3_BASE=$((LED_GPIO_BASE+3))
-#LED4_BASE=$((LED_GPIO_BASE+4))
-#LED5_BASE=$((LED_GPIO_BASE+5))
-#LED6_BASE=$((LED_GPIO_BASE+6))
-#LED7_BASE=$((LED_GPIO_BASE+7))
-
-#SW_GPIO_BASE=504
-#SW0_BASE=$((SW_GPIO_BASE+0))
-#SW1_BASE=$((SW_GPIO_BASE+1))
-#SW2_BASE=$((SW_GPIO_BASE+2))
-#SW3_BASE=$((SW_GPIO_BASE+3))
-#SW4_BASE=$((SW_GPIO_BASE+4))
-#SW5_BASE=$((SW_GPIO_BASE+5))
-#SW6_BASE=$((SW_GPIO_BASE+6))
-#SW7_BASE=$((SW_GPIO_BASE+7))
-
-# PL LED0: 
-#echo ${LED0_BASE} > /sys/class/gpio/export
-#echo out > /sys/class/gpio/gpio${LED0_BASE}/direction
-#echo 1 > /sys/class/gpio/gpio${LED0_BASE}/value
-
-# PL LED1: 
-#echo ${LED1_BASE} > /sys/class/gpio/export
-#echo out > /sys/class/gpio/gpio${LED1_BASE}/direction
-#echo 1 > /sys/class/gpio/gpio${LED1_BASE}/value
-
-# PL LED2: 
-#echo ${LED2_BASE} > /sys/class/gpio/export
-#echo out > /sys/class/gpio/gpio${LED2_BASE}/direction
-#echo 1 > /sys/class/gpio/gpio${LED2_BASE}/value
-
-# PL LED3: 
-echo ${LED3_BASE} > /sys/class/gpio/export
-echo out > /sys/class/gpio/gpio${LED3_BASE}/direction
-echo 1 > /sys/class/gpio/gpio${LED3_BASE}/value
-
-## PL LED4: 
-#echo ${LED4_BASE} > /sys/class/gpio/export
-#echo out > /sys/class/gpio/gpio${LED4_BASE}/direction
-#echo 1 > /sys/class/gpio/gpio${LED4_BASE}/value
-
-## PL LED5: 
-#echo ${LED5_BASE} > /sys/class/gpio/export
-#echo out > /sys/class/gpio/gpio${LED5_BASE}/direction
-#echo 1 > /sys/class/gpio/gpio${LED5_BASE}/value
-
-## PL LED6: 
-#echo ${LED6_BASE} > /sys/class/gpio/export
-#echo out > /sys/class/gpio/gpio${LED6_BASE}/direction
-#echo 1 > /sys/class/gpio/gpio${LED6_BASE}/value
-
-## PL LED7: 
-#echo ${LED7_BASE} > /sys/class/gpio/export
-#echo out > /sys/class/gpio/gpio${LED7_BASE}/direction
-#echo 1 > /sys/class/gpio/gpio${LED7_BASE}/value
-
-## PL SW0:
-#echo ${SW0_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW0_BASE}/direction
-
-## PL SW1:
-#echo ${SW1_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW1_BASE}/direction
-
-## PL SW2:
-#echo ${SW2_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW2_BASE}/direction
-
-## PL SW3:
-#echo ${SW3_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW3_BASE}/direction
-
-## PL SW4:
-#echo ${SW4_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW4_BASE}/direction
-
-## PL SW5:
-#echo ${SW5_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW5_BASE}/direction
-
-## PL SW6:
-#echo ${SW6_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW6_BASE}/direction
-
-## PL SW7:
-#echo ${SW7_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW7_BASE}/direction
-
diff --git a/recipes-apps/python-webserver/files/pz/unexport_gpio.sh b/recipes-apps/python-webserver/files/pz/unexport_gpio.sh
deleted file mode 100644
index e169be1574d16b7af001bd315a47b7d677b0883c..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/pz/unexport_gpio.sh
+++ /dev/null
@@ -1,135 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Feb 22, 2018
-#  Design Name:         GPIO Sysfs Uninit Script
-#  Module Name:         setup_gpio.sh
-#  Project Name:        GPIO Sysfs Uninit Script
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EG + I/O Carrier
-#                       UltraZed-EG + PCIe Carrier
-#                       UltraZed-EV + EV Carrier
-#                       PicoZed + FMC2 Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         GPIO Sysfs Uninit Script
-# 
-#  Dependencies:        
-#
-#  Revision:            Feb 22, 2018: 1.0 Initial version
-#                       Mar 22, 2018: 1.1 Updated for PicoZed and
-#                                         PetaLinux 2017.4
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-###
-# For the PicoZed 7010, because there is only on PL GPIO LED for this SOM,
-# the PL LED is mapped to GPIO 1023. This will light up LED D6 on the FMC2 Carrier
-# when this SOM is installed.
-#
-# For the PicoZed 7015-7030 there are 4 PL GPIO LEDs with the first LED mapped to GPIO 1020.
-# This means that GPIO 1023 will light up the last LED (D9) on the FMC2 Carrier when any of
-# these SOMs are instsalled.
-###
-
-LED_GPIO_BASE=1020
-#LED0_BASE=$((LED_GPIO_BASE+0))
-#LED1_BASE=$((LED_GPIO_BASE+1))
-#LED2_BASE=$((LED_GPIO_BASE+2))
-LED3_BASE=$((LED_GPIO_BASE+3))
-#LED4_BASE=$((LED_GPIO_BASE+4))
-#LED5_BASE=$((LED_GPIO_BASE+5))
-#LED6_BASE=$((LED_GPIO_BASE+6))
-#LED7_BASE=$((LED_GPIO_BASE+7))
-
-#SW_GPIO_BASE=504
-#SW0_BASE=$((SW_GPIO_BASE+0))
-#SW1_BASE=$((SW_GPIO_BASE+1))
-#SW2_BASE=$((SW_GPIO_BASE+2))
-#SW3_BASE=$((SW_GPIO_BASE+3))
-#SW4_BASE=$((SW_GPIO_BASE+4))
-#SW5_BASE=$((SW_GPIO_BASE+5))
-#SW6_BASE=$((SW_GPIO_BASE+6))
-#SW7_BASE=$((SW_GPIO_BASE+7))
-
-# PL LED0: 
-#echo ${LED0_BASE} > /sys/class/gpio/unexport
-
-# PL LED1: 
-#echo ${LED1_BASE} > /sys/class/gpio/unexport
-
-# PL LED2: 
-#echo ${LED2_BASE} > /sys/class/gpio/unexport
-
-# PL LED3: 
-echo ${LED3_BASE} > /sys/class/gpio/unexport
-
-## PL LED4: 
-#echo ${LED4_BASE} > /sys/class/gpio/unexport
-
-## PL LED5: 
-#echo ${LED5_BASE} > /sys/class/gpio/unexport
-
-## PL LED6: 
-#echo ${LED6_BASE} > /sys/class/gpio/unexport
-
-## PL LED7: 
-#echo ${LED7_BASE} > /sys/class/gpio/unexport
-
-## PL SW0:
-#echo ${SW0_BASE} > /sys/class/gpio/unexport
-
-## PL SW1:
-#echo ${SW1_BASE} > /sys/class/gpio/unexport
-
-## PL SW2:
-#echo ${SW2_BASE} > /sys/class/gpio/unexport
-
-## PL SW3:
-#echo ${SW3_BASE} > /sys/class/gpio/unexport
-
-## PL SW4:
-#echo ${SW4_BASE} > /sys/class/gpio/unexport
-
-## PL SW5:
-#echo ${SW5_BASE} > /sys/class/gpio/unexport
-
-## PL SW6:
-#echo ${SW6_BASE} > /sys/class/gpio/unexport
-
-## PL SW7:
-#echo ${SW7_BASE} > /sys/class/gpio/unexport
-
diff --git a/recipes-apps/python-webserver/files/stop_server.sh b/recipes-apps/python-webserver/files/stop_server.sh
deleted file mode 100644
index b432c79a1ce02718d952986f38387bf22248f8dc..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/stop_server.sh
+++ /dev/null
@@ -1,61 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Feb 22, 2018
-#  Design Name:         Python Webserver Stop Script
-#  Module Name:         launch_server.sh
-#  Project Name:        Python Webserver Stop Script
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EG + I/O Carrier
-#                       UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         Python Webserver Stop Script
-# 
-#  Dependencies:        
-#
-#  Revision:            Feb 22, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-echo "Kill the Python webserver process"
-kill `pidof python3`
-
-cd /home/root/webserver
-
-echo "Unexport the GPIO"
-source ./unexport_gpio.sh
-
diff --git a/recipes-apps/python-webserver/files/uz/images/ultrazed.png b/recipes-apps/python-webserver/files/uz/images/ultrazed.png
deleted file mode 100644
index d64586883cfface9319670d40939b3fe5202fb5c..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz/images/ultrazed.png and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz/server.py b/recipes-apps/python-webserver/files/uz/server.py
deleted file mode 100644
index 73ac65cef6552ddf490c1bac1deeef46a50f17a1..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/uz/server.py
+++ /dev/null
@@ -1,162 +0,0 @@
-#!/usr/bin/python3
-
-"""
-Save this file as server.py
->>> python3 server.py
-Serving on localhost:8000
-You can use this to test GET and POST methods.
-"""
-
-import http.server
-import socketserver
-import logging
-import cgi
-import sys
-import re
-import subprocess
-import time, struct
-
-LED0Portnumber = str(496)
-LED1Portnumber = str(497)
-LED2Portnumber = str(498)
-LED3Portnumber = str(499)
-LED4Portnumber = str(500)
-LED5Portnumber = str(501)
-LED6Portnumber = str(502)
-LED7Portnumber = str(503)
-LED0Path = '/sys/class/gpio/gpio' + LED0Portnumber + '/value'
-LED1Path = '/sys/class/gpio/gpio' + LED1Portnumber + '/value'
-LED2Path = '/sys/class/gpio/gpio' + LED2Portnumber + '/value'
-LED3Path = '/sys/class/gpio/gpio' + LED3Portnumber + '/value'
-LED4Path = '/sys/class/gpio/gpio' + LED4Portnumber + '/value'
-LED5Path = '/sys/class/gpio/gpio' + LED5Portnumber + '/value'
-LED6Path = '/sys/class/gpio/gpio' + LED6Portnumber + '/value'
-LED7Path = '/sys/class/gpio/gpio' + LED7Portnumber + '/value'
-
-
-if len(sys.argv) > 2:
-    PORT = int(sys.argv[2])
-    I = sys.argv[1]
-elif len(sys.argv) > 1:
-    PORT = int(sys.argv[1])
-    I = ""
-else:
-    PORT = 8000
-    I = ""
-
-class ServerHandler(http.server.SimpleHTTPRequestHandler):
-
-    def do_GET(self):
-        logging.warning("======= GET STARTED =======")
-        logging.warning(self.headers)
-	
-        http.server.SimpleHTTPRequestHandler.do_GET(self)
-
-    def do_POST(self):
-        logging.warning("======= POST STARTED =======")
-        logging.warning(self.headers)
-        form = cgi.FieldStorage(
-            fp=self.rfile,
-            headers=self.headers,
-            environ={'REQUEST_METHOD':'POST',
-                     'CONTENT_TYPE':self.headers['Content-Type'],
-                     })
-        logging.warning("Host: %s", form.getvalue('Host'));
-
-        if (form.getvalue('SETPLLED')):
-            ledChosen = form.getvalue('PLledSel')
-            logging.warning("PL LED Setting is %s", ledChosen)
-            LED0File= open (LED0Path,'w')
-            LED1File= open (LED1Path,'w')
-            LED2File= open (LED2Path,'w')
-            LED3File= open (LED3Path,'w')
-            LED4File= open (LED4Path,'w')
-            LED5File= open (LED5Path,'w')
-            LED6File= open (LED6Path,'w')
-            LED7File= open (LED7Path,'w')
-            #time.sleep(0.5)
-            if (int(ledChosen) == 0):
-                LED0File.write('0')
-                LED1File.write('0')
-                LED2File.write('0')
-                LED3File.write('0')
-                LED4File.write('0')
-                LED5File.write('0')
-                LED6File.write('0')
-                LED7File.write('0')
-            elif (int(ledChosen) == 1):
-                LED0File.write('1')
-                LED1File.write('1')
-                LED2File.write('1')
-                LED3File.write('1')
-                LED4File.write('1')
-                LED5File.write('1')
-                LED6File.write('1')
-                LED7File.write('1')
-            else:
-                LED0File.write('0')
-                LED1File.write('0')
-                LED2File.write('0')
-                LED3File.write('0')
-                LED4File.write('0')
-                LED5File.write('0')
-                LED6File.write('0')
-                LED7File.write('0')
-            LED0File.close()
-            LED1File.close()
-            LED2File.close()
-            LED3File.close()
-            LED4File.close()
-            LED5File.close()
-            LED6File.close()
-            LED7File.close()
-
-        #if (form.getvalue('GETPLSW')):
-            #SW0Portnumber = str(504)
-            #SW1Portnumber = str(505)
-            #SW2Portnumber = str(506)
-            #SW3Portnumber = str(507)
-            #SW4Portnumber = str(508)
-            #SW5Portnumber = str(509)
-            #SW6Portnumber = str(510)
-            #SW7Portnumber = str(511)
-            #SW0Path = '/sys/class/gpio/gpio' + SW0Portnumber + '/value'
-            #SW1Path = '/sys/class/gpio/gpio' + SW1Portnumber + '/value'
-            #SW2Path = '/sys/class/gpio/gpio' + SW2Portnumber + '/value'
-            #SW3Path = '/sys/class/gpio/gpio' + SW3Portnumber + '/value'
-            #SW4Path = '/sys/class/gpio/gpio' + SW4Portnumber + '/value'
-            #SW5Path = '/sys/class/gpio/gpio' + SW5Portnumber + '/value'
-            #SW6Path = '/sys/class/gpio/gpio' + SW6Portnumber + '/value'
-            #SW7Path = '/sys/class/gpio/gpio' + SW7Portnumber + '/value'
-            #SW0File= open (SW0Path,'r')
-            #SW1File= open (SW1Path,'r')
-            #SW2File= open (SW2Path,'r')
-            #SW3File= open (SW3Path,'r')
-            #SW4File= open (SW4Path,'r')
-            #SW5File= open (SW5Path,'r')
-            #SW6File= open (SW6Path,'r')
-            #SW7File= open (SW7Path,'r')
-            ##time.sleep(0.5)
-            #SW0VAL = SW0File.read()
-            #SW1VAL = SW1File.read()
-            #SW2VAL = SW2File.read()
-            #SW3VAL = SW3File.read()
-            #SW4VAL = SW4File.read()
-            #SW5VAL = SW5File.read()
-            #SW6VAL = SW6File.read()
-            #SW7VAL = SW7File.read()
-            #SW8BITS = str(SW7VAL) + str(SW6VAL) + str(SW5VAL) + str(SW4VAL) + str(SW3VAL) + str(SW2VAL) + str(SW1VAL) + str(SW0VAL)
-            #return SW8BITS
-            #SW0File.close()
-            #SW1File.close()
-            #SW2File.close()
-            #SW3File.close()
-            #SW4File.close()
-            #SW5File.close()
-            #SW6File.close()
-            #SW7File.close()
-			
-
-Handler = ServerHandler
-httpd = socketserver.TCPServer(("", PORT), Handler)
-httpd.serve_forever()
diff --git a/recipes-apps/python-webserver/files/uz/setup_gpio.sh b/recipes-apps/python-webserver/files/uz/setup_gpio.sh
deleted file mode 100644
index a750b5a70d9999beeba4fe0d5de106763f841c25..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/uz/setup_gpio.sh
+++ /dev/null
@@ -1,145 +0,0 @@
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Feb 22, 2018
-#  Design Name:         GPIO Sysfs Init Script
-#  Module Name:         setup_gpio.sh
-#  Project Name:        GPIO Sysfs Init Script
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EG + I/O Carrier
-#                       UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         GPIO Sysfs Init Script
-# 
-#  Dependencies:        
-#
-#  Revision:            Feb 22, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-LED_GPIO_BASE=496
-LED0_BASE=$((LED_GPIO_BASE+0))
-LED1_BASE=$((LED_GPIO_BASE+1))
-LED2_BASE=$((LED_GPIO_BASE+2))
-LED3_BASE=$((LED_GPIO_BASE+3))
-LED4_BASE=$((LED_GPIO_BASE+4))
-LED5_BASE=$((LED_GPIO_BASE+5))
-LED6_BASE=$((LED_GPIO_BASE+6))
-LED7_BASE=$((LED_GPIO_BASE+7))
-
-#SW_GPIO_BASE=504
-#SW0_BASE=$((SW_GPIO_BASE+0))
-#SW1_BASE=$((SW_GPIO_BASE+1))
-#SW2_BASE=$((SW_GPIO_BASE+2))
-#SW3_BASE=$((SW_GPIO_BASE+3))
-#SW4_BASE=$((SW_GPIO_BASE+4))
-#SW5_BASE=$((SW_GPIO_BASE+5))
-#SW6_BASE=$((SW_GPIO_BASE+6))
-#SW7_BASE=$((SW_GPIO_BASE+7))
-
-# PL LED0: 
-echo ${LED0_BASE} > /sys/class/gpio/export
-echo out > /sys/class/gpio/gpio${LED0_BASE}/direction
-echo 1 > /sys/class/gpio/gpio${LED0_BASE}/value
-
-# PL LED1: 
-echo ${LED1_BASE} > /sys/class/gpio/export
-echo out > /sys/class/gpio/gpio${LED1_BASE}/direction
-echo 1 > /sys/class/gpio/gpio${LED1_BASE}/value
-
-# PL LED2: 
-echo ${LED2_BASE} > /sys/class/gpio/export
-echo out > /sys/class/gpio/gpio${LED2_BASE}/direction
-echo 1 > /sys/class/gpio/gpio${LED2_BASE}/value
-
-# PL LED3: 
-echo ${LED3_BASE} > /sys/class/gpio/export
-echo out > /sys/class/gpio/gpio${LED3_BASE}/direction
-echo 1 > /sys/class/gpio/gpio${LED3_BASE}/value
-
-# PL LED4: 
-echo ${LED4_BASE} > /sys/class/gpio/export
-echo out > /sys/class/gpio/gpio${LED4_BASE}/direction
-echo 1 > /sys/class/gpio/gpio${LED4_BASE}/value
-
-# PL LED5: 
-echo ${LED5_BASE} > /sys/class/gpio/export
-echo out > /sys/class/gpio/gpio${LED5_BASE}/direction
-echo 1 > /sys/class/gpio/gpio${LED5_BASE}/value
-
-# PL LED6: 
-echo ${LED6_BASE} > /sys/class/gpio/export
-echo out > /sys/class/gpio/gpio${LED6_BASE}/direction
-echo 1 > /sys/class/gpio/gpio${LED6_BASE}/value
-
-# PL LED7: 
-echo ${LED7_BASE} > /sys/class/gpio/export
-echo out > /sys/class/gpio/gpio${LED7_BASE}/direction
-echo 1 > /sys/class/gpio/gpio${LED7_BASE}/value
-
-## PL SW0:
-#echo ${SW0_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW0_BASE}/direction
-
-## PL SW1:
-#echo ${SW1_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW1_BASE}/direction
-
-## PL SW2:
-#echo ${SW2_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW2_BASE}/direction
-
-## PL SW3:
-#echo ${SW3_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW3_BASE}/direction
-
-## PL SW4:
-#echo ${SW4_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW4_BASE}/direction
-
-## PL SW5:
-#echo ${SW5_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW5_BASE}/direction
-
-## PL SW6:
-#echo ${SW6_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW6_BASE}/direction
-
-## PL SW7:
-#echo ${SW7_BASE} > /sys/class/gpio/export
-#echo in > /sys/class/gpio/gpio${SW7_BASE}/direction
-
diff --git a/recipes-apps/python-webserver/files/uz/unexport_gpio.sh b/recipes-apps/python-webserver/files/uz/unexport_gpio.sh
deleted file mode 100644
index 3cf5fb5f6fdac50c1c19367f04931995e3b66c27..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/uz/unexport_gpio.sh
+++ /dev/null
@@ -1,122 +0,0 @@
-
-# ----------------------------------------------------------------------------
-#
-#        ** **        **          **  ****      **  **********  **********
-#       **   **        **        **   ** **     **  **              **
-#      **     **        **      **    **  **    **  **              **
-#     **       **        **    **     **   **   **  *********       **
-#    **         **        **  **      **    **  **  **              **
-#   **           **        ****       **     ** **  **              **
-#  **  .........  **        **        **      ****  **********      **
-#     ...........
-#                                     Reach Further
-#
-# ----------------------------------------------------------------------------
-# 
-#  This design is the property of Avnet.  Publication of this
-#  design is not authorized without written consent from Avnet.
-# 
-#  Please direct any questions to the UltraZed community support forum:
-#     http://www.ultrazed.org/forum
-# 
-#  Product information is available at:
-#     http://www.ultrazed.org/product/ultrazed-EG
-# 
-#  Disclaimer:
-#     Avnet, Inc. makes no warranty for the use of this code or design.
-#     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-#     any errors, which may appear in this code, nor does it make a commitment
-#     to update the information contained herein. Avnet, Inc specifically
-#     disclaims any implied warranties of fitness for a particular purpose.
-#                      Copyright(c) 2016 Avnet, Inc.
-#                              All rights reserved.
-# 
-# ----------------------------------------------------------------------------
-# 
-#  Create Date:         Feb 22, 2018
-#  Design Name:         GPIO Sysfs Uninit Script
-#  Module Name:         setup_gpio.sh
-#  Project Name:        GPIO Sysfs Uninit Script
-#  Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-#  Hardware Boards:     UltraZed-EG + I/O Carrier
-#                       UltraZed-EV + EV Carrier
-# 
-#  Tool versions:       Xilinx Vivado 2017.3
-# 
-#  Description:         GPIO Sysfs Uninit Script
-# 
-#  Dependencies:        
-#
-#  Revision:            Feb 22, 2018: 1.0 Initial version
-# 
-# ----------------------------------------------------------------------------
-#!/bin/sh
-
-LED_GPIO_BASE=496
-LED0_BASE=$((LED_GPIO_BASE+0))
-LED1_BASE=$((LED_GPIO_BASE+1))
-LED2_BASE=$((LED_GPIO_BASE+2))
-LED3_BASE=$((LED_GPIO_BASE+3))
-LED4_BASE=$((LED_GPIO_BASE+4))
-LED5_BASE=$((LED_GPIO_BASE+5))
-LED6_BASE=$((LED_GPIO_BASE+6))
-LED7_BASE=$((LED_GPIO_BASE+7))
-
-#SW_GPIO_BASE=504
-#SW0_BASE=$((SW_GPIO_BASE+0))
-#SW1_BASE=$((SW_GPIO_BASE+1))
-#SW2_BASE=$((SW_GPIO_BASE+2))
-#SW3_BASE=$((SW_GPIO_BASE+3))
-#SW4_BASE=$((SW_GPIO_BASE+4))
-#SW5_BASE=$((SW_GPIO_BASE+5))
-#SW6_BASE=$((SW_GPIO_BASE+6))
-#SW7_BASE=$((SW_GPIO_BASE+7))
-
-# PL LED0: 
-echo ${LED0_BASE} > /sys/class/gpio/unexport
-
-# PL LED1: 
-echo ${LED1_BASE} > /sys/class/gpio/unexport
-
-# PL LED2: 
-echo ${LED2_BASE} > /sys/class/gpio/unexport
-
-# PL LED3: 
-echo ${LED3_BASE} > /sys/class/gpio/unexport
-
-# PL LED4: 
-echo ${LED4_BASE} > /sys/class/gpio/unexport
-
-# PL LED5: 
-echo ${LED5_BASE} > /sys/class/gpio/unexport
-
-# PL LED6: 
-echo ${LED6_BASE} > /sys/class/gpio/unexport
-
-# PL LED7: 
-echo ${LED7_BASE} > /sys/class/gpio/unexport
-
-## PL SW0:
-#echo ${SW0_BASE} > /sys/class/gpio/unexport
-
-## PL SW1:
-#echo ${SW1_BASE} > /sys/class/gpio/unexport
-
-## PL SW2:
-#echo ${SW2_BASE} > /sys/class/gpio/unexport
-
-## PL SW3:
-#echo ${SW3_BASE} > /sys/class/gpio/unexport
-
-## PL SW4:
-#echo ${SW4_BASE} > /sys/class/gpio/unexport
-
-## PL SW5:
-#echo ${SW5_BASE} > /sys/class/gpio/unexport
-
-## PL SW6:
-#echo ${SW6_BASE} > /sys/class/gpio/unexport
-
-## PL SW7:
-#echo ${SW7_BASE} > /sys/class/gpio/unexport
-
diff --git a/recipes-apps/python-webserver/files/uz3eg-iocc/images/board.jpg b/recipes-apps/python-webserver/files/uz3eg-iocc/images/board.jpg
deleted file mode 100644
index d6d7e9b10f72257f330eebe168dd8aaaa2c9cd12..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz3eg-iocc/images/board.jpg and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz3eg-iocc/index.html b/recipes-apps/python-webserver/files/uz3eg-iocc/index.html
deleted file mode 100644
index ab33b734715b265775dec018fe5ece8f95da8d71..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/uz3eg-iocc/index.html
+++ /dev/null
@@ -1,88 +0,0 @@
-<!DOCTYPE html>
-<html>
-<head>
-    <title> Avnet Python WebServer Demo </title>
-    <link type="text/css" rel="stylesheet" href="css/main.css" />
-    <script>
-    </script>
-</head>
-
-
-<body>
-<iframe name="dummy" style="display:none;"></iframe>
-
-    <center>
-        <img src="images/Avnet_logo_tagline_rgb.png" > </img>
-		<br>
-		</br>
-        <img src="images/ultrazed.png">
-    </center>
-
-<div id="container">
-<b class="rtop">
-  <b class="r1"></b> <b class="r2"></b> <b class="r3"></b> <b class="r4"></b>
-</b>
-
-<h1>Avnet Python Web Server Demo</h1>
-
-<p> Hello! This is a demonstration of a simple Python embedded webserver. Using Python, a webserver can be easily embedded into your Linux system. A webserver provides an easy method to control or monitor the embedded platform via an Internet browser. </p>
-
-<h2> Controlling the Embedded System </h2>
-<p>
-This example is intended to illustrate how the functionality of the embedded system can be controlled from the browser.
-Here, the <a href="images/board.jpg" target="_blank">LED's on the board</a> can be switched on or off by clicking on the 'Set PL LEDs' button.
-</p>
-
-<center>
-    <form action="#" method="POST" target="dummy">
-	<fieldset>
-		<br>
-		</br>
-            <legend align="Center"><b>Changing LEDs &nbsp </b></legend>
-		<p> 
-			<label>PL LEDs &nbsp</label>
-			<select name="PLledSel" id = "PLledSel">
-                <option value = "0">Off</option>
-                <option value = "1">On</option>
-			</select>
-            <input type="submit" name="SETPLLED" value="SET PL LED">
-		</p>
-	</fieldset>
-    </form>
-</center>
-
-<h2> Performance Test Results </h2>
-<p> 
-These performance tests were running using the Bonnie++ utility to test a variety of sequential and random reads and writes on an attached SATA SSD and USB3 Flash drive.
-    <ul>
-        <li>Delkin 64GB SATA SSD <a href="html/sata_results.html" target="_blank"> test results</a></li>
-    </ul>
-</p>
-
-<h2> Documentation </h2>
-<p> 
-    <ul>
-        <li>UltraZed-EG SOM <a href="pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf" target="_blank"> product brief</a></li>
-        <li>UltraZed-EG IO Carrier Card <a href="pdfs/5080-PB-AES-ZU-IOCC-G-V2e.pdf.pdf" target="_blank"> product brief</a> </li>
-        <li>Delkin Devices <a href="pdfs/Delkin_Devices_Product_Line.pdf" target="_blank"> product portfolio</a> </li>
-    </ul>
-</p>
-
-<h2> External Links </h2>
-<p> 
-    <i> (Note that these links point to locations not served by the embedded webserver)</i> 
-    <ul>
-        <li> <a href="https://www.element14.com/community/community/designcenter/zedboardcommunity/ultrazed/ultrazed-eg" target="_blank">UltraZed-EG</a> </li>
-        <li> <a href="http://www.xilinx.com"  target="_blank">Xilinx</a></li>
-        <li>More information about the <a href="https://www.coker.com.au/bonnie++/readme.html" target="_blank">Bonnie++ </a> performance test utility</li>
-        <li>A good <a href="https://www.jamescoyle.net/how-to/599-benchmark-disk-io-with-dd-and-bonnie" target="_blank">Bonnie++ howto </a> </li>
-    </ul>
-</p>
-
-
-<b class="rbottom">
-  <b class="r4"></b> <b class="r3"></b> <b class="r2"></b> <b class="r1"></b>
-</b>
-</div>
-</body>
-</html>
diff --git a/recipes-apps/python-webserver/files/uz3eg-iocc/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf b/recipes-apps/python-webserver/files/uz3eg-iocc/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf
deleted file mode 100644
index 2f979189201fecf2fa7896d6f0ab4574d3810433..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz3eg-iocc/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz3eg-iocc/pdfs/5080-PB-AES-ZU-IOCC-G-V2e.pdf b/recipes-apps/python-webserver/files/uz3eg-iocc/pdfs/5080-PB-AES-ZU-IOCC-G-V2e.pdf
deleted file mode 100644
index 765d60062c1830c5878bbc02a2e78bad7f5c5f4c..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz3eg-iocc/pdfs/5080-PB-AES-ZU-IOCC-G-V2e.pdf and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz3eg-pciec/images/board.jpg b/recipes-apps/python-webserver/files/uz3eg-pciec/images/board.jpg
deleted file mode 100755
index 5314a4a6abfdf34d66b4764ec92e797eb302d8e2..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz3eg-pciec/images/board.jpg and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz3eg-pciec/index.html b/recipes-apps/python-webserver/files/uz3eg-pciec/index.html
deleted file mode 100644
index e3e0b8ab54e5e7d88acd0e6d274f92161afd171f..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/uz3eg-pciec/index.html
+++ /dev/null
@@ -1,88 +0,0 @@
-<!DOCTYPE html>
-<html>
-<head>
-    <title> Avnet Python WebServer Demo </title>
-    <link type="text/css" rel="stylesheet" href="css/main.css" />
-    <script>
-    </script>
-</head>
-
-
-<body>
-<iframe name="dummy" style="display:none;"></iframe>
-
-    <center>
-        <img src="images/Avnet_logo_tagline_rgb.png" > </img>
-		<br>
-		</br>
-        <img src="images/ultrazed.png">
-    </center>
-
-<div id="container">
-<b class="rtop">
-  <b class="r1"></b> <b class="r2"></b> <b class="r3"></b> <b class="r4"></b>
-</b>
-
-<h1>Avnet Python Web Server Demo</h1>
-
-<p> Hello! This is a demonstration of a simple Python embedded webserver. Using Python, a webserver can be easily embedded into your Linux system. A webserver provides an easy method to control or monitor the embedded platform via an Internet browser. </p>
-
-<h2> Controlling the Embedded System </h2>
-<p>
-This example is intended to illustrate how the functionality of the embedded system can be controlled from the browser.
-Here, the <a href="images/board.jpg" target="_blank">LED's on the board</a> can be switched on or off by clicking on the 'Set PL LEDs' button.
-</p>
-
-<center>
-    <form action="#" method="POST" target="dummy">
-	<fieldset>
-		<br>
-		</br>
-            <legend align="Center"><b>Changing LEDs &nbsp </b></legend>
-		<p> 
-			<label>PL LEDs &nbsp</label>
-			<select name="PLledSel" id = "PLledSel">
-                <option value = "0">Off</option>
-                <option value = "1">On</option>
-			</select>
-            <input type="submit" name="SETPLLED" value="SET PL LED">
-		</p>
-	</fieldset>
-    </form>
-</center>
-
-<h2> Performance Test Results </h2>
-<p> 
-These performance tests were running using the Bonnie++ utility to test a variety of sequential and random reads and writes on an attached SATA SSD and USB3 Flash drive.
-    <ul>
-        <li>Delkin 64GB SATA SSD <a href="html/sata_results.html" target="_blank"> test results</a></li>
-    </ul>
-</p>
-
-<h2> Documentation </h2>
-<p> 
-    <ul>
-        <li>UltraZed-EG SOM <a href="pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf" target="_blank"> product brief</a></li>
-        <li>UltraZed-EG PCIe Carrier Card <a href="pdfs/5081-PB-AES-ZU-PCIECC-G-V2d.pdf" target="_blank"> product brief</a> </li>
-        <li>Delkin Devices <a href="pdfs/Delkin_Devices_Product_Line.pdf" target="_blank"> product portfolio</a> </li>
-    </ul>
-</p>
-
-<h2> External Links </h2>
-<p> 
-    <i> (Note that these links point to locations not served by the embedded webserver)</i> 
-    <ul>
-        <li> <a href="https://www.element14.com/community/community/designcenter/zedboardcommunity/ultrazed/ultrazed-eg" target="_blank">UltraZed-EG</a> </li>
-        <li> <a href="http://www.xilinx.com"  target="_blank">Xilinx</a></li>
-        <li>More information about the <a href="https://www.coker.com.au/bonnie++/readme.html" target="_blank">Bonnie++ </a> performance test utility</li>
-        <li>A good <a href="https://www.jamescoyle.net/how-to/599-benchmark-disk-io-with-dd-and-bonnie" target="_blank">Bonnie++ howto </a> </li>
-    </ul>
-</p>
-
-
-<b class="rbottom">
-  <b class="r4"></b> <b class="r3"></b> <b class="r2"></b> <b class="r1"></b>
-</b>
-</div>
-</body>
-</html>
diff --git a/recipes-apps/python-webserver/files/uz3eg-pciec/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf b/recipes-apps/python-webserver/files/uz3eg-pciec/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf
deleted file mode 100644
index 2f979189201fecf2fa7896d6f0ab4574d3810433..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz3eg-pciec/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz3eg-pciec/pdfs/5081-PB-AES-ZU-PCIECC-G-V2d.pdf b/recipes-apps/python-webserver/files/uz3eg-pciec/pdfs/5081-PB-AES-ZU-PCIECC-G-V2d.pdf
deleted file mode 100644
index 029de1d73826fadb6963d092f7cde0e47c36f594..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz3eg-pciec/pdfs/5081-PB-AES-ZU-PCIECC-G-V2d.pdf and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz7ev-evcc/images/board.jpg b/recipes-apps/python-webserver/files/uz7ev-evcc/images/board.jpg
deleted file mode 100644
index 49be9142c7dbb3e192ef2a9f99c1f28ac9c5a4e0..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz7ev-evcc/images/board.jpg and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz7ev-evcc/index.html b/recipes-apps/python-webserver/files/uz7ev-evcc/index.html
deleted file mode 100644
index c62039fde21b85642fc529e8e6f04f19b20f2248..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/files/uz7ev-evcc/index.html
+++ /dev/null
@@ -1,88 +0,0 @@
-<!DOCTYPE html>
-<html>
-<head>
-    <title> Avnet Python WebServer Demo </title>
-    <link type="text/css" rel="stylesheet" href="css/main.css" />
-    <script>
-    </script>
-</head>
-
-
-<body>
-<iframe name="dummy" style="display:none;"></iframe>
-
-    <center>
-        <img src="images/Avnet_logo_tagline_rgb.png" > </img>
-		<br>
-		</br>
-        <img src="images/ultrazed.png">
-    </center>
-
-<div id="container">
-<b class="rtop">
-  <b class="r1"></b> <b class="r2"></b> <b class="r3"></b> <b class="r4"></b>
-</b>
-
-<h1>Avnet Python Web Server Demo</h1>
-
-<p> Hello! This is a demonstration of a simple Python embedded webserver. Using Python, a webserver can be easily embedded into your Linux system. A webserver provides an easy method to control or monitor the embedded platform via an Internet browser. </p>
-
-<h2> Controlling the Embedded System </h2>
-<p>
-This example is intended to illustrate how the functionality of the embedded system can be controlled from the browser.
-Here, the <a href="images/board.jpg" target="_blank">LED's on the board</a> can be switched on or off by clicking on the 'Set PL LEDs' button.
-</p>
-
-<center>
-    <form action="#" method="POST" target="dummy">
-	<fieldset>
-		<br>
-		</br>
-            <legend align="Center"><b>Changing LEDs &nbsp </b></legend>
-		<p> 
-			<label>PL LEDs &nbsp</label>
-			<select name="PLledSel" id = "PLledSel">
-                <option value = "0">Off</option>
-                <option value = "1">On</option>
-			</select>
-            <input type="submit" name="SETPLLED" value="SET PL LED">
-		</p>
-	</fieldset>
-    </form>
-</center>
-
-<h2> Performance Test Results </h2>
-<p> 
-These performance tests were running using the Bonnie++ utility to test a variety of sequential and random reads and writes on an attached SATA SSD and USB3 Flash drive.
-    <ul>
-        <li>Delkin 64GB SATA SSD <a href="html/sata_results.html" target="_blank"> test results</a></li>
-    </ul>
-</p>
-
-<h2> Documentation </h2>
-<p> 
-    <ul>
-        <li>UltraZed-EV SOM <a href="pdfs/5342-pb-ultrazed-ev-som-v1.pdf" target="_blank"> product brief</a></li>
-        <li>UltraZed-EV Starter Kit <a href="pdfs/5342-pb-ultrazed-ev-starter-kit-v1.pdf" target="_blank"> product brief</a> </li>
-        <li>Delkin Devices <a href="pdfs/Delkin_Devices_Product_Line.pdf" target="_blank"> product portfolio</a> </li>
-    </ul>
-</p>
-
-<h2> External Links </h2>
-<p> 
-    <i> (Note that these links point to locations not served by the embedded webserver)</i> 
-    <ul>
-        <li> <a href="https://www.element14.com/community/docs/DOC-91268" target="_blank">UltraZed-EV Starter Kit</a> </li>
-        <li> <a href="http://www.xilinx.com"  target="_blank">Xilinx</a></li>
-        <li>More information about the <a href="https://www.coker.com.au/bonnie++/readme.html" target="_blank">Bonnie++ </a> performance test utility</li>
-        <li>A good <a href="https://www.jamescoyle.net/how-to/599-benchmark-disk-io-with-dd-and-bonnie" target="_blank">Bonnie++ howto </a> </li>
-    </ul>
-</p>
-
-
-<b class="rbottom">
-  <b class="r4"></b> <b class="r3"></b> <b class="r2"></b> <b class="r1"></b>
-</b>
-</div>
-</body>
-</html>
diff --git a/recipes-apps/python-webserver/files/uz7ev-evcc/pdfs/5342-pb-ultrazed-ev-som-v1.pdf b/recipes-apps/python-webserver/files/uz7ev-evcc/pdfs/5342-pb-ultrazed-ev-som-v1.pdf
deleted file mode 100644
index f25a6960b7f9c815bf0a220af71c5e9463958dd5..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz7ev-evcc/pdfs/5342-pb-ultrazed-ev-som-v1.pdf and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz7ev-evcc/pdfs/5342-pb-ultrazed-ev-starter-kit-v1.pdf b/recipes-apps/python-webserver/files/uz7ev-evcc/pdfs/5342-pb-ultrazed-ev-starter-kit-v1.pdf
deleted file mode 100644
index cac0968656c8d05da8f04f32458505e0ab7c6d02..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz7ev-evcc/pdfs/5342-pb-ultrazed-ev-starter-kit-v1.pdf and /dev/null differ
diff --git a/recipes-apps/python-webserver/files/uz7ev-evcc/pdfs/board.jpg b/recipes-apps/python-webserver/files/uz7ev-evcc/pdfs/board.jpg
deleted file mode 100644
index 49be9142c7dbb3e192ef2a9f99c1f28ac9c5a4e0..0000000000000000000000000000000000000000
Binary files a/recipes-apps/python-webserver/files/uz7ev-evcc/pdfs/board.jpg and /dev/null differ
diff --git a/recipes-apps/python-webserver/python-webserver.bb b/recipes-apps/python-webserver/python-webserver.bb
deleted file mode 100644
index 341ea88f490e0104f3aa9c97d9084bb1f22ce192..0000000000000000000000000000000000000000
--- a/recipes-apps/python-webserver/python-webserver.bb
+++ /dev/null
@@ -1,141 +0,0 @@
-#
-# This file is the python-webserver recipe.
-#
-
-SUMMARY = "Simple python-webserver application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-COMPATIBLE_MACHINE = "uz|pz"
-
-# Packages
-RDEPENDS_${PN} += "\
-  python3-core \
-  python-core \
-    "
-    
-SRC_URI = "file://cgi.py \
-     file://index.html \
-     file://launch_server.sh \
-     file://server.py \
-     file://setup_gpio.sh \
-     file://stop_server.sh \
-     file://unexport_gpio.sh \
-     file://css/main.css \
-     file://html/sata_results.html \
-     file://html/usb3_results.html \
-     file://images/Avnet_logo_tagline_rgb.png \
-     file://images/favicon.ico \
-     file://images/board.jpg \
-     file://pdfs/Delkin_Devices_Product_Line.pdf \
-      "
-
-SRC_URI_append_uz = "\
-     file://images/ultrazed.png \
-      "
-
-SRC_URI_append_uz3eg-iocc = "\
-     file://pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf \
-     file://pdfs/5080-PB-AES-ZU-IOCC-G-V2e.pdf \
-      "
-SRC_URI_append_uz3eg-pciec = "\
-     file://pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf \
-     file://pdfs/5081-PB-AES-ZU-PCIECC-G-V2d.pdf \
-      "
-SRC_URI_append_uz7ev-evcc = "\
-     file://pdfs/5342-pb-ultrazed-ev-som-v1.pdf \
-     file://pdfs/5342-pb-ultrazed-ev-starter-kit-v1.pdf \
-      "
-
-SRC_URI_append_pz = "\
-     file://images/picozed.png \
-     file://pdfs/5048-PB-PDP-AES-Z7PZ-SOM-G-V2.pdf \
-     file://pdfs/PB-AES-PZCC-FMC-V2-G-V1.pdf \
-      "
-
-S = "${WORKDIR}"
-
-do_install() {
-       install -d ${D}/home/root/webserver
-       install -d ${D}/home/root/webserver/css
-       install -d ${D}/home/root/webserver/html
-       install -d ${D}/home/root/webserver/images
-       install -d ${D}/home/root/webserver/pdfs
-       install -m 0755 ${S}/cgi.py ${D}/home/root/webserver
-       install -m 0755 ${S}/index.html ${D}/home/root/webserver
-       install -m 0755 ${S}/launch_server.sh ${D}/home/root/webserver
-       install -m 0755 ${S}/server.py ${D}/home/root/webserver
-       install -m 0755 ${S}/setup_gpio.sh ${D}/home/root/webserver
-       install -m 0755 ${S}/stop_server.sh ${D}/home/root/webserver
-       install -m 0755 ${S}/unexport_gpio.sh ${D}/home/root/webserver
-       install -m 0755 ${S}/css/main.css ${D}/home/root/webserver/css
-       install -m 0755 ${S}/html/sata_results.html ${D}/home/root/webserver/html
-       install -m 0755 ${S}/html/usb3_results.html ${D}/home/root/webserver/html
-       install -m 0755 ${S}/images/Avnet_logo_tagline_rgb.png ${D}/home/root/webserver/images
-       install -m 0755 ${S}/images/board.jpg ${D}/home/root/webserver/images
-       install -m 0755 ${S}/images/favicon.ico ${D}/home/root/webserver/images
-       install -m 0755 ${S}/pdfs/Delkin_Devices_Product_Line.pdf ${D}/home/root/webserver/pdfs
-}
-
-do_install_append_uz () {
-       install -m 0755 ${S}/images/ultrazed.png ${D}/home/root/webserver/images
-}
-do_install_append_uz3eg-iocc () {
-       install -m 0755 ${S}/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf ${D}/home/root/webserver/pdfs
-       install -m 0755 ${S}/pdfs/5080-PB-AES-ZU-IOCC-G-V2e.pdf ${D}/home/root/webserver/pdfs
-}
-
-do_install_append_uz3eg-pciec () {
-       install -m 0755 ${S}/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf ${D}/home/root/webserver/pdfs
-       install -m 0755 ${S}/pdfs/5081-PB-AES-ZU-PCIECC-G-V2d.pdf ${D}/home/root/webserver/pdfs
-}
-
-do_install_append_uz7ev-evcc () {
-       install -m 0755 ${S}/pdfs/5342-pb-ultrazed-ev-som-v1.pdf ${D}/home/root/webserver/pdfs
-       install -m 0755 ${S}/pdfs/5342-pb-ultrazed-ev-starter-kit-v1.pdf ${D}/home/root/webserver/pdfs
-}
-
-do_install_append_pz () {
-       install -m 0755 ${S}/images/picozed.png ${D}/home/root/webserver/images
-       install -m 0755 ${S}/pdfs/5048-PB-PDP-AES-Z7PZ-SOM-G-V2.pdf ${D}/home/root/webserver/pdfs
-       install -m 0755 ${S}/pdfs/PB-AES-PZCC-FMC-V2-G-V1.pdf ${D}/home/root/webserver/pdfs
-}
-
-FILES_${PN} += "/home/root/webserver/cgi.py \
-           /home/root/webserver/index.html \
-           /home/root/webserver/launch_server.sh \
-           /home/root/webserver/server.py \
-           /home/root/webserver/setup_gpio.sh \
-           /home/root/webserver/stop_server.sh \
-           /home/root/webserver/unexport_gpio.sh \
-           /home/root/webserver/css/main.css \
-           /home/root/webserver/html/sata_results.html \
-           /home/root/webserver/html/usb3_results.html \
-           /home/root/webserver/images/Avnet_logo_tagline_rgb.png \
-           /home/root/webserver/images/board.jpg \
-           /home/root/webserver/images/favicon.ico \
-           /home/root/webserver/pdfs/Delkin_Devices_Product_Line.pdf \
-               "
-
-FILES_${PN}_append_uz = "\
-           /home/root/webserver/images/ultrazed.png \
-               "
-FILES_${PN}_append_uz3eg-iocc = "\
-           /home/root/webserver/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf \
-           /home/root/webserver/pdfs/5080-PB-AES-ZU-IOCC-G-V2e.pdf \
-               "
-FILES_${PN}_append_uz3eg-pciec = "\
-           /home/root/webserver/pdfs/5043-PB-AES-ZU3EG-1-SOM-G-V3.pdf \
-           /home/root/webserver/pdfs/5081-PB-AES-ZU-PCIECC-G-V2d.pdf \
-               "
-FILES_${PN}_append_uz7ev-evcc = "\
-           /home/root/webserver/pdfs/5342-pb-ultrazed-ev-som-v1.pdf \
-           /home/root/webserver/pdfs/5342-pb-ultrazed-ev-starter-kit-v1.pdf \
-               "
-
-FILES_${PN}_append_pz = "\
-           /home/root/webserver/images/picozed.png \
-           /home/root/webserver/pdfs/5048-PB-PDP-AES-Z7PZ-SOM-G-V2.pdf \
-           /home/root/webserver/pdfs/PB-AES-PZCC-FMC-V2-G-V1.pdf \
-               "
\ No newline at end of file
diff --git a/recipes-apps/user-led-test/.gdbinit b/recipes-apps/user-led-test/.gdbinit
deleted file mode 100644
index d59fb8d90efb393c83d35becbecddcfa493a5e67..0000000000000000000000000000000000000000
--- a/recipes-apps/user-led-test/.gdbinit
+++ /dev/null
@@ -1,2 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
diff --git a/recipes-apps/user-led-test/README b/recipes-apps/user-led-test/README
deleted file mode 100644
index 94f51db5d310aff3f4c01a3f1902f84c5078396f..0000000000000000000000000000000000000000
--- a/recipes-apps/user-led-test/README
+++ /dev/null
@@ -1,47 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-If you are developing your application from scratch, simply start editing the
-file user-led-test.c.
-
-You can easily import any existing application code by copying it into this 
-directory, and editing the automatically generated Makefile.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To build your application, simply run "petlainux-build -c rootfs/user-led-test".
-This command will build your application and will install your application
-into the target file system host copy.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
-To add extra source code files (for example, to split a large application into 
-multiple source files), add the relevant .o files to the list in the local 
-Makefile where indicated.  
-
-To have other files (for example application configuration files or scripts) 
-copied into the root file system, add addition lines under the "install:"
-target in the Makefile.  For example:
-
-    $(TARGETINST) myfile.conf /etc
-
-Copy the file myfile.conf from this directory into the /etc directory
-on the Embedded Linux filesystem).
-
-Another example:
-    (TARGETINST) -a "some text here" /etc/system.conf
-
-Add the line "some text here" to the /etc/system.conf file.
-
-See ${PETALINUX}/components/rootfs/targetroot-inst.sh for details and more options.
diff --git a/recipes-apps/user-led-test/files/Makefile b/recipes-apps/user-led-test/files/Makefile
deleted file mode 100644
index 67088a5b73a0a81a4f3a646a918ef572326319ee..0000000000000000000000000000000000000000
--- a/recipes-apps/user-led-test/files/Makefile
+++ /dev/null
@@ -1,17 +0,0 @@
-APP = user-led-test
-
-# Add any other object files to this list below
-APP_OBJS = linux_user_led_test.o
-
-all: build
-
-build: $(APP)
-
-$(APP): $(APP_OBJS)
-	$(CC) $(LDFLAGS) -o user-led-test $(APP_OBJS) $(LDLIBS)
-
-%.o: %.c
-	$(CC) -c $(CFLAGS) -o $@ $<
-
-clean:
-	-rm -f $(APP) *.elf *.gdb *.o
diff --git a/recipes-apps/user-led-test/files/linux_user_led_test.c b/recipes-apps/user-led-test/files/linux_user_led_test.c
deleted file mode 100755
index 643cce1d25a0acc68e55d1499357ccad5c458516..0000000000000000000000000000000000000000
--- a/recipes-apps/user-led-test/files/linux_user_led_test.c
+++ /dev/null
@@ -1,1437 +0,0 @@
-// ----------------------------------------------------------------------------
-//
-//        ** **        **          **  ****      **  **********  **********
-//       **   **        **        **   ** **     **  **              **
-//      **     **        **      **    **  **    **  **              **
-//     **       **        **    **     **   **   **  *********       **
-//    **         **        **  **      **    **  **  **              **
-//   **           **        ****       **     ** **  **              **
-//  **  .........  **        **        **      ****  **********      **
-//     ...........
-//                                     Reach Further
-//
-// ----------------------------------------------------------------------------
-//
-// This design is the property of Avnet.  Publication of this
-// design is not authorized without written consent from Avnet.
-//
-// Please direct any questions to the PicoZed community support forum:
-//    http://www.picozed.org/forum
-//
-// Product information is available at:
-//    http://www.picozed.org/product/picozed
-//
-// Disclaimer:
-//    Avnet, Inc. makes no warranty for the use of this code or design.
-//    This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-//    any errors, which may appear in this code, nor does it make a commitment
-//    to update the information contained herein. Avnet, Inc specifically
-//    disclaims any implied warranties of fitness for a particular purpose.
-//                     Copyright(c) 2013 Avnet, Inc.
-//                             All rights reserved.
-//
-//----------------------------------------------------------------------------
-//
-// Create Date:         Nov 16, 2016
-// Design Name:         LED and PB test application
-// Module Name:         linux_user_led_test.c
-// Project Name:        LED and PB test application
-// Target Devices:      Xilinx Zynq and Zynq UltraScale+ MPSoC
-// Hardware Boards:     UltraZed-EG SOM and UltraZed IO Carrier
-//                      UltraZed-EV SOM and EV Carrier Card
-//
-// Tool versions:       Xilinx Vivado 2016.2
-//						Petalinux 2016.2
-//
-// Description:         User LED test application for Linux.
-//
-// Dependencies:
-//
-// Revision:            Dec 04, 2013: 1.00 Initial version
-//                      Apr 06, 2016: 1.01 Updated to run under 2015.2
-//                                         PetaLinux tools
-//						Nov 16, 2016: 1.02 Updated to UltraZed Platform
-//                      Jan 04, 2018: 1.03 Updated for UltraZed-EV
-//
-//----------------------------------------------------------------------------
-
-#include <stdio.h>
-#include <fcntl.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-
-/* String formats used to build the file name path to specific GPIO
- * instances. */
-#define FILE_FORMAT_GPIO_PATH          "/sys/class/gpio"
-#define FILE_FORMAT_GPIO_EXPORT        "/export"
-#define FILE_FORMAT_GPIO_DIRECTION     "/direction"
-#define FILE_FORMAT_GPIO_VALUE         "/value"
-
-#define GPIO_PL_PB_OFFSET				493
-#define GPIO_LED_OFFSET					496
-
-/* The LEDx_GPIO_OFFSET and PBx_GPIO_OFFSET definitions are used to indicate
- * the relative offset from the base start of the EMIO GPIO user connections.
- * In a typical reference design, the User IO will be assigned all at once
- * to an EMIO connection and connected externally to via the
- * emio_user_tri_io[] bus in the XDC constraints file and so these offsets
- * here should match the offsets of the hardware constraints as well.
- */
-#define LED1_GPIO_OFFSET               ((GPIO_LED_OFFSET) + 0)
-#define LED2_GPIO_OFFSET               ((GPIO_LED_OFFSET) + 1)
-#define LED3_GPIO_OFFSET               ((GPIO_LED_OFFSET) + 2)
-#define LED4_GPIO_OFFSET               ((GPIO_LED_OFFSET) + 3)
-#define LED5_GPIO_OFFSET               ((GPIO_LED_OFFSET) + 4)
-#define LED6_GPIO_OFFSET               ((GPIO_LED_OFFSET) + 5)
-#define LED7_GPIO_OFFSET               ((GPIO_LED_OFFSET) + 6)
-#define LED8_GPIO_OFFSET               ((GPIO_LED_OFFSET) + 7)
-
-#define PB1_GPIO_OFFSET                ((GPIO_PL_PB_OFFSET) + 0)
-#define PB2_GPIO_OFFSET                ((GPIO_PL_PB_OFFSET) + 1)
-#define PB3_GPIO_OFFSET                ((GPIO_PL_PB_OFFSET) + 2)
-//TC #define PB4_GPIO_OFFSET                ((GPIO_PL_PB_OFFSET) + 3)
-
-static unsigned int direction = 1;
-
-int set_next_count_pattern(void)
-{
-	const int char_buf_size = 80;
-	static unsigned int count = 0;
-	
-	char gpio_setting[4];
-	
-	int test_result = 0;
-	char formatted_file_name[char_buf_size];
-
-    int check_led1_once = 0;
-    int check_led2_once = 0;
-    int check_led3_once = 0;
-    int check_led4_once = 0;
-    int check_led5_once = 0;
-    int check_led6_once = 0;
-    int check_led7_once = 0;
-    int check_led8_once = 0;
-
-    int led1_value = 0;
-    int led2_value = 0;
-    int led3_value = 0;
-    int led4_value = 0;
-    int led5_value = 0;
-    int led6_value = 0;
-    int led7_value = 0;
-    int led8_value = 0;
-
-	FILE  *fp_led1;
-	FILE  *fp_led2;
-	FILE  *fp_led3;
-	FILE  *fp_led4;
-	FILE  *fp_led5;
-	FILE  *fp_led6;
-	FILE  *fp_led7;
-	FILE  *fp_led8;
-
-	// Open the LED gpio value properties so that they can be read/written.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED1_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led1 = fopen(formatted_file_name, "r+");
-
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED2_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led2 = fopen(formatted_file_name, "r+");
-
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED3_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led3 = fopen(formatted_file_name, "r+");
-
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED4_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led4 = fopen(formatted_file_name, "r+");
-
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED5_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led5 = fopen(formatted_file_name, "r+");
-
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED6_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led6 = fopen(formatted_file_name, "r+");
-
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED7_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led7 = fopen(formatted_file_name, "r+");
-
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED8_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led8 = fopen(formatted_file_name, "r+");
-    
-	// Read the current value of the led2 GPIO.
-	fscanf(fp_led2, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		led2_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		led2_value = 0;
-
-	// Read the current value of the led3 GPIO.
-	fscanf(fp_led3, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		led3_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		led3_value = 0;
-
-	// Read the current value of the led4 GPIO.
-	fscanf(fp_led4, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		led4_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		led4_value = 0;
-
-	// Read the current value of the led5 GPIO.
-	fscanf(fp_led5, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		led5_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		led5_value = 0;
-
-	// Read the current value of the led6 GPIO.
-	fscanf(fp_led6, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		led6_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		led6_value = 0;
-
-	// Read the current value of the led7 GPIO.
-	fscanf(fp_led7, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		led7_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		led7_value = 0;
-
-	// Read the current value of the led8 GPIO.
-	fscanf(fp_led8, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		led8_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		led8_value = 0;
-
-
-	// Write test pattern to LEDs.
-	if ((count == 0) && ((direction == 0) || (direction == 4) || (direction == 5)))
-	{
-		strcpy(gpio_setting, "1");
-			if (direction == 0)
-		{
-			// Now begin sliding 'up'.
-			direction = 1;
-		}
-	}
-	else if (((count & 0x00000001) == 1) && ((direction == 2) || (direction == 3)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else
-	{
-		strcpy(gpio_setting, "0");
-	}
-
-	fwrite(&gpio_setting, sizeof(char), 1, fp_led1);
-
-    // Read the current value of the led1 GPIO.
-	fscanf(fp_led1, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1") & check_led1_once == 0)
-    {
-		led1_value = 1;
-        check_led1_once = 1;
-    }
-
-	fflush(fp_led1);
-
-
-	if ((count == 1) && ((direction == 0) || (direction == 1) || (direction == 4) || (direction == 5)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else if ((((count >> 1) & 0x00000001) == 1) && ((direction == 2) || (direction == 3)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else
-	{
-		strcpy(gpio_setting, "0");
-	}
-	
-
-	fwrite(&gpio_setting, sizeof(char), 1, fp_led2);
-
-    // Read the current value of the led2 GPIO.
-	fscanf(fp_led2, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1") & check_led2_once == 0)
-    {
-		led2_value = 1;
-        check_led2_once = 1;
-    }
-
-	fflush(fp_led2);
-
-	if ((count == 2) && ((direction == 0) || (direction == 1) || (direction == 4) || (direction == 5)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else if ((((count >> 2) & 0x00000001) == 1) && ((direction == 2) || (direction == 3)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else
-	{
-		strcpy(gpio_setting, "0");
-	}
-	
-	fwrite(&gpio_setting, sizeof(char), 1, fp_led3);
-
-    // Read the current value of the led3 GPIO.
-	fscanf(fp_led3, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1") & check_led3_once == 0)
-    {
-		led3_value = 1;
-        check_led3_once = 1;
-    }
-
-	fflush(fp_led3);
-
-	if ((count == 3) && ((direction == 0) || (direction == 1) || (direction == 4) || (direction == 5)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else if ((((count >> 3) & 0x00000001) == 1) && ((direction == 2) || (direction == 3)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else
-	{
-		strcpy(gpio_setting, "0");
-	}
-	
-	fwrite(&gpio_setting, sizeof(char), 1, fp_led4);
-
-    // Read the current value of the led4 GPIO.
-	fscanf(fp_led4, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1") & check_led4_once == 0)
-    {
-		led4_value = 1;
-        check_led4_once = 1;
-    }
-
-	fflush(fp_led4);
-
-	if ((count == 4) && ((direction == 0) || (direction == 1) || (direction == 4) || (direction == 5)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else if ((((count >> 4) & 0x00000001) == 1) && ((direction == 2) || (direction == 3)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else
-	{
-		strcpy(gpio_setting, "0");
-	}
-	
-	fwrite(&gpio_setting, sizeof(char), 1, fp_led5);
-
-    // Read the current value of the led5 GPIO.
-	fscanf(fp_led5, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1") & check_led5_once == 0)
-    {
-		led5_value = 1;
-        check_led5_once = 1;
-    }
-
-	fflush(fp_led5);
-
-	if ((count == 5) && ((direction == 0) || (direction == 1) || (direction == 4) || (direction == 5)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else if ((((count >> 5) & 0x00000001) == 1) && ((direction == 2) || (direction == 3)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else
-	{
-		strcpy(gpio_setting, "0");
-	}
-	
-	fwrite(&gpio_setting, sizeof(char), 1, fp_led6);
-
-    // Read the current value of the led6 GPIO.
-	fscanf(fp_led6, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1") & check_led6_once == 0)
-    {
-		led6_value = 1;
-        check_led6_once = 1;
-    }
-
-	fflush(fp_led6);
-
-	if ((count == 6) && ((direction == 0) || (direction == 1) || (direction == 4) || (direction == 5)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else if ((((count >> 6) & 0x00000001) == 1) && ((direction == 2) || (direction == 3)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else
-	{
-		strcpy(gpio_setting, "0");
-	}
-	
-	fwrite(&gpio_setting, sizeof(char), 1, fp_led7);
-
-    // Read the current value of the led7 GPIO.
-	fscanf(fp_led7, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1") & check_led7_once == 0)
-    {
-		led7_value = 1;
-        check_led7_once = 1;
-    }
-
-	fflush(fp_led7);
-
-	if ((count == 7) && ((direction == 1) || (direction == 4) || (direction == 5)))
-	{
-		strcpy(gpio_setting, "1");
-
-		if (direction == 1)
-		{
-			// Last LED in the set, begin sliding 'down'.
-			direction = 0;
-		}
-	}
-	else if ((((count >> 7) & 0x00000001) == 1) && ((direction == 2) || (direction == 3)))
-	{
-		strcpy(gpio_setting, "1");
-	}
-	else
-	{
-		strcpy(gpio_setting, "0");
-	}
-	
-	fwrite(&gpio_setting, sizeof(char), 1, fp_led8);
-
-    // Read the current value of the led8 GPIO.
-	fscanf(fp_led8, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1") & check_led8_once == 0)
-    {
-		led8_value = 1;
-        check_led8_once = 1;
-    }
-
-	fflush(fp_led8);
-
-	if (((direction == 1) & (count < 8)) ||
-		(direction == 2))
-	{
-		// Increment count for next time around.
-		count = count + 1;
-	}
-	else if ((direction == 0) ||
-	         (direction == 3))
-	{
-		// Decrement count for next time around.
-		count = count - 1;
-	}
-	else if (direction == 4)
-	{
-		// Increment count for next time around.
-		if (count == 7)
-		{
-			count = 0;
-		}
-		else
-		{
-			count = count + 1;
-		}
-	}
-	else if (direction == 5)
-	{
-		// Decrement count for next time around.
-		if (count == 0)
-		{
-			count = 7;
-		}
-		else
-		{
-			count = count - 1;
-		}
-	}
-	else
-	{
-		/*
-		 *  Something went wrong keeping track of direction, reset the
-		 *  direction to 'up'.
-		 */
-		direction = 1;
-		count = 0;
-	}
-
-	// Close the GPIO value property files.
-	fclose(fp_led1);
-	fclose(fp_led2);
-	fclose(fp_led3);
-	fclose(fp_led4);
-	fclose(fp_led5);
-	fclose(fp_led6);
-	fclose(fp_led7);
-	fclose(fp_led8);
-
-	// Concatenate the individual LED readings into a hex value
-/*
- *     test_result = (led8_value<<1) | led7_value;
-    test_result = (test_result<<1) | led6_value;
-    test_result = (test_result<<1) | led5_value;
-    test_result = (test_result<<1) | led4_value;
-    test_result = (test_result<<1) | led3_value;
-    test_result = (test_result<<1) | led2_value;
-    test_result = (test_result<<1) | led1_value;
-*/
-    test_result = (check_led8_once<<1) | check_led7_once;
-    test_result = (test_result<<1) | check_led6_once;
-    test_result = (test_result<<1) | check_led5_once;
-    test_result = (test_result<<1) | check_led4_once;
-    test_result = (test_result<<1) | check_led3_once;
-    test_result = (test_result<<1) | check_led2_once;
-    test_result = (test_result<<1) | check_led1_once;
-
-	return test_result;
-}
-
-int set_next_input_pattern(void)
-{
-	const int char_buf_size = 80;
-	char gpio_setting[4];
-	int test_result = 0;
-	char formatted_file_name[char_buf_size];
-    
-    int check_pb1_once = 0;
-    int check_pb2_once = 0;
-    int check_pb3_once = 0;
-
-	FILE  *fp_led1;
-	FILE  *fp_led2;
-	FILE  *fp_led3;
-	FILE  *fp_led4;
-	FILE  *fp_led5;
-	FILE  *fp_led6;
-	FILE  *fp_led7;
-	FILE  *fp_led8;
-	
-	FILE  *fp_pb1;
-	FILE  *fp_pb2;
-	FILE  *fp_pb3;
-//TC	FILE  *fp_pb4;
-
-	// Open the gpio value properties so that they can be read/written.
-
-	// Open the value property file for LED1.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED1_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led1 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for LED2.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED2_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led2 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for LED3.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED3_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led3 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for LED4.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED4_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led4 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for LED5.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED5_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led5 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for LED6.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED6_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led6 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for LED7.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED7_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led7 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for LED8.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, LED8_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_led8 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for PB1.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, PB1_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_pb1 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for PB2.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, PB2_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_pb2 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for PB3.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, PB3_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_pb3 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for PB4.
-/*TC
- * 	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, PB4_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_pb4 = fopen(formatted_file_name, "r+");
-*/
-
-	// Read the current value of the PB1 GPIO input.
-	fscanf(fp_pb1, "%s", gpio_setting);
-
-
-
-	// Determine whether the PB1 push button is being depressed or not.
-	if (!strcmp(gpio_setting, "1"))
-	{
-		check_pb1_once = 1;
-        
-        // Count LEDs up.
-		direction = 2;
-
-		fflush(fp_led1);
-		fflush(fp_led2);
-		fflush(fp_led3);
-		fflush(fp_led4);
-		fflush(fp_led5);
-		fflush(fp_led6);
-		fflush(fp_led7);
-		fflush(fp_led8);
-	}
-
-	// Read the current value of the PB2 GPIO input.
-	fscanf(fp_pb2, "%s", gpio_setting);
-
-	// Determine whether the PB2 push button is being depressed or not.
-	if (!strcmp(gpio_setting, "1"))
-	{
-		check_pb2_once = 1;
-
-		// Count LEDs down.
-		direction = 3;
-
-		fflush(fp_led1);
-		fflush(fp_led2);
-		fflush(fp_led3);
-		fflush(fp_led4);
-		fflush(fp_led5);
-		fflush(fp_led6);
-		fflush(fp_led7);
-		fflush(fp_led8);
-	}
-
-	// Read the current value of the PB3 GPIO input.
-	fscanf(fp_pb3, "%s", gpio_setting);
-
-	// Determine whether the PB3 push button is being depressed or not.
-	if (!strcmp(gpio_setting, "1"))
-	{
-		check_pb3_once = 1;
-
-		// Slide LED to the right.
-		direction = 4;
-
-		fflush(fp_led1);
-		fflush(fp_led2);
-		fflush(fp_led3);
-		fflush(fp_led4);
-		fflush(fp_led5);
-		fflush(fp_led6);
-		fflush(fp_led7);
-		fflush(fp_led8);
-	}
-
-	// Read the current value of the PB4 GPIO input.
-/*
- * 	fscanf(fp_pb4, "%s", gpio_setting);
-
-	// Determine whether the PL push button is being depressed or not.
-	if (!strcmp(gpio_setting, "1"))
-	{
-		// Slide LED to the left.
-		direction = 5;
-
-		fflush(fp_led1);
-		fflush(fp_led2);
-		fflush(fp_led3);
-		fflush(fp_led4);
-		fflush(fp_led5);
-		fflush(fp_led6);
-		fflush(fp_led7);
-		fflush(fp_led8);		
-	}
-*/
-
-	// This test always passes since it requires user interaction.
-	test_result = 0;
-
-	// Close the GPIO value property files.
-	fclose(fp_led1);
-	fclose(fp_led2);
-	fclose(fp_led3);
-	fclose(fp_led4);
-	fclose(fp_led5);
-	fclose(fp_led6);
-	fclose(fp_led7);
-	fclose(fp_led8);
-	fclose(fp_pb1);
-	fclose(fp_pb2);
-	fclose(fp_pb3);
-//TC	fclose(fp_pb4);
-
-    test_result = (check_pb3_once<<1) | check_pb2_once;
-    test_result = (test_result<<1) | check_pb1_once;
-
-	return test_result;
-}
-
-int main()
-{
-	char gpio_setting[4];
-	int test_result = 0;
-	int led_test_result = 0;
-	int pb_test_result = 0;
-    int leds_on = 0;
-    int pbs_pressed = 0;
-	const int char_buf_size = 80;
-	char formatted_file_name[char_buf_size];
-	FILE  *fp;
-
-	// Display the lab name in the application banner.
-	printf(" \n");
-	printf("***********************************************************\n");
-	printf("*                                                         *\n");
-	printf("*   UltraZed-EV EV Carrier Card LED and Push Button Tests *\n");
-	printf("*                                                         *\n");
-	printf("***********************************************************\n");
-	printf(" \n");
-
-	// Open the export file and write the PSGPIO number for each Pmod GPIO
-	// signal to the Linux sysfs GPIO export property, then close the file.
-	fp = fopen(FILE_FORMAT_GPIO_PATH FILE_FORMAT_GPIO_EXPORT, "w");
-	if (fp == NULL)
-	{
-		printf("Error opening /sys/class/gpio/export node\n");
-	}
-	else
-	{
-		// Set the value property for the export to the GPIO number for LED1.
-		snprintf(gpio_setting, 4, "%d", LED1_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for LED2.
-		snprintf(gpio_setting, 4, "%d", LED2_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-		
-		// Set the value property for the export to the GPIO number for LED3.
-		snprintf(gpio_setting, 4, "%d", LED3_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-		
-		// Set the value property for the export to the GPIO number for LED4.
-		snprintf(gpio_setting, 4, "%d", LED4_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for LED5.
-		snprintf(gpio_setting, 4, "%d", LED5_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for LED6.
-		snprintf(gpio_setting, 4, "%d", LED6_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for LED7.
-		snprintf(gpio_setting, 4, "%d", LED7_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for LED8.
-		snprintf(gpio_setting, 4, "%d", LED8_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-		
-		// Set the value property for the export to the GPIO number for PB1.
-		snprintf(gpio_setting, 4, "%d", PB1_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for PB2.
-		snprintf(gpio_setting, 4, "%d", PB2_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for PB3.
-		snprintf(gpio_setting, 4, "%d", PB3_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for PB4.
-/*TC
- * 		snprintf(gpio_setting, 4, "%d", PB4_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-*/
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for PB1.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, PB1_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", PB1_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", PB1_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for PB2.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, PB2_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", PB2_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-        fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", PB2_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for PB3.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, PB3_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", PB3_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", PB3_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for PB4.
-/*TC
- * 	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, PB4_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", PB4_GPIO_OFFSET);
-	}
-	else
-	{
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", PB4_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-
-			// Set the direction property to "in".
-			strcpy(gpio_setting, "in");
-			fwrite(&gpio_setting, sizeof(char), 2, fp);
-			fflush(fp);
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-*/
-
-	// Check the direction property of the PSGPIO number for LED1.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, LED1_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", LED1_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "out".
-		strcpy(gpio_setting, "out");
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", LED1_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "in"))
-		{
-			printf("INPUT\n");
-		}
-		else
-		{
-			printf("OUTPUT\n");
-		}
-		fclose(fp);
-	}
-	
-	// Check the direction property of the PSGPIO number for LED2.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, LED2_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", LED2_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "out".
-		strcpy(gpio_setting, "out");
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", LED2_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "in"))
-		{
-			printf("INPUT\n");
-					}
-		else
-		{
-			printf("OUTPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for LED3.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, LED3_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", LED3_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "out".
-		strcpy(gpio_setting, "out");
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", LED3_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "in"))
-		{
-			printf("INPUT\n");
-		}
-		else
-		{
-			printf("OUTPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for LED4.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, LED4_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", LED4_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "out".
-		strcpy(gpio_setting, "out");
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", LED4_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "in"))
-		{
-			printf("INPUT\n");
-		}
-		else
-		{
-			printf("OUTPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for LED5.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, LED5_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", LED5_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "out".
-		strcpy(gpio_setting, "out");
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", LED5_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "in"))
-		{
-			printf("INPUT\n");
-		}
-		else
-		{
-			printf("OUTPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for LED6.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, LED6_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", LED6_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "out".
-		strcpy(gpio_setting, "out");
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", LED6_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "in"))
-		{
-			printf("INPUT\n");
-		}
-		else
-		{
-			printf("OUTPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for LED7.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, LED7_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", LED7_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "out".
-		strcpy(gpio_setting, "out");
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", LED7_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "in"))
-		{
-			printf("INPUT\n");
-		}
-		else
-		{
-			printf("OUTPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the PSGPIO number for LED8.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, LED8_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", LED8_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "out".
-		strcpy(gpio_setting, "out");
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", LED8_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "in"))
-		{
-			printf("INPUT\n");
-		}
-		else
-		{
-			printf("OUTPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Perform LED pattern generation.
-	printf("LED Pattern Generation on UltraZed-EV EV Carrier Card\n");
-
-
-	// Perform PB tests to verify all LEDs turn on/off
-	printf(" \n");
-	printf("LED and PB switch test on UltraZed-EV EV Carrier\n");
-	printf("Press SW2, SW3, or SW4 to change the display pattern on the LEDs.\n");
-	printf("Pause here for 15 seconds to view the LEDs turn ON/OFF and press the PB switches.\n");
-	printf("All three PB switches must be pressed and all LEDs must turn on or the test will fail.\n");
-	printf(" \n");
-	
-    int i;
-    
-    for(i=0;i<160;i++) 
-    {
-		leds_on = set_next_count_pattern();
-        
-        led_test_result = led_test_result | leds_on;
-
-/*
-        printf("The LEDs that have been turned on are %x\n", led_test_result);
-
-        if (led_test_result == 0xff)
-        {
-            printf("All LEDs turn ON/OFF\n");
-            printf(" \n");
-        }
-*/        
-		pbs_pressed = set_next_input_pattern();
-
-        pb_test_result = pb_test_result | pbs_pressed;
-        
-/*
-        printf("The PBs that have been pressed are %x\n", pb_test_result);
-
-        if (pb_test_result == 0x7)
-        {
-            printf("All PBs have been pressed\n");
-            printf(" \n");
-        }
-*/        
-        if ((pb_test_result == 0x7) && (led_test_result == 0xff))
-        {
-            printf("All LEDs turn ON/OFF and all PBs have been pressed\n");
-            printf(" \n");
-            // wait here another second to watch the last selected PED display pattern
-            usleep(1000000);	
-            break;
-        }
- 
-		usleep(100000);	
-    }
-
-	printf("LED Pattern Generation and PB Test Complete...");
-	
-	if (led_test_result == 0xff & pb_test_result == 0x7)
-	{
-		printf("\033[32mPASSED\033[0m\n");
-        test_result = 0;
-	}
-	else
-	{
-		printf("\033[5mFAILED\033[0m\n");
-        test_result = -1;
-	}
-
-    exit(test_result);
-}
diff --git a/recipes-apps/user-led-test/user-led-test.bb b/recipes-apps/user-led-test/user-led-test.bb
deleted file mode 100644
index 8ea24e95fbd402b5b7db818cdddf154fb9b35183..0000000000000000000000000000000000000000
--- a/recipes-apps/user-led-test/user-led-test.bb
+++ /dev/null
@@ -1,27 +0,0 @@
-#
-# This file is the user-led-test recipe.
-#
-
-SUMMARY = "Simple user-led-test application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-COMPATIBLE_MACHINE = "uz7ev-evcc"
-
-SRC_URI = "file://linux_user_led_test.c \
-	   file://Makefile \
-		  "
-
-S = "${WORKDIR}"
-
-FILES_${PN} += "/home/root/*"
-
-do_compile() {
-	     oe_runmake
-}
-
-do_install() {
-	     install -d ${D}/home/root
-	     install -m 0755 user-led-test ${D}/home/root
-}
diff --git a/recipes-apps/user-switch-test/.gdbinit b/recipes-apps/user-switch-test/.gdbinit
deleted file mode 100644
index d59fb8d90efb393c83d35becbecddcfa493a5e67..0000000000000000000000000000000000000000
--- a/recipes-apps/user-switch-test/.gdbinit
+++ /dev/null
@@ -1,2 +0,0 @@
-# Load the PetaLinux SDK main gdbinit script
-source plnx_gdbinit
diff --git a/recipes-apps/user-switch-test/README b/recipes-apps/user-switch-test/README
deleted file mode 100644
index 53ae55a209e564d7fbcfcdeeed574114e35a894c..0000000000000000000000000000000000000000
--- a/recipes-apps/user-switch-test/README
+++ /dev/null
@@ -1,47 +0,0 @@
-PetaLinux User Application Template
-===================================
-
-This directory contains a PetaLinux user application created from a template.
-
-If you are developing your application from scratch, simply start editing the
-file user-switch-test.c.
-
-You can easily import any existing application code by copying it into this 
-directory, and editing the automatically generated Makefile.
-
-Before building the application, you will need to enable the application
-from PetaLinux menuconfig by running:
-    "petalinux-config -c rootfs"
-You will see your application in the "Applications --->" submenu.
-
-To build your application, simply run "petlainux-build -c rootfs/user-switch-test".
-This command will build your application and will install your application
-into the target file system host copy.
-
-You will also need to rebuild PetaLinux bootable images so that the images
-is updated with the updated target filesystem copy, run this command:
-    "petalinux-build -x package"
-
-You can also run one PetaLinux command to install the application to the
-target filesystem host copy and update the bootable images as follows:
-    "petalinux-build"
-
-To add extra source code files (for example, to split a large application into 
-multiple source files), add the relevant .o files to the list in the local 
-Makefile where indicated.  
-
-To have other files (for example application configuration files or scripts) 
-copied into the root file system, add addition lines under the "install:"
-target in the Makefile.  For example:
-
-    $(TARGETINST) myfile.conf /etc
-
-Copy the file myfile.conf from this directory into the /etc directory
-on the Embedded Linux filesystem).
-
-Another example:
-    (TARGETINST) -a "some text here" /etc/system.conf
-
-Add the line "some text here" to the /etc/system.conf file.
-
-See ${PETALINUX}/components/rootfs/targetroot-inst.sh for details and more options.
diff --git a/recipes-apps/user-switch-test/files/Makefile b/recipes-apps/user-switch-test/files/Makefile
deleted file mode 100644
index 3b565fc0664c3797b695a602a2a246051fd46d2d..0000000000000000000000000000000000000000
--- a/recipes-apps/user-switch-test/files/Makefile
+++ /dev/null
@@ -1,17 +0,0 @@
-APP = user-switch-test
-
-# Add any other object files to this list below
-APP_OBJS = linux_user_switch_test.o
-
-all: build
-
-build: $(APP)
-
-$(APP): $(APP_OBJS)
-	$(CC) $(LDFLAGS) -o user-switch-test $(APP_OBJS) $(LDLIBS)
-
-%.o: %.c
-	$(CC) -c $(CFLAGS) -o $@ $<
-
-clean:
-	-rm -f $(APP) *.elf *.gdb *.o
diff --git a/recipes-apps/user-switch-test/files/linux_user_switch_test.c b/recipes-apps/user-switch-test/files/linux_user_switch_test.c
deleted file mode 100755
index 2863288188585433cb7f8b0f56ea997bc784cfb1..0000000000000000000000000000000000000000
--- a/recipes-apps/user-switch-test/files/linux_user_switch_test.c
+++ /dev/null
@@ -1,744 +0,0 @@
-// ----------------------------------------------------------------------------
-//
-//        ** **        **          **  ****      **  **********  **********
-//       **   **        **        **   ** **     **  **              **
-//      **     **        **      **    **  **    **  **              **
-//     **       **        **    **     **   **   **  *********       **
-//    **         **        **  **      **    **  **  **              **
-//   **           **        ****       **     ** **  **              **
-//  **  .........  **        **        **      ****  **********      **
-//     ...........
-//                                     Reach Further
-//
-// ----------------------------------------------------------------------------
-//
-//  This design is the property of Avnet.  Publication of this
-//  design is not authorized without written consent from Avnet.
-// 
-//  Please direct any questions to the UltraZed community support forum:
-//     http://www.ultrazed.org/forum
-// 
-//  Product information is available at:
-//     http://www.ultrazed.org
-// 
-//  Disclaimer:
-//     Avnet, Inc. makes no warranty for the use of this code or design.
-//     This code is provided  "As Is". Avnet, Inc assumes no responsibility for
-//     any errors, which may appear in this code, nor does it make a commitment
-//     to update the information contained herein. Avnet, Inc specifically
-//     disclaims any implied warranties of fitness for a particular purpose.
-//                      Copyright(c) 2016 Avnet, Inc.
-//                              All rights reserved.
-//
-//----------------------------------------------------------------------------
-//
-// Create Date:         Nov 16, 2016
-// Design Name:         Switch test application
-// Module Name:         linux_user_switch_test.c
-// Project Name:        Switch test application
-// Target Devices:      Xilinx Zynq UltraScale+ MPSoC
-// Hardware Boards:     UltraZed-EG SOM and UltraZed IO Carrier
-//                      UltraZed-EV SOM and EV Carrier
-//
-// Tool versions:       Xilinx Vivado 2017.2
-//                      Petalinux 2017.2
-//
-// Description:         User Switch test application for Linux.
-//
-// Dependencies:
-//
-// Revision:            Nov 17, 2016: 1.00 Initial version
-//                      Jan 04, 2018: 1.10 Updated for UltraZed-EV
-//
-//----------------------------------------------------------------------------
-
-#include <stdio.h>
-#include <fcntl.h>
-#include <string.h>
-#include <stdlib.h>
-#include <unistd.h>
-
-/* String formats used to build the file name path to specific GPIO
- * instances. */
-#define FILE_FORMAT_GPIO_PATH          "/sys/class/gpio"
-#define FILE_FORMAT_GPIO_EXPORT        "/export"
-#define FILE_FORMAT_GPIO_DIRECTION     "/direction"
-#define FILE_FORMAT_GPIO_VALUE         "/value"
-
-#define GPIO_SWITCH_OFFSET				504
-
-/* The GPIO_OFFSET definitions are used to indicate
- * the relative offset from the base start of the EMIO GPIO user connections.
- * In a typical reference design, the User IO will be assigned all at once
- * to an EMIO connection and connected externally to via the
- * emio_user_tri_io[] bus in the XDC constraints file and so these offsets
- * here should match the offsets of the hardware constraints as well.
- */
-#define SWITCH1_GPIO_OFFSET		((GPIO_SWITCH_OFFSET) + 0)
-#define SWITCH2_GPIO_OFFSET		((GPIO_SWITCH_OFFSET) + 1)
-#define SWITCH3_GPIO_OFFSET		((GPIO_SWITCH_OFFSET) + 2)
-#define SWITCH4_GPIO_OFFSET		((GPIO_SWITCH_OFFSET) + 3)
-#define SWITCH5_GPIO_OFFSET		((GPIO_SWITCH_OFFSET) + 4)
-#define SWITCH6_GPIO_OFFSET		((GPIO_SWITCH_OFFSET) + 5)
-#define SWITCH7_GPIO_OFFSET		((GPIO_SWITCH_OFFSET) + 6)
-#define SWITCH8_GPIO_OFFSET		((GPIO_SWITCH_OFFSET) + 7)
-
-int switch_values(void)
-{
-	const int char_buf_size = 80;
-	char gpio_setting[8];
-	int test_result = 0;
-	char formatted_file_name[char_buf_size];
-
-	int sw1_value;
-	int sw2_value;
-	int sw3_value;
-	int sw4_value;
-	int sw5_value;
-	int sw6_value;
-	int sw7_value;
-	int sw8_value;
-
-	FILE  *fp_sw1;
-	FILE  *fp_sw2;
-	FILE  *fp_sw3;
-	FILE  *fp_sw4;
-	FILE  *fp_sw5;
-	FILE  *fp_sw6;
-	FILE  *fp_sw7;
-	FILE  *fp_sw8;
-
-	// Open the gpio value properties so that they can be read/written.
-
-	// Open the value property file for SW1.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, SWITCH1_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_sw1 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for SW2.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, SWITCH2_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_sw2 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for SW3.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, SWITCH3_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_sw3 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for SW4.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, SWITCH4_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_sw4 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for SW5.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, SWITCH5_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_sw5 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for SW6.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, SWITCH6_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_sw6 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for SW7.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, SWITCH7_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_sw7 = fopen(formatted_file_name, "r+");
-
-	// Open the value property file for SW8.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_VALUE, SWITCH8_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp_sw8 = fopen(formatted_file_name, "r+");
-
-	// Read the current value of the SW1 GPIO input.
-	fscanf(fp_sw1, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw1_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw1_value = 0;
-
-	// Read the current value of the SW2 GPIO input.
-	fscanf(fp_sw2, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw2_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw2_value = 0;
-
-	// Read the current value of the SW3 GPIO input.
-	fscanf(fp_sw3, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw3_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw3_value = 0;
-
-	// Read the current value of the SW4 GPIO input.
-	fscanf(fp_sw4, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw4_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw4_value = 0;
-
-	// Read the current value of the SW5 GPIO input.
-	fscanf(fp_sw5, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw5_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw5_value = 0;
-
-	// Read the current value of the SW6 GPIO input.
-	fscanf(fp_sw6, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw6_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw6_value = 0;
-
-	// Read the current value of the SW7 GPIO input.
-	fscanf(fp_sw7, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw7_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw7_value = 0;
-
-	// Read the current value of the SW8 GPIO input.
-	fscanf(fp_sw8, "%s", gpio_setting);
-
-	if (!strcmp(gpio_setting, "1"))
-		sw8_value = 1;
-	else if (!strcmp(gpio_setting, "0"))
-		sw8_value = 0;
-
-/*
- * 	printf(" \n");
-	printf("Switch1 Value: %d\n", sw1_value);
-	printf("Switch2 Value: %d\n", sw2_value);
-	printf("Switch3 Value: %d\n", sw3_value);
-	printf("Switch4 Value: %d\n", sw4_value);
-	printf("Switch5 Value: %d\n", sw5_value);
-	printf("Switch6 Value: %d\n", sw6_value);
-	printf("Switch7 Value: %d\n", sw7_value);
-	printf("Switch8 Value: %d\n", sw8_value);
-	printf(" \n");
-*/
-	// Concatenate the individual switch readings into a hex value
-    test_result = (sw8_value<<1) | sw7_value;
-    test_result = (test_result<<1) | sw6_value;
-    test_result = (test_result<<1) | sw5_value;
-    test_result = (test_result<<1) | sw4_value;
-    test_result = (test_result<<1) | sw3_value;
-    test_result = (test_result<<1) | sw2_value;
-    test_result = (test_result<<1) | sw1_value;
-    
-	// Close the GPIO value property files.
-	fclose(fp_sw1);
-	fclose(fp_sw2);
-	fclose(fp_sw3);
-	fclose(fp_sw4);
-	fclose(fp_sw5);
-	fclose(fp_sw6);
-	fclose(fp_sw7);
-	fclose(fp_sw8);
-			
-	return test_result;
-}
-
-int main()
-{
-	char gpio_setting[8];
-	int test_result = 0;
-	const int char_buf_size = 80;
-	char formatted_file_name[char_buf_size];
-	FILE  *fp;
-
-	// Display the lab name in the application banner.
-	printf(" \n");
-	printf("***********************************************************\n");
-	printf("*                                                         *\n");
-	printf("*      UltraZed-EV SOM + EV Carrier Card Switch Tests     *\n");
-	printf("*                                                         *\n");
-	printf("***********************************************************\n");
-	printf(" \n");
-
-	// Open the export file and write the PSGPIO number for each Pmod GPIO
-	// signal to the Linux sysfs GPIO export property, then close the file.
-	fp = fopen(FILE_FORMAT_GPIO_PATH FILE_FORMAT_GPIO_EXPORT, "w");
-	if (fp == NULL)
-	{
-		printf("Error opening /sys/class/gpio/export node\n");
-	}
-	else
-	{
-		// Set the value property for the export to the GPIO number for SWITCH1.
-		snprintf(gpio_setting, 4, "%d", SWITCH1_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for SWITCH2.
-		snprintf(gpio_setting, 4, "%d", SWITCH2_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for SWITCH3.
-		snprintf(gpio_setting, 4, "%d", SWITCH3_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for SWITCH4.
-		snprintf(gpio_setting, 4, "%d", SWITCH4_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for SWITCH5.
-		snprintf(gpio_setting, 4, "%d", SWITCH5_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for SWITCH6.
-		snprintf(gpio_setting, 4, "%d", SWITCH6_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for SWITCH7.
-		snprintf(gpio_setting, 4, "%d", SWITCH7_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		// Set the value property for the export to the GPIO number for SWITCH8.
-		snprintf(gpio_setting, 4, "%d", SWITCH8_GPIO_OFFSET);
-		fwrite(&gpio_setting, sizeof(char), 3, fp);
-		fflush(fp);
-
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number for SW1.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, SWITCH1_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", SWITCH1_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", SWITCH1_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number for SW2.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, SWITCH2_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", SWITCH2_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", SWITCH2_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number for SW3.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, SWITCH3_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", SWITCH3_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", SWITCH3_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number for SW4.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, SWITCH4_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", SWITCH4_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", SWITCH4_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number for SW5.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, SWITCH5_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", SWITCH5_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", SWITCH5_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number for SW6.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, SWITCH6_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", SWITCH6_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", SWITCH6_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number for SW7.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, SWITCH7_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", SWITCH7_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", SWITCH7_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Check the direction property of the GPIO number for SW8.
-	test_result = snprintf(formatted_file_name, (char_buf_size - 1), FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION, SWITCH8_GPIO_OFFSET);
-	if ((test_result < 0) ||
-		(test_result == (char_buf_size - 1)))
-	{
-		printf("Error formatting string, check the GPIO specified\r\n");
-		printf("%s", formatted_file_name);;
-		return -1;
-	}
-	fp = fopen(formatted_file_name, "r+");
-	if (fp == NULL)
-	{
-		printf("Error opening "FILE_FORMAT_GPIO_PATH"/gpio%d"FILE_FORMAT_GPIO_DIRECTION" node\n", SWITCH8_GPIO_OFFSET);
-	}
-	else
-	{
-		// Set the direction property to "in".
-		strcpy(gpio_setting, "in");
-		fwrite(&gpio_setting, sizeof(char), 2, fp);
-		fflush(fp);
-
-		fscanf(fp, "%s", gpio_setting);
-		printf("gpio%d set as ", SWITCH8_GPIO_OFFSET);
-
-		// Display whether the GPIO is set as input or output.
-		if (!strcmp(gpio_setting, "out"))
-		{
-			printf("OUTPUT\n");
-		}
-		else
-		{
-			printf("INPUT\n");
-		}
-		fclose(fp);
-	}
-
-	// Perform switch tests to verify all switches toggle
-	printf(" \n");
-	printf("Switch Test on UltraZed-EV EV Carrier\n");
-	printf("Make sure all switches are OFF (DOWN POSITION)\n");
-	printf("Pause here up to 15 seconds to turn the switches OFF (if necessary)\n");
-	printf(" \n");
-	
-    int i;
-    int new_sw_value = 0;
-    int old_sw_value = 0;
-    int init_sw_value = 0;
-    
-    init_sw_value = switch_values();
-        
-    for(i=0;i<16;i++) {
-        new_sw_value = switch_values();
-        
-        if (new_sw_value != old_sw_value)
-        {
-            printf("DIP switch value is set to %x \n",new_sw_value);
-        }
-
-        if (new_sw_value == 0x00)
-        {
-            printf(" \n");
-            printf("All switches turned OFF\n");
-            break;
-        }
-        
-        if ((i == 15) && (init_sw_value == new_sw_value))
-        {
-            printf(" \n");
-            printf("No switches changed state\n");
-            printf(" \n");
-            printf("Switch Test complete (or time expired)...\n");
-            printf(" \n");
-            printf("\033[5mFAILED\033[0m\n");
-            test_result = -1;
-            exit(test_result);
-        }
-
-        old_sw_value = new_sw_value;
-		usleep(1000000);	
-    }
-
-    
-	printf(" \n");
-	printf("Toggle all switches ON (UP POSITION)!\n");
-	printf("Look for switch that is stuck, ie - no toggle on switch!\n");
-	printf("Pause here 15 seconds (or until all switches have toggled) to change the switches state\n");
-	printf(" \n");
-
-    for(i=0;i<16;i++) {
-        new_sw_value = switch_values();
-        
-        if (new_sw_value != old_sw_value)
-        {
-            printf("DIP switch value has changed to %x \n",new_sw_value);
-        }
-
-        if (new_sw_value == 0xff)
-        {
-            printf(" \n");
-            printf("All switches changed state\n");
-            break;
-        }
-        
-        old_sw_value = new_sw_value;
-		usleep(1000000);	
-    }
-    
-	printf(" \n");
-	printf("Switch Test complete (or time expired)...\n");
-	printf(" \n");
-	
-	if (new_sw_value == 0xff)
-	{
-		printf("\033[32mPASSED\033[0m\n");
-        test_result = 0;
-    	printf(" \n");
-	}
-	else
-	{
-		printf("\033[5mFAILED\033[0m\n");
-        test_result = -1;
-		printf(" \n");
-	}
-    exit(test_result);
-}
diff --git a/recipes-apps/user-switch-test/user-switch-test.bb b/recipes-apps/user-switch-test/user-switch-test.bb
deleted file mode 100644
index b0eb9b1caf79065a2f723456f3695dda4f158da9..0000000000000000000000000000000000000000
--- a/recipes-apps/user-switch-test/user-switch-test.bb
+++ /dev/null
@@ -1,27 +0,0 @@
-#
-# This file is the user-switch-test recipe.
-#
-
-SUMMARY = "Simple user-switch-test application"
-SECTION = "PETALINUX/apps"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-COMPATIBLE_MACHINE = "uz7ev-evcc"
-
-SRC_URI = "file://linux_user_switch_test.c \
-	   file://Makefile \
-		  "
-
-S = "${WORKDIR}"
-
-FILES_${PN} += "/home/root/*"
-
-do_compile() {
-	     oe_runmake
-}
-
-do_install() {
-	     install -d ${D}/home/root
-	     install -m 0755 user-switch-test ${D}/home/root
-}
diff --git a/recipes-bsp/device-tree/files/u96v2-sbc/system-bsp.dtsi b/recipes-bsp/device-tree/files/u96v2-sbc/system-bsp.dtsi
index d80b316c7e1d70607834d801f34cd3d0b58bce7c..e0cccb39125dd5ea183724864f6d4b5376b2f004 100644
--- a/recipes-bsp/device-tree/files/u96v2-sbc/system-bsp.dtsi
+++ b/recipes-bsp/device-tree/files/u96v2-sbc/system-bsp.dtsi
@@ -32,31 +32,31 @@
 };
 
 &amba {
-	axi_intc_0: axi-interrupt-ctrl {
-		#interrupt-cells = <2>;
-		compatible = "xlnx,xps-intc-1.00.a";
-		interrupt-controller;
-		reg = <0x0 0xA0090000 0x0 0x1000>;
-		xlnx,kind-of-intr = <0x0>;
-		xlnx,num-intr-inputs = <0x20>;
-		interrupt-parent = <&gic>;
-		// connected at PS interrupt offset [6] (89+6=95) 
-		interrupts = <0 95 4>;
-	};
-
-	zyxclmm_drm {
-		compatible = "xlnx,zocl";
-		status = "okay";
-		interrupt-parent = <&axi_intc_0>;
-		interrupts = <0  4>, <1  4>, <2  4>, <3  4>,
-			     <4  4>, <5  4>, <6  4>, <7  4>,
-			     <8  4>, <9  4>, <10 4>, <11 4>,
-			     <12 4>, <13 4>, <14 4>, <15 4>,
-			     <16 4>, <17 4>, <18 4>, <19 4>,
-			     <20 4>, <21 4>, <22 4>, <23 4>,
-			     <24 4>, <25 4>, <26 4>, <27 4>,
-			     <28 4>, <29 4>, <30 4>, <31 4>;
-	};
+	//axi_intc_0: axi-interrupt-ctrl {
+	//	#interrupt-cells = <2>;
+	//	compatible = "xlnx,xps-intc-1.00.a";
+	//	interrupt-controller;
+	//	reg = <0x0 0xA0090000 0x0 0x1000>;
+	//	xlnx,kind-of-intr = <0x0>;
+	//	xlnx,num-intr-inputs = <0x20>;
+	//	interrupt-parent = <&gic>;
+	//	// connected at PS interrupt offset [6] (89+6=95) 
+	//	interrupts = <0 95 4>;
+	//};
+
+	//zyxclmm_drm {
+	//	compatible = "xlnx,zocl";
+	//	status = "okay";
+	//	interrupt-parent = <&axi_intc_0>;
+	//	interrupts = <0  4>, <1  4>, <2  4>, <3  4>,
+	//		     <4  4>, <5  4>, <6  4>, <7  4>,
+	//		     <8  4>, <9  4>, <10 4>, <11 4>,
+	//		     <12 4>, <13 4>, <14 4>, <15 4>,
+	//		     <16 4>, <17 4>, <18 4>, <19 4>,
+	//		     <20 4>, <21 4>, <22 4>, <23 4>,
+	//		     <24 4>, <25 4>, <26 4>, <27 4>,
+	//		     <28 4>, <29 4>, <30 4>, <31 4>;
+	//};
 };
 
 &uart0 {
diff --git a/recipes-connectivity/connman/connman_%.bbappend b/recipes-connectivity/connman/connman_%.bbappend
deleted file mode 100644
index 2892bb0619a37de2e0d73c9b0ff9cd2bcead48fa..0000000000000000000000000000000000000000
--- a/recipes-connectivity/connman/connman_%.bbappend
+++ /dev/null
@@ -1,11 +0,0 @@
-FILESEXTRAPATHS_prepend := "${THISDIR}/files:"
-
-SRC_URI_append = " file://main.conf \
-"
-
-do_install_append () {
-    install -d ${D}${sysconfdir}/connman
-    install -m 0755 ${WORKDIR}/main.conf ${D}${sysconfdir}/connman/
-}
-
-FILES_${PN} += "${sysconfdir}/main.conf"
diff --git a/recipes-connectivity/connman/files/main.conf b/recipes-connectivity/connman/files/main.conf
deleted file mode 100644
index cb6e9d05b28e56e9f22b6311f349c79c4f8e4675..0000000000000000000000000000000000000000
--- a/recipes-connectivity/connman/files/main.conf
+++ /dev/null
@@ -1,2 +0,0 @@
-[General]
-NetworkInterfaceBlacklist=p2p
diff --git a/recipes-connectivity/wpa-supplicant/files/wpa-supplicant.sh b/recipes-connectivity/wpa-supplicant/files/wpa-supplicant.sh
deleted file mode 100644
index 586fe35fa6e26fb5004d41ca6b0e0851b22dadad..0000000000000000000000000000000000000000
--- a/recipes-connectivity/wpa-supplicant/files/wpa-supplicant.sh
+++ /dev/null
@@ -1,90 +0,0 @@
-#!/bin/sh
-
-
-WPA_SUP_BIN="/usr/sbin/wpa_supplicant"
-WPA_SUP_PNAME="wpa_supplicant"
-WPA_SUP_PIDFILE="/var/run/wpa_supplicant.$IFACE.pid"
-WPA_COMMON_CTRL_IFACE="/var/run/wpa_supplicant"
-WPA_SUP_OPTIONS="-B -P $WPA_SUP_PIDFILE -i $IFACE"
-
-VERBOSITY=0
-
-if [ -n "$IF_WPA_CONF" ]; then
-	if [ -s "$IF_WPA_CONF" ]; then
-		WPA_SUP_CONF="-c $IF_WPA_CONF"
-	fi
-
-	# enable d-bus interface
-	WPA_SUP_CONF="$WPA_SUP_CONF -u"
-else
-	exit 0
-fi
-
-if [ ! -x "$WPA_SUP_BIN" ]; then
-
-	if [ "$VERBOSITY" = "1" ]; then
-		echo "$WPA_SUP_PNAME: binaries not executable or missing from $WPA_SUP_BIN"
-	fi
-
-	exit 1
-fi
-
-if [ "$MODE" = "start" ] ; then
-	# driver type of interface, defaults to wext when undefined
-	if [ -s "/etc/wpa_supplicant/driver.$IFACE" ]; then
-		IF_WPA_DRIVER=$(cat "/etc/wpa_supplicant/driver.$IFACE")
-	elif [ -z "$IF_WPA_DRIVER" ]; then
-
-		if [ "$VERBOSITY" = "1" ]; then
-			echo "$WPA_SUP_PNAME: wpa-driver not provided, using \"wext\""
-		fi
-
-		IF_WPA_DRIVER="wext"
-	fi
-
-	# if we have passed the criteria, start wpa_supplicant
-	if [ -n "$WPA_SUP_CONF" ]; then
-
-		if [ "$VERBOSITY" = "1" ]; then
-			echo "$WPA_SUP_PNAME: $WPA_SUP_BIN $WPA_SUP_OPTIONS $WPA_SUP_CONF -D $IF_WPA_DRIVER"
-		fi
-
-		start-stop-daemon --start --quiet \
-			--name $WPA_SUP_PNAME --startas $WPA_SUP_BIN --pidfile $WPA_SUP_PIDFILE \
-			--  $WPA_SUP_OPTIONS $WPA_SUP_CONF -D $IF_WPA_DRIVER
-	fi
-
-	# if the interface socket exists, then wpa_supplicant was invoked successfully
-	if [ -S "$WPA_COMMON_CTRL_IFACE/$IFACE" ]; then
-
-		if [ "$VERBOSITY" = "1" ]; then
-			echo "$WPA_SUP_PNAME: ctrl_interface socket located at $WPA_COMMON_CTRL_IFACE/$IFACE"
-		fi
-
-		exit 0
-
-	fi
-
-elif [ "$MODE" = "stop" ]; then
-
-	if [ -f "$WPA_SUP_PIDFILE" ]; then
-
-		if [ "$VERBOSITY" = "1" ]; then
-			echo "$WPA_SUP_PNAME: terminating $WPA_SUP_PNAME daemon"
-		fi
-
-		start-stop-daemon --stop --quiet \
-			--pidfile	$WPA_SUP_PIDFILE
-
-		if [ -S "$WPA_COMMON_CTRL_IFACE/$IFACE" ]; then
-			rm -f $WPA_COMMON_CTRL_IFACE/$IFACE
-		fi
-
-		if [ -f "$WPA_SUP_PIDFILE" ]; then
-			rm -f $WPA_SUP_PIDFILE
-		fi
-	fi
-
-fi
-
-exit 0
diff --git a/recipes-connectivity/wpa-supplicant/files/wpa_supplicant.conf-sane b/recipes-connectivity/wpa-supplicant/files/wpa_supplicant.conf-sane
deleted file mode 100644
index 458a56b9c4e76f121578b899cbe53090b1f19ab1..0000000000000000000000000000000000000000
--- a/recipes-connectivity/wpa-supplicant/files/wpa_supplicant.conf-sane
+++ /dev/null
@@ -1,3 +0,0 @@
-ctrl_interface=/var/run/wpa_supplicant
-ctrl_interface_group=0
-update_config=1
diff --git a/recipes-connectivity/wpa-supplicant/wpa-supplicant_%.bbappend b/recipes-connectivity/wpa-supplicant/wpa-supplicant_%.bbappend
deleted file mode 100644
index 295288b563843a9e822eea8dcec544b36542bdd3..0000000000000000000000000000000000000000
--- a/recipes-connectivity/wpa-supplicant/wpa-supplicant_%.bbappend
+++ /dev/null
@@ -1,5 +0,0 @@
-FILESEXTRAPATHS_prepend := "${THISDIR}/files:"
-
-do_install_prepend () {
-    sed -i 's/^\(Exec=.*\)$/#\1/g' ${S}/wpa_supplicant/dbus/fi.w1.wpa_supplicant1.service
-}
diff --git a/recipes-core/base-files/base-files_%.bbappend b/recipes-core/base-files/base-files_%.bbappend
deleted file mode 100644
index b964cfd053378da35a3f32b1083d443bb07c7077..0000000000000000000000000000000000000000
--- a/recipes-core/base-files/base-files_%.bbappend
+++ /dev/null
@@ -1,8 +0,0 @@
-do_install_append_uz7ev-evcc-hdmi () {
-	echo "alias ls='ls --color=auto'" >> ${D}${sysconfdir}/profile
-	echo "alias ll='ls --color=auto -l'" >> ${D}${sysconfdir}/profile
-	echo "alias la='ls --color=auto -la'" >> ${D}${sysconfdir}/profile
-	echo "alias modetest='modetest -M xlnx'" >> ${D}${sysconfdir}/profile
-	echo "alias modetest-dp='modetest -D fd4a0000.zynqmp-display'" >> ${D}${sysconfdir}/profile
-	echo "alias modetest-hdmi='modetest -D b0050000.v_mix'" >> ${D}${sysconfdir}/profile
-}
diff --git a/recipes-core/busybox/busybox/ftpd.cfg b/recipes-core/busybox/busybox/ftpd.cfg
deleted file mode 100644
index 6b9437c65a06e7b8ed37c71b2a33d41eccd7503f..0000000000000000000000000000000000000000
--- a/recipes-core/busybox/busybox/ftpd.cfg
+++ /dev/null
@@ -1,3 +0,0 @@
-CONFIG_FTPD=y
-CONFIG_FEATURE_FTPD_WRITE=y
-CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST=y
diff --git a/recipes-core/busybox/busybox_1.%.bbappend b/recipes-core/busybox/busybox_1.%.bbappend
deleted file mode 100644
index e86bd111fb2ea887cdcdf8e5c33397784ae3ebc6..0000000000000000000000000000000000000000
--- a/recipes-core/busybox/busybox_1.%.bbappend
+++ /dev/null
@@ -1,2 +0,0 @@
-FILESEXTRAPATHS_prepend := "${THISDIR}/files:"
-FILESEXTRAPATHS_prepend := "${THISDIR}/busybox:"
diff --git a/recipes-core/busybox/files/inetd.conf b/recipes-core/busybox/files/inetd.conf
deleted file mode 100644
index 2287c8f6909cf8a0949f16d2aa0c2439f8fcefbe..0000000000000000000000000000000000000000
--- a/recipes-core/busybox/files/inetd.conf
+++ /dev/null
@@ -1,22 +0,0 @@
-#/etc/inetd.conf:  see inetd(8) for further informations.
-#
-# Internet server configuration database
-#
-# If you want to disable an entry so it isn't touched during
-# package updates just comment it out with a single '#' character.
-#
-# <service_name> <sock_type> <proto> <flags> <user> <server_path> <args>
-#
-#:INTERNAL: Internal services
-#echo          stream  tcp     nowait  root    internal
-#echo          dgram   udp     wait    root    internal
-#chargen       stream  tcp     nowait  root    internal
-#chargen       dgram   udp     wait    root    internal
-#discard               stream  tcp     nowait  root    internal
-#discard               dgram   udp     wait    root    internal
-#daytime               stream  tcp     nowait  root    internal
-#daytime       dgram   udp     wait    root    internal
-#time          stream  tcp     nowait  root    internal
-#time          dgram   udp     wait    root    internal
-telnet	stream	tcp	nowait	root	telnetd	telnetd -i
-ftp	stream	tcp	nowait	root	ftpd	ftpd -w
diff --git a/recipes-core/images/avnet-image-full.inc b/recipes-core/images/avnet-image-full.inc
index e735b2265b4fca4879bdc95a99a015270ad67cdb..cf9324a7954f0dad20d85623e262337caf805863 100644
--- a/recipes-core/images/avnet-image-full.inc
+++ b/recipes-core/images/avnet-image-full.inc
@@ -3,231 +3,43 @@ require recipes-core/images/petalinux-image-common.inc
 # append what's already defined by petalinux (build/conf/plnxtool.conf)
 
 IMAGE_INSTALL_append_zynq = "\
-        bc \
-        bonnie++ \
-        bridge-utils \
-        coreutils \
-        ethtool \
-        haveged \
-        hdparm \
-        i2c-tools \
-        i2c-tools-misc \
-        i2csensor \
-        iperf3 \
-        iw \
-        kernel-modules \
-        mtd-utils \
-        nano \
-        opencl-clhpp-dev \
-        opencl-headers-dev \
-        openssh \
-        openssh-scp \
-        openssh-sftp-server \
-        openssh-sshd \
-        packagegroup-core-boot \
-        run-postinsts \
-        sbc \
-        tcf-agent \
-        udev-extraconf \
-        usbutils \
-        xrt \
-        xrt-dev \
-        zocl \
 "
 
 IMAGE_INSTALL_append_zynqmp = "\
-        bc \
-        bonnie++ \
-        bridge-utils \
-        cmake \
-        coreutils \
-        dnf \
-        e2fsprogs \
-        e2fsprogs-resize2fs \
-        e2fsprogs-e2fsck \
-        e2fsprogs-mke2fs \
-        ethtool \
-        fpga-manager-script \
-        haveged \
-        hdparm \
-        hellopm \
-        i2c-tools \
-        i2c-tools-misc \
-        iperf3 \
-        json-c \
-        kernel-modules \
-        libpython3 \
-        lmsensors-sensorsdetect \
-        mesa-megadriver \
-        mtd-utils \
-        nano \
-        opencl-clhpp-dev \
-        opencl-headers-dev \
-        openssh \
-        openssh-scp \
-        openssh-sftp-server \
-        openssh-sshd \
-        packagegroup-core-boot \
-        packagegroup-petalinux-gstreamer \
-        packagegroup-petalinux-lmsensors \
-        packagegroup-petalinux-matchbox \
-        packagegroup-petalinux-opencv \
-        packagegroup-petalinux-opencv-dev \
-        packagegroup-petalinux-python-modules \
-        packagegroup-petalinux-self-hosted \
-        packagegroup-petalinux-v4lutils \
-        packagegroup-petalinux-vitisai \
-        packagegroup-petalinux-vitisai-dev \
-        packagegroup-petalinux-x11 \
-        parted \
-        pciutils \
-        pmic-prog \
-        python3 \
-        python3-pip \
-        python-pyserial \
-        run-postinsts \
-        tcf-agent \
-        udev-extraconf \
-        usbutils \
-        util-linux-mkfs \
-        watchdog-init \
-        xrt \
-        xrt-dev \
-        zocl \
 "
 
 IMAGE_INSTALL_append_u96v2-sbc = "\
-        bluez5 \
-        git \
-        iw \
-        libftdi \
         openamp-fw-echo-testd \
         openamp-fw-mat-muld \
         openamp-fw-rpc-demo \
-        packagegroup-base-extended \
-        packagegroup-petalinux \
-        packagegroup-petalinux-96boards-sensors \
-        packagegroup-petalinux-benchmarks \
-        packagegroup-petalinux-openamp \
-        packagegroup-petalinux-ultra96-webapp \
-        packagegroup-petalinux-utils \
-        ultra96-ap-setup \
-        ultra96-misc \
-        ultra96-radio-leds \
-        ultra96-wpa \
-        usb-gadget-ethernet \
         wilc3000-fw \
         wilc \
 "
 
 IMAGE_INSTALL_append_uz = "\
-        blinky \
-        blinky-init \
-        libdrm \
-        libdrm-kms \
-        libdrm-tests \
-        libstdc++ \
-        libv4l \
-        mac-eeprom-config \
-        mac-eeprom-config-init \
-        media-ctl \
-        pciutils \
-        performance-tests \
-        python-webserver \
-        python-webserver-init \
-        python3 \
-        python3-core \
-        python3-dbus \
-        python3-pygobject \
-        yavta \
 "
 
 IMAGE_INSTALL_append_uz7ev-evcc = "\
-        user-led-test \
-        user-switch-test \
 "
 
 IMAGE_INSTALL_remove_uz7ev-evcc-hdmi = "\
-        blinky \
-        blinky-init \
-        python-webserver \
-        python-webserver-init \
-        user-led-test \
-        user-switch-test \
 "
 
 IMAGE_INSTALL_append_uz7ev-evcc-hdmi = "\
-    hdmi-utils \
-    kernel-module-hdmi \
 "
 
 IMAGE_INSTALL_append_minized-sbc = "\
-        bluez5 \
-        bluez5-doc \
-        bluez5-obex \
-        bridge-utils \
-        dialog-control \
-        e2fsprogs \
-        e2fsprogs-resize2fs \
-        e2fsprogs-e2fsck \
-        e2fsprogs-mke2fs \
-        get-gpio-offsets \
-        glibc \
-        hostapd \
-        libogg \
-        libpulse \
-        libpulsecommon \
-        libpulsecore \
-        libvorbis \
-        lis2ds \
-        minized-misc \
-        minized-wireless \
-        parted \
-        pulseaudio-misc \
-        pulseaudio-module-bluetooth-discover \
-        pulseaudio-module-bluetooth-policy \
-        pulseaudio-module-bluez5-device \
-        pulseaudio-module-bluez5-discover \
-        pulseaudio-module-switch-on-connect \
-        pulseaudio-server \
-        pulseaudio \
-        util-linux-mkfs \
-        wpa-supplicant \
 "
 
 IMAGE_INSTALL_append_mz = "\
 "
 
 IMAGE_INSTALL_append_pz = "\
-        blinky-init \
-        blinky \
-        mac-eeprom-config-init \
-        mac-eeprom-config \
-        e2fsprogs \
-        e2fsprogs-resize2fs \
-        e2fsprogs-e2fsck \
-        e2fsprogs-mke2fs \
-        parted \
-        pciutils \
-        performance-tests \
-        python-webserver-init \
-        python-webserver \
-        python3 \
-        python3-core \
-        python3-dbus \
-        python3-pygobject \
-        util-linux-mkfs \
 "
 
 COMMON_FEATURES_append_zynqmp = "\
-        debug-tweaks \
-        hwcodecs \
-        package-management \
-        ssh-server-openssh \
 "
 
 COMMON_FEATURES_append_zynq = "\
-        hwcodecs \
-        ssh-server-openssh \
 "
 
diff --git a/recipes-core/init-ifupdown/files/interfaces b/recipes-core/init-ifupdown/files/interfaces
deleted file mode 100644
index 28336f30eaeca2bc6ef7fffa144c55b96628aa08..0000000000000000000000000000000000000000
--- a/recipes-core/init-ifupdown/files/interfaces
+++ /dev/null
@@ -1,11 +0,0 @@
-# /etc/network/interfaces -- configuration file for ifup(8), ifdown(8)
- 
-# The loopback interface
-auto lo
-iface lo inet loopback
-
-# Wireless interfaces
-auto wlan0
-iface wlan0 inet dhcp
-	wpa-driver nl80211
-	wpa-conf /etc/wpa_supplicant.conf
diff --git a/recipes-core/init-ifupdown/init-ifupdown_%.bbappend b/recipes-core/init-ifupdown/init-ifupdown_%.bbappend
deleted file mode 100644
index a30ad6fd6a2cc8731565668654878245c4ad1a4d..0000000000000000000000000000000000000000
--- a/recipes-core/init-ifupdown/init-ifupdown_%.bbappend
+++ /dev/null
@@ -1,3 +0,0 @@
-FILESEXTRAPATHS_prepend_u96v2-sbc := "${THISDIR}/files:"
-
-INITSCRIPT_PARAMS_u96v2-sbc = "start 03 2 3 4 5 . stop 80 0 6 1 ."
diff --git a/recipes-graphics/xorg-xserver/xserver-xf86-config/uz7ev-evcc-hdmi/xorg.conf b/recipes-graphics/xorg-xserver/xserver-xf86-config/uz7ev-evcc-hdmi/xorg.conf
deleted file mode 100644
index 568069ac70733f2a50bdc0f3ecd8e1b1ba2113d2..0000000000000000000000000000000000000000
--- a/recipes-graphics/xorg-xserver/xserver-xf86-config/uz7ev-evcc-hdmi/xorg.conf
+++ /dev/null
@@ -1,37 +0,0 @@
-Section "InputDevice"
-	Identifier	"System Mouse"
-	Driver		"mouse"
-	Option		"Device"		"/dev/input/mouse0"
-EndSection
-
-Section "InputDevice"
-	Identifier	"System Keyboard"
-	Driver		"kbd"
-	Option		"Device"		"/dev/input/event0"
-EndSection
-
-Section "Device"
-	Identifier	"ZynqMP"
-	Driver		"armsoc"
-	Option		"DRICard"		"2"
-	Option		"DRI2"			"true"
-	Option		"DRI2_PAGE_FLIP"	"false"
-	Option		"DRI2_WAIT_VSYNC"	"true"
-	Option		"SWcursorLCD"		"false"
-	Option		"DEBUG"			"false"
-	Option		"DPMS"			"false"
-EndSection
-
-Section "Screen"
-	Identifier	"DefaultScreen"
-	Device		"ZynqMP"
-	DefaultDepth	24
-EndSection
-
-Section "ServerLayout"
-	Identifier	"ServerLayout0"
-	Option		"StandbyTime"		"0"
-	Option		"SuspendTime"		"0"
-	Option		"OffTime"		"0"
-	Option		"BlankTime"		"0"
-EndSection
diff --git a/recipes-graphics/xorg-xserver/xserver-xf86-config/zynqmp/xorg.conf b/recipes-graphics/xorg-xserver/xserver-xf86-config/zynqmp/xorg.conf
deleted file mode 100644
index 1f23fb5f24fd090ffcbf5bab9c18770656345d6e..0000000000000000000000000000000000000000
--- a/recipes-graphics/xorg-xserver/xserver-xf86-config/zynqmp/xorg.conf
+++ /dev/null
@@ -1,37 +0,0 @@
-Section "InputDevice"
-	Identifier	"System Mouse"
-	Driver		"mouse"
-	Option		"Device" "/dev/input/mouse0"
-EndSection
-
-Section "InputDevice"
-	Identifier	"System Keyboard"
-	Driver		"kbd"
-	Option		"Device" "/dev/input/event0"
-EndSection
-
-Section "Device"
-        Identifier      "ZynqMP"
-        Driver          "armsoc"
-        Option          "DRI2"                  "true"
-        Option          "DRI2_PAGE_FLIP"        "false"
-        Option          "DRI2_WAIT_VSYNC"       "true"
-        Option          "SWcursorLCD"           "false"
-        Option          "DEBUG"                 "false"
-EndSection
-
-Section "Screen"
-        Identifier      "DefaultScreen"
-        Device          "ZynqMP"
-        DefaultDepth    16
-	SubSection "Display"
-	    Modes "1920x1080"
-	EndSubSection
-EndSection
-
-Section "ServerFlags"
-   Option "BlankTime" "0"
-   Option "StandbyTime" "0"
-   Option "SuspendTime" "0"
-   Option "OffTime" "0"
-EndSection
\ No newline at end of file
diff --git a/recipes-graphics/xorg-xserver/xserver-xf86-config_%.bbappend b/recipes-graphics/xorg-xserver/xserver-xf86-config_%.bbappend
deleted file mode 100644
index 72d991c7e590bcac43dd2ab6da2de898cd36f829..0000000000000000000000000000000000000000
--- a/recipes-graphics/xorg-xserver/xserver-xf86-config_%.bbappend
+++ /dev/null
@@ -1 +0,0 @@
-FILESEXTRAPATHS_prepend := "${THISDIR}/${PN}:"
diff --git a/recipes-multimedia/pulseaudio-service/files/pulseaudio.service b/recipes-multimedia/pulseaudio-service/files/pulseaudio.service
deleted file mode 100644
index 6c5820b3f40d8cbcf85e591aff5bb36b79de65ea..0000000000000000000000000000000000000000
--- a/recipes-multimedia/pulseaudio-service/files/pulseaudio.service
+++ /dev/null
@@ -1,11 +0,0 @@
-[Unit]
-Description=PulseAudio Sound System
-#After=alsa-restore.service
-
-[Service]
-BusName=org.pulseaudio.Server
-ExecStart=/usr/bin/pulseaudio --system --resample-method=src-sinc-fastest
-Restart=always
-
-[Install]
-WantedBy=multi-user.target
diff --git a/recipes-multimedia/pulseaudio-service/pulseaudio-service_1.0.bb b/recipes-multimedia/pulseaudio-service/pulseaudio-service_1.0.bb
deleted file mode 100644
index 9af3fc7dc5d7499ef4d6db4ec5389e6076be160e..0000000000000000000000000000000000000000
--- a/recipes-multimedia/pulseaudio-service/pulseaudio-service_1.0.bb
+++ /dev/null
@@ -1,28 +0,0 @@
-DESCRIPTION = "Pulseaudio systemd service"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-inherit systemd useradd
-
-DEPENDS = "pulseaudio"
-
-SRC_URI += "\
-    file://pulseaudio.service \
-    "
-
-SYSTEMD_SERVICE_${PN} = "pulseaudio.service"
-
-FILES_${PN} = " \
-    /etc/systemd/system/pulseaudio.service \
-"
-
-USERADD_PACKAGES = "pulseaudio-service"
-GROUPMEMS_PARAM_pulseaudio-service = " --add root --group audio"
-
-do_install_append() {
-    if ${@bb.utils.contains('DISTRO_FEATURES','systemd','true','false',d)}; then
-        install -d ${D}/etc/systemd/system
-        install -m 0644 ${WORKDIR}/pulseaudio.service ${D}/etc/systemd/system/pulseaudio.service
-    fi
-
-}
diff --git a/recipes-multimedia/pulseaudio/files/system.pa b/recipes-multimedia/pulseaudio/files/system.pa
deleted file mode 100644
index ba43ccc73a09857b59d79335734e503b735fcc5d..0000000000000000000000000000000000000000
--- a/recipes-multimedia/pulseaudio/files/system.pa
+++ /dev/null
@@ -1,64 +0,0 @@
-#!/usr/bin/pulseaudio -nF
-#
-# This file is part of PulseAudio.
-#
-# PulseAudio is free software; you can redistribute it and/or modify it
-# under the terms of the GNU Lesser General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# PulseAudio is distributed in the hope that it will be useful, but
-# WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
-# General Public License for more details.
-#
-# You should have received a copy of the GNU Lesser General Public License
-# along with PulseAudio; if not, write to the Free Software Foundation,
-# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
-
-# This startup script is used only if PulseAudio is started in system
-# mode.
-
-### Automatically load driver modules depending on the hardware available
-.ifexists module-udev-detect.so
-load-module module-udev-detect
-.else
-### Use the static hardware detection module (for systems that lack udev/hal support)
-load-module module-detect
-.endif
-
-### Load several protocols
-.ifexists module-esound-protocol-unix.so
-load-module module-esound-protocol-unix
-.endif
-load-module module-native-protocol-unix auth-cookie-enabled=0 auth-anonymous=1
-
-### Load bluetooth modules
-
-load-module module-bluetooth-policy
-#load-module module-bluez5-device
-load-module module-bluez5-discover
-
-
-### Automatically restore the volume of streams and devices
-load-module module-stream-restore
-load-module module-device-restore
-
-### Automatically restore the default sink/source when changed by the user
-### during runtime
-### NOTE: This should be loaded as early as possible so that subsequent modules
-### that look up the default sink/source get the right value
-load-module module-default-device-restore
-
-### Automatically move streams to the default sink if the sink they are
-### connected to dies, similar for sources
-load-module module-rescue-streams
-
-### Make sure we always have a sink around, even if it is a null sink.
-load-module module-always-sink
-
-### Automatically suspend sinks/sources that become idle for too long
-load-module module-suspend-on-idle
-
-### Enable positioned event sounds
-load-module module-position-event-sounds
diff --git a/recipes-multimedia/pulseaudio/pulseaudio_%.bbappend b/recipes-multimedia/pulseaudio/pulseaudio_%.bbappend
deleted file mode 100644
index 58caebb1f0e88a6ea906ce0e1e745ba1ada4b13f..0000000000000000000000000000000000000000
--- a/recipes-multimedia/pulseaudio/pulseaudio_%.bbappend
+++ /dev/null
@@ -1,12 +0,0 @@
-DESCRIPTION = "Adds custom pulseaudio system.pa configuration file"
-LICENSE = "MIT"
-LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"
-
-FILESEXTRAPATHS_prepend := "${THISDIR}/files:"
-SRC_URI += "file://system.pa"
-
-
-do_install_append() {
-	install -d ${D}/etc/pulse
-	install -m 0644 ${WORKDIR}/system.pa ${D}/etc/pulse/system.pa
-}
diff --git a/recipes-support/opencv/opencv_%.bbappend b/recipes-support/opencv/opencv_%.bbappend
deleted file mode 100644
index 8e72ebaabf6e6de843de2e1f6ba8e74dbfccf734..0000000000000000000000000000000000000000
--- a/recipes-support/opencv/opencv_%.bbappend
+++ /dev/null
@@ -1,2 +0,0 @@
-PACKAGECONFIG_append = " libav "
-
